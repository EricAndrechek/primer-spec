/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../node_modules/anchor-js/anchor.js":
/*!*******************************************!*\
  !*** ../node_modules/anchor-js/anchor.js ***!
  \*******************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* eslint-env amd */
/* globals module:false */

// https://github.com/umdjs/umd/blob/master/templates/returnExports.js
(function (root, factory) {
  'use strict';

  if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(this, function () {
  'use strict';

  function AnchorJS(options) {
    this.options = options || {};
    this.elements = [];

    /**
     * Assigns options to the internal options object, and provides defaults.
     * @param {Object} opts - Options object
     */
    function _applyRemainingDefaultOptions(opts) {
      opts.icon = Object.prototype.hasOwnProperty.call(opts, 'icon') ? opts.icon : '\uE9CB'; // Accepts characters (and also URLs?), like  '#', '¶', '❡', or '§'.
      opts.visible = Object.prototype.hasOwnProperty.call(opts, 'visible') ? opts.visible : 'hover'; // Also accepts 'always' & 'touch'
      opts.placement = Object.prototype.hasOwnProperty.call(opts, 'placement') ? opts.placement : 'right'; // Also accepts 'left'
      opts.ariaLabel = Object.prototype.hasOwnProperty.call(opts, 'ariaLabel') ? opts.ariaLabel : 'Anchor'; // Accepts any text.
      opts.class = Object.prototype.hasOwnProperty.call(opts, 'class') ? opts.class : ''; // Accepts any class name.
      opts.base = Object.prototype.hasOwnProperty.call(opts, 'base') ? opts.base : ''; // Accepts any base URI.
      // Using Math.floor here will ensure the value is Number-cast and an integer.
      opts.truncate = Object.prototype.hasOwnProperty.call(opts, 'truncate') ? Math.floor(opts.truncate) : 64; // Accepts any value that can be typecast to a number.
      opts.titleText = Object.prototype.hasOwnProperty.call(opts, 'titleText') ? opts.titleText : ''; // Accepts any text.
    }

    _applyRemainingDefaultOptions(this.options);

    /**
     * Checks to see if this device supports touch. Uses criteria pulled from Modernizr:
     * https://github.com/Modernizr/Modernizr/blob/da22eb27631fc4957f67607fe6042e85c0a84656/feature-detects/touchevents.js#L40
     * @return {Boolean} - true if the current device supports touch.
     */
    this.isTouchDevice = function() {
      return Boolean('ontouchstart' in window || window.TouchEvent || window.DocumentTouch && document instanceof DocumentTouch);
    };

    /**
     * Add anchor links to page elements.
     * @param  {String|Array|Nodelist} selector - A CSS selector for targeting the elements you wish to add anchor links
     *                                            to. Also accepts an array or nodeList containing the relavant elements.
     * @return {this}                           - The AnchorJS object
     */
    this.add = function(selector) {
      var elements,
          elsWithIds,
          idList,
          elementID,
          i,
          index,
          count,
          tidyText,
          newTidyText,
          anchor,
          visibleOptionToUse,
          hrefBase,
          indexesToDrop = [];

      // We reapply options here because somebody may have overwritten the default options object when setting options.
      // For example, this overwrites all options but visible:
      //
      // anchors.options = { visible: 'always'; }
      _applyRemainingDefaultOptions(this.options);

      visibleOptionToUse = this.options.visible;
      if (visibleOptionToUse === 'touch') {
        visibleOptionToUse = this.isTouchDevice() ? 'always' : 'hover';
      }

      // Provide a sensible default selector, if none is given.
      if (!selector) {
        selector = 'h2, h3, h4, h5, h6';
      }

      elements = _getElements(selector);

      if (elements.length === 0) {
        return this;
      }

      _addBaselineStyles();

      // We produce a list of existing IDs so we don't generate a duplicate.
      elsWithIds = document.querySelectorAll('[id]');
      idList = [].map.call(elsWithIds, function(el) {
        return el.id;
      });

      for (i = 0; i < elements.length; i++) {
        if (this.hasAnchorJSLink(elements[i])) {
          indexesToDrop.push(i);
          continue;
        }

        if (elements[i].hasAttribute('id')) {
          elementID = elements[i].getAttribute('id');
        } else if (elements[i].hasAttribute('data-anchor-id')) {
          elementID = elements[i].getAttribute('data-anchor-id');
        } else {
          tidyText = this.urlify(elements[i].textContent);

          // Compare our generated ID to existing IDs (and increment it if needed)
          // before we add it to the page.
          newTidyText = tidyText;
          count = 0;
          do {
            if (index !== undefined) {
              newTidyText = tidyText + '-' + count;
            }

            index = idList.indexOf(newTidyText);
            count += 1;
          } while (index !== -1);

          index = undefined;
          idList.push(newTidyText);

          elements[i].setAttribute('id', newTidyText);
          elementID = newTidyText;
        }

        // The following code efficiently builds this DOM structure:
        // `<a class="anchorjs-link ${this.options.class}"
        //     aria-label="${this.options.ariaLabel}"
        //     data-anchorjs-icon="${this.options.icon}"
        //     title="${this.options.titleText}"
        //     href="this.options.base#${elementID}">
        // </a>;`
        anchor = document.createElement('a');
        anchor.className = 'anchorjs-link ' + this.options.class;
        anchor.setAttribute('aria-label', this.options.ariaLabel);
        anchor.setAttribute('data-anchorjs-icon', this.options.icon);
        if (this.options.titleText) {
          anchor.title = this.options.titleText;
        }

        // Adjust the href if there's a <base> tag. See https://github.com/bryanbraun/anchorjs/issues/98
        hrefBase = document.querySelector('base') ? window.location.pathname + window.location.search : '';
        hrefBase = this.options.base || hrefBase;
        anchor.href = hrefBase + '#' + elementID;

        if (visibleOptionToUse === 'always') {
          anchor.style.opacity = '1';
        }

        if (this.options.icon === '\uE9CB') {
          anchor.style.font = '1em/1 anchorjs-icons';

          // We set lineHeight = 1 here because the `anchorjs-icons` font family could otherwise affect the
          // height of the heading. This isn't the case for icons with `placement: left`, so we restore
          // line-height: inherit in that case, ensuring they remain positioned correctly. For more info,
          // see https://github.com/bryanbraun/anchorjs/issues/39.
          if (this.options.placement === 'left') {
            anchor.style.lineHeight = 'inherit';
          }
        }

        if (this.options.placement === 'left') {
          anchor.style.position = 'absolute';
          anchor.style.marginLeft = '-1em';
          anchor.style.paddingRight = '.5em';
          elements[i].insertBefore(anchor, elements[i].firstChild);
        } else { // if the option provided is `right` (or anything else).
          anchor.style.paddingLeft = '.375em';
          elements[i].appendChild(anchor);
        }
      }

      for (i = 0; i < indexesToDrop.length; i++) {
        elements.splice(indexesToDrop[i] - i, 1);
      }

      this.elements = this.elements.concat(elements);

      return this;
    };

    /**
     * Removes all anchorjs-links from elements targeted by the selector.
     * @param  {String|Array|Nodelist} selector - A CSS selector string targeting elements with anchor links,
     *                                            OR a nodeList / array containing the DOM elements.
     * @return {this}                           - The AnchorJS object
     */
    this.remove = function(selector) {
      var index,
          domAnchor,
          elements = _getElements(selector);

      for (var i = 0; i < elements.length; i++) {
        domAnchor = elements[i].querySelector('.anchorjs-link');
        if (domAnchor) {
          // Drop the element from our main list, if it's in there.
          index = this.elements.indexOf(elements[i]);
          if (index !== -1) {
            this.elements.splice(index, 1);
          }

          // Remove the anchor from the DOM.
          elements[i].removeChild(domAnchor);
        }
      }

      return this;
    };

    /**
     * Removes all anchorjs links. Mostly used for tests.
     */
    this.removeAll = function() {
      this.remove(this.elements);
    };

    /**
     * Urlify - Refine text so it makes a good ID.
     *
     * To do this, we remove apostrophes, replace non-safe characters with hyphens,
     * remove extra hyphens, truncate, trim hyphens, and make lowercase.
     *
     * @param  {String} text - Any text. Usually pulled from the webpage element we are linking to.
     * @return {String}      - hyphen-delimited text for use in IDs and URLs.
     */
    this.urlify = function(text) {
      // Decode HTML characters such as '&nbsp;' first.
      var textareaElement = document.createElement('textarea');
      textareaElement.innerHTML = text;
      text = textareaElement.value;

      // Regex for finding the non-safe URL characters (many need escaping):
      //   & +$,:;=?@"#{}|^~[`%!'<>]./()*\ (newlines, tabs, backspace, vertical tabs, and non-breaking space)
      var nonsafeChars = /[& +$,:;=?@"#{}|^~[`%!'<>\]./()*\\\n\t\b\v\u00A0]/g;

      // The reason we include this _applyRemainingDefaultOptions is so urlify can be called independently,
      // even after setting options. This can be useful for tests or other applications.
      if (!this.options.truncate) {
        _applyRemainingDefaultOptions(this.options);
      }

      // Note: we trim hyphens after truncating because truncating can cause dangling hyphens.
      // Example string:                      // " ⚡⚡ Don't forget: URL fragments should be i18n-friendly, hyphenated, short, and clean."
      return text.trim()                      // "⚡⚡ Don't forget: URL fragments should be i18n-friendly, hyphenated, short, and clean."
        .replace(/'/gi, '')                   // "⚡⚡ Dont forget: URL fragments should be i18n-friendly, hyphenated, short, and clean."
        .replace(nonsafeChars, '-')           // "⚡⚡-Dont-forget--URL-fragments-should-be-i18n-friendly--hyphenated--short--and-clean-"
        .replace(/-{2,}/g, '-')               // "⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated-short-and-clean-"
        .substring(0, this.options.truncate)  // "⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated-"
        .replace(/^-+|-+$/gm, '')             // "⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated"
        .toLowerCase();                       // "⚡⚡-dont-forget-url-fragments-should-be-i18n-friendly-hyphenated"
    };

    /**
     * Determines if this element already has an AnchorJS link on it.
     * Uses this technique: https://stackoverflow.com/a/5898748/1154642
     * @param    {HTMLElement}  el - a DOM node
     * @return   {Boolean}     true/false
     */
    this.hasAnchorJSLink = function(el) {
      var hasLeftAnchor = el.firstChild && (' ' + el.firstChild.className + ' ').indexOf(' anchorjs-link ') > -1,
          hasRightAnchor = el.lastChild && (' ' + el.lastChild.className + ' ').indexOf(' anchorjs-link ') > -1;

      return hasLeftAnchor || hasRightAnchor || false;
    };

    /**
     * Turns a selector, nodeList, or array of elements into an array of elements (so we can use array methods).
     * It also throws errors on any other inputs. Used to handle inputs to .add and .remove.
     * @param  {String|Array|Nodelist} input - A CSS selector string targeting elements with anchor links,
     *                                         OR a nodeList / array containing the DOM elements.
     * @return {Array} - An array containing the elements we want.
     */
    function _getElements(input) {
      var elements;
      if (typeof input === 'string' || input instanceof String) {
        // See https://davidwalsh.name/nodelist-array for the technique transforming nodeList -> Array.
        elements = [].slice.call(document.querySelectorAll(input));
      // I checked the 'input instanceof NodeList' test in IE9 and modern browsers and it worked for me.
      } else if (Array.isArray(input) || input instanceof NodeList) {
        elements = [].slice.call(input);
      } else {
        throw new TypeError('The selector provided to AnchorJS was invalid.');
      }

      return elements;
    }

    /**
     * _addBaselineStyles
     * Adds baseline styles to the page, used by all AnchorJS links irregardless of configuration.
     */
    function _addBaselineStyles() {
      // We don't want to add global baseline styles if they've been added before.
      if (document.head.querySelector('style.anchorjs') !== null) {
        return;
      }

      var style = document.createElement('style'),
          linkRule =
          '.anchorjs-link{'                        +
            'opacity:0;'                           +
            'text-decoration:none;'                +
            '-webkit-font-smoothing:antialiased;'  +
            '-moz-osx-font-smoothing:grayscale'    +
          '}',
          hoverRule =
          ':hover>.anchorjs-link,'                 +
          '.anchorjs-link:focus{'                  +
            'opacity:1'                            +
          '}',
          anchorjsLinkFontFace =
          '@font-face{'                            +
            'font-family:anchorjs-icons;'          + // Icon from icomoon; 10px wide & 10px tall; 2 empty below & 4 above
            'src:url(data:n/a;base64,AAEAAAALAIAAAwAwT1MvMg8yG2cAAAE4AAAAYGNtYXDp3gC3AAABpAAAAExnYXNwAAAAEAAAA9wAAAAIZ2x5ZlQCcfwAAAH4AAABCGhlYWQHFvHyAAAAvAAAADZoaGVhBnACFwAAAPQAAAAkaG10eASAADEAAAGYAAAADGxvY2EACACEAAAB8AAAAAhtYXhwAAYAVwAAARgAAAAgbmFtZQGOH9cAAAMAAAAAunBvc3QAAwAAAAADvAAAACAAAQAAAAEAAHzE2p9fDzz1AAkEAAAAAADRecUWAAAAANQA6R8AAAAAAoACwAAAAAgAAgAAAAAAAAABAAADwP/AAAACgAAA/9MCrQABAAAAAAAAAAAAAAAAAAAAAwABAAAAAwBVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAMCQAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAg//0DwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAAIAAAACgAAxAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADAAAAAIAAgAAgAAACDpy//9//8AAAAg6cv//f///+EWNwADAAEAAAAAAAAAAAAAAAAACACEAAEAAAAAAAAAAAAAAAAxAAACAAQARAKAAsAAKwBUAAABIiYnJjQ3NzY2MzIWFxYUBwcGIicmNDc3NjQnJiYjIgYHBwYUFxYUBwYGIwciJicmNDc3NjIXFhQHBwYUFxYWMzI2Nzc2NCcmNDc2MhcWFAcHBgYjARQGDAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiANehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAAADACWAAEAAAAAAAEACAAAAAEAAAAAAAIAAwAIAAEAAAAAAAMACAAAAAEAAAAAAAQACAAAAAEAAAAAAAUAAQALAAEAAAAAAAYACAAAAAMAAQQJAAEAEAAMAAMAAQQJAAIABgAcAAMAAQQJAAMAEAAMAAMAAQQJAAQAEAAMAAMAAQQJAAUAAgAiAAMAAQQJAAYAEAAMYW5jaG9yanM0MDBAAGEAbgBjAGgAbwByAGoAcwA0ADAAMABAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAP) format("truetype")' +
          '}',
          pseudoElContent =
          '[data-anchorjs-icon]::after{'           +
            'content:attr(data-anchorjs-icon)'     +
          '}',
          firstStyleEl;

      style.className = 'anchorjs';
      style.appendChild(document.createTextNode('')); // Necessary for Webkit.

      // We place it in the head with the other style tags, if possible, so as to
      // not look out of place. We insert before the others so these styles can be
      // overridden if necessary.
      firstStyleEl = document.head.querySelector('[rel="stylesheet"],style');
      if (firstStyleEl === undefined) {
        document.head.appendChild(style);
      } else {
        document.head.insertBefore(style, firstStyleEl);
      }

      style.sheet.insertRule(linkRule, style.sheet.cssRules.length);
      style.sheet.insertRule(hoverRule, style.sheet.cssRules.length);
      style.sheet.insertRule(pseudoElContent, style.sheet.cssRules.length);
      style.sheet.insertRule(anchorjsLinkFontFace, style.sheet.cssRules.length);
    }
  }

  return AnchorJS;
}));


/***/ }),

/***/ "../node_modules/clsx/dist/clsx.m.js":
/*!*******************************************!*\
  !*** ../node_modules/clsx/dist/clsx.m.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function toVal(mix) {
	var k, y, str='';

	if (typeof mix === 'string' || typeof mix === 'number') {
		str += mix;
	} else if (typeof mix === 'object') {
		if (Array.isArray(mix)) {
			for (k=0; k < mix.length; k++) {
				if (mix[k]) {
					if (y = toVal(mix[k])) {
						str && (str += ' ');
						str += y;
					}
				}
			}
		} else {
			for (k in mix) {
				if (mix[k]) {
					str && (str += ' ');
					str += k;
				}
			}
		}
	}

	return str;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
	var i=0, tmp, x, str='';
	while (i < arguments.length) {
		if (tmp = arguments[i++]) {
			if (x = toVal(tmp)) {
				str && (str += ' ');
				str += x
			}
		}
	}
	return str;
}


/***/ }),

/***/ "../node_modules/lodash.deburr/index.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash.deburr/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match Latin Unicode letters (excluding mathematical operators). */
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

/** Used to compose unicode character classes. */
var rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
    rsComboSymbolsRange = '\\u20d0-\\u20f0';

/** Used to compose unicode capture groups. */
var rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';

/**
 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
 */
var reComboMark = RegExp(rsCombo, 'g');

/** Used to map Latin Unicode letters to basic Latin letters. */
var deburredLetters = {
  // Latin-1 Supplement block.
  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
  '\xc7': 'C',  '\xe7': 'c',
  '\xd0': 'D',  '\xf0': 'd',
  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
  '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
  '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
  '\xd1': 'N',  '\xf1': 'n',
  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
  '\xc6': 'Ae', '\xe6': 'ae',
  '\xde': 'Th', '\xfe': 'th',
  '\xdf': 'ss',
  // Latin Extended-A block.
  '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
  '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
  '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
  '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
  '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
  '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
  '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
  '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
  '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
  '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
  '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
  '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
  '\u0134': 'J',  '\u0135': 'j',
  '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
  '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
  '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
  '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
  '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
  '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
  '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
  '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
  '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
  '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
  '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
  '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
  '\u0163': 't',  '\u0165': 't', '\u0167': 't',
  '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
  '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
  '\u0174': 'W',  '\u0175': 'w',
  '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
  '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
  '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
  '\u0132': 'IJ', '\u0133': 'ij',
  '\u0152': 'Oe', '\u0153': 'oe',
  '\u0149': "'n", '\u017f': 'ss'
};

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyOf(object) {
  return function(key) {
    return object == null ? undefined : object[key];
  };
}

/**
 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
 * letters to basic Latin letters.
 *
 * @private
 * @param {string} letter The matched letter to deburr.
 * @returns {string} Returns the deburred letter.
 */
var deburrLetter = basePropertyOf(deburredLetters);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Built-in value references. */
var Symbol = root.Symbol;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

/**
 * Deburrs `string` by converting
 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
 * letters to basic Latin letters and removing
 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to deburr.
 * @returns {string} Returns the deburred string.
 * @example
 *
 * _.deburr('déjà vu');
 * // => 'deja vu'
 */
function deburr(string) {
  string = toString(string);
  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
}

module.exports = deburr;


/***/ }),

/***/ "../node_modules/preact/dist/preact.module.js":
/*!****************************************************!*\
  !*** ../node_modules/preact/dist/preact.module.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ S),
/* harmony export */   "h": () => (/* binding */ v),
/* harmony export */   "Fragment": () => (/* binding */ d),
/* harmony export */   "options": () => (/* binding */ l)
/* harmony export */ });
/* unused harmony exports hydrate, createElement, createRef, isValidElement, Component, cloneElement, createContext, toChildArray */
var n,l,u,i,t,r,o,f,e={},c=[],s=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function a(n,l){for(var u in l)n[u]=l[u];return n}function h(n){var l=n.parentNode;l&&l.removeChild(n)}function v(l,u,i){var t,r,o,f={};for(o in u)"key"==o?t=u[o]:"ref"==o?r=u[o]:f[o]=u[o];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),"function"==typeof l&&null!=l.defaultProps)for(o in l.defaultProps)void 0===f[o]&&(f[o]=l.defaultProps[o]);return y(l,f,t,r,null)}function y(n,i,t,r,o){var f={type:n,props:i,key:t,ref:r,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==o?++u:o};return null==o&&null!=l.vnode&&l.vnode(f),f}function p(){return{current:null}}function d(n){return n.children}function _(n,l){this.props=n,this.context=l}function k(n,l){if(null==l)return n.__?k(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return"function"==typeof n.type?k(n):null}function b(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return b(n)}}function m(n){(!n.__d&&(n.__d=!0)&&t.push(n)&&!g.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||r)(g)}function g(){for(var n;g.__r=t.length;)n=t.sort(function(n,l){return n.__v.__b-l.__v.__b}),t=[],n.some(function(n){var l,u,i,t,r,o;n.__d&&(r=(t=(l=n).__v).__e,(o=l.__P)&&(u=[],(i=a({},t)).__v=t.__v+1,j(o,t,i,l.__n,void 0!==o.ownerSVGElement,null!=t.__h?[r]:null,u,null==r?k(t):r,t.__h),z(u,t),t.__e!=r&&b(t)))})}function w(n,l,u,i,t,r,o,f,s,a){var h,v,p,_,b,m,g,w=i&&i.__k||c,A=w.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(_=u.__k[h]=null==(_=l[h])||"boolean"==typeof _?null:"string"==typeof _||"number"==typeof _||"bigint"==typeof _?y(null,_,null,null,_):Array.isArray(_)?y(d,{children:_},null,null,null):_.__b>0?y(_.type,_.props,_.key,null,_.__v):_)){if(_.__=u,_.__b=u.__b+1,null===(p=w[h])||p&&_.key==p.key&&_.type===p.type)w[h]=void 0;else for(v=0;v<A;v++){if((p=w[v])&&_.key==p.key&&_.type===p.type){w[v]=void 0;break}p=null}j(n,_,p=p||e,t,r,o,f,s,a),b=_.__e,(v=_.ref)&&p.ref!=v&&(g||(g=[]),p.ref&&g.push(p.ref,null,_),g.push(v,_.__c||b,_)),null!=b?(null==m&&(m=b),"function"==typeof _.type&&_.__k===p.__k?_.__d=s=x(_,s,n):s=P(n,_,p,w,b,s),"function"==typeof u.type&&(u.__d=s)):s&&p.__e==s&&s.parentNode!=n&&(s=k(p))}for(u.__e=m,h=A;h--;)null!=w[h]&&("function"==typeof u.type&&null!=w[h].__e&&w[h].__e==u.__d&&(u.__d=k(i,h+1)),N(w[h],w[h]));if(g)for(h=0;h<g.length;h++)M(g[h],g[++h],g[++h])}function x(n,l,u){for(var i,t=n.__k,r=0;t&&r<t.length;r++)(i=t[r])&&(i.__=n,l="function"==typeof i.type?x(i,l,u):P(u,i,i,t,i.__e,l));return l}function A(n,l){return l=l||[],null==n||"boolean"==typeof n||(Array.isArray(n)?n.some(function(n){A(n,l)}):l.push(n)),l}function P(n,l,u,i,t,r){var o,f,e;if(void 0!==l.__d)o=l.__d,l.__d=void 0;else if(null==u||t!=r||null==t.parentNode)n:if(null==r||r.parentNode!==n)n.appendChild(t),o=null;else{for(f=r,e=0;(f=f.nextSibling)&&e<i.length;e+=2)if(f==t)break n;n.insertBefore(t,r),o=r}return void 0!==o?o:t.nextSibling}function C(n,l,u,i,t){var r;for(r in u)"children"===r||"key"===r||r in l||H(n,r,null,u[r],i);for(r in l)t&&"function"!=typeof l[r]||"children"===r||"key"===r||"value"===r||"checked"===r||u[r]===l[r]||H(n,r,l[r],u[r],i)}function $(n,l,u){"-"===l[0]?n.setProperty(l,u):n[l]=null==u?"":"number"!=typeof u||s.test(l)?u:u+"px"}function H(n,l,u,i,t){var r;n:if("style"===l)if("string"==typeof u)n.style.cssText=u;else{if("string"==typeof i&&(n.style.cssText=i=""),i)for(l in i)u&&l in u||$(n.style,l,"");if(u)for(l in u)i&&u[l]===i[l]||$(n.style,l,u[l])}else if("o"===l[0]&&"n"===l[1])r=l!==(l=l.replace(/Capture$/,"")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+r]=u,u?i||n.addEventListener(l,r?T:I,r):n.removeEventListener(l,r?T:I,r);else if("dangerouslySetInnerHTML"!==l){if(t)l=l.replace(/xlink[H:h]/,"h").replace(/sName$/,"s");else if("href"!==l&&"list"!==l&&"form"!==l&&"tabIndex"!==l&&"download"!==l&&l in n)try{n[l]=null==u?"":u;break n}catch(n){}"function"==typeof u||(null!=u&&(!1!==u||"a"===l[0]&&"r"===l[1])?n.setAttribute(l,u):n.removeAttribute(l))}}function I(n){this.l[n.type+!1](l.event?l.event(n):n)}function T(n){this.l[n.type+!0](l.event?l.event(n):n)}function j(n,u,i,t,r,o,f,e,c){var s,h,v,y,p,k,b,m,g,x,A,P=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,o=[e]),(s=l.__b)&&s(u);try{n:if("function"==typeof P){if(m=u.props,g=(s=P.contextType)&&t[s.__c],x=s?g?g.props.value:s.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:("prototype"in P&&P.prototype.render?u.__c=h=new P(m,x):(u.__c=h=new _(m,x),h.constructor=P,h.render=O),g&&g.sub(h),h.props=m,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[]),null==h.__s&&(h.__s=h.state),null!=P.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=a({},h.__s)),a(h.__s,P.getDerivedStateFromProps(m,h.__s))),y=h.props,p=h.state,v)null==P.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==P.getDerivedStateFromProps&&m!==y&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(m,x),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(m,h.__s,x)||u.__v===i.__v){h.props=m,h.state=h.__s,u.__v!==i.__v&&(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(m,h.__s,x),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(y,p,k)})}h.context=x,h.props=m,h.state=h.__s,(s=l.__r)&&s(u),h.__d=!1,h.__v=u,h.__P=n,s=h.render(h.props,h.state,h.context),h.state=h.__s,null!=h.getChildContext&&(t=a(a({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,p)),A=null!=s&&s.type===d&&null==s.key?s.props.children:s,w(n,Array.isArray(A)?A:[A],u,i,t,r,o,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&&f.push(h),b&&(h.__E=h.__=null),h.__e=!1}else null==o&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L(i.__e,u,i,t,r,o,f,c);(s=l.diffed)&&s(u)}catch(n){u.__v=null,(c||null!=o)&&(u.__e=e,u.__h=!!c,o[o.indexOf(e)]=null),l.__e(n,u,i)}}function z(n,u){l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function L(l,u,i,t,r,o,f,c){var s,a,v,y=i.props,p=u.props,d=u.type,_=0;if("svg"===d&&(r=!0),null!=o)for(;_<o.length;_++)if((s=o[_])&&"setAttribute"in s==!!d&&(d?s.localName===d:3===s.nodeType)){l=s,o[_]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=r?document.createElementNS("http://www.w3.org/2000/svg",d):document.createElement(d,p.is&&p),o=null,c=!1}if(null===d)y===p||c&&l.data===p||(l.data=p);else{if(o=o&&n.call(l.childNodes),a=(y=i.props||e).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=o)for(y={},_=0;_<l.attributes.length;_++)y[l.attributes[_].name]=l.attributes[_].value;(v||a)&&(v&&(a&&v.__html==a.__html||v.__html===l.innerHTML)||(l.innerHTML=v&&v.__html||""))}if(C(l,p,y,r,c),v)u.__k=[];else if(_=u.props.children,w(l,Array.isArray(_)?_:[_],u,i,t,r&&"foreignObject"!==d,o,f,o?o[0]:i.__k&&k(i,0),c),null!=o)for(_=o.length;_--;)null!=o[_]&&h(o[_]);c||("value"in p&&void 0!==(_=p.value)&&(_!==y.value||_!==l.value||"progress"===d&&!_)&&H(l,"value",_,y.value,!1),"checked"in p&&void 0!==(_=p.checked)&&_!==l.checked&&H(l,"checked",_,y.checked,!1))}return l}function M(n,u,i){try{"function"==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function N(n,u,i){var t,r;if(l.unmount&&l.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||M(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null}if(t=n.__k)for(r=0;r<t.length;r++)t[r]&&N(t[r],u,"function"!=typeof n.type);i||null==n.__e||h(n.__e),n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function S(u,i,t){var r,o,f;l.__&&l.__(u,i),o=(r="function"==typeof t)?null:t&&t.__k||i.__k,f=[],j(i,u=(!r&&t||i).__k=v(d,null,[u]),o||e,e,void 0!==i.ownerSVGElement,!r&&t?[t]:o?null:i.firstChild?n.call(i.childNodes):null,f,!r&&t?t:o?o.__e:i.firstChild,r),z(f,u)}function q(n,l){S(n,l,q)}function B(l,u,i){var t,r,o,f=a({},l.props);for(o in u)"key"==o?t=u[o]:"ref"==o?r=u[o]:f[o]=u[o];return arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),y(l.type,f,t||l.key,r||l.ref,null)}function D(n,l){var u={__c:l="__cC"+f++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(m)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=c.slice,l={__e:function(n,l){for(var u,i,t;l=l.__;)if((u=l.__c)&&!u.__)try{if((i=u.constructor)&&null!=i.getDerivedStateFromError&&(u.setState(i.getDerivedStateFromError(n)),t=u.__d),null!=u.componentDidCatch&&(u.componentDidCatch(n),t=u.__d),t)return u.__E=u}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&&void 0===n.constructor},_.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=a({},this.state),"function"==typeof n&&(n=n(a({},u),this.props)),n&&a(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),m(this))},_.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),m(this))},_.prototype.render=d,t=[],r="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,g.__r=0,f=0;
//# sourceMappingURL=preact.module.js.map


/***/ }),

/***/ "../node_modules/preact/hooks/dist/hooks.module.js":
/*!*********************************************************!*\
  !*** ../node_modules/preact/hooks/dist/hooks.module.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useState": () => (/* binding */ l),
/* harmony export */   "useEffect": () => (/* binding */ y),
/* harmony export */   "useLayoutEffect": () => (/* binding */ h),
/* harmony export */   "useRef": () => (/* binding */ s),
/* harmony export */   "useMemo": () => (/* binding */ d),
/* harmony export */   "useCallback": () => (/* binding */ A)
/* harmony export */ });
/* unused harmony exports useReducer, useImperativeHandle, useContext, useDebugValue, useErrorBoundary */
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");
var t,u,r,o=0,i=[],c=preact__WEBPACK_IMPORTED_MODULE_0__.options.__b,f=preact__WEBPACK_IMPORTED_MODULE_0__.options.__r,e=preact__WEBPACK_IMPORTED_MODULE_0__.options.diffed,a=preact__WEBPACK_IMPORTED_MODULE_0__.options.__c,v=preact__WEBPACK_IMPORTED_MODULE_0__.options.unmount;function m(t,r){preact__WEBPACK_IMPORTED_MODULE_0__.options.__h&&preact__WEBPACK_IMPORTED_MODULE_0__.options.__h(u,t,o||r),o=0;var i=u.__H||(u.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({}),i.__[t]}function l(n){return o=1,p(w,n)}function p(n,r,o){var i=m(t++,2);return i.t=n,i.__c||(i.__=[o?o(r):w(void 0,r),function(n){var t=i.t(i.__[0],n);i.__[0]!==t&&(i.__=[t,i.__[1]],i.__c.setState({}))}],i.__c=u),i.__}function y(r,o){var i=m(t++,3);!preact__WEBPACK_IMPORTED_MODULE_0__.options.__s&&k(i.__H,o)&&(i.__=r,i.__H=o,u.__H.__h.push(i))}function h(r,o){var i=m(t++,4);!preact__WEBPACK_IMPORTED_MODULE_0__.options.__s&&k(i.__H,o)&&(i.__=r,i.__H=o,u.__h.push(i))}function s(n){return o=5,d(function(){return{current:n}},[])}function _(n,t,u){o=6,h(function(){"function"==typeof n?n(t()):n&&(n.current=t())},null==u?u:u.concat(n))}function d(n,u){var r=m(t++,7);return k(r.__H,u)&&(r.__=n(),r.__H=u,r.__h=n),r.__}function A(n,t){return o=8,d(function(){return n},t)}function F(n){var r=u.context[n.__c],o=m(t++,9);return o.c=n,r?(null==o.__&&(o.__=!0,r.sub(u)),r.props.value):n.__}function T(t,u){preact__WEBPACK_IMPORTED_MODULE_0__.options.useDebugValue&&preact__WEBPACK_IMPORTED_MODULE_0__.options.useDebugValue(u?u(t):t)}function q(n){var r=m(t++,10),o=l();return r.__=n,u.componentDidCatch||(u.componentDidCatch=function(n){r.__&&r.__(n),o[1](n)}),[o[0],function(){o[1](void 0)}]}function x(){for(var t;t=i.shift();)if(t.__P)try{t.__H.__h.forEach(g),t.__H.__h.forEach(j),t.__H.__h=[]}catch(u){t.__H.__h=[],preact__WEBPACK_IMPORTED_MODULE_0__.options.__e(u,t.__v)}}preact__WEBPACK_IMPORTED_MODULE_0__.options.__b=function(n){u=null,c&&c(n)},preact__WEBPACK_IMPORTED_MODULE_0__.options.__r=function(n){f&&f(n),t=0;var r=(u=n.__c).__H;r&&(r.__h.forEach(g),r.__h.forEach(j),r.__h=[])},preact__WEBPACK_IMPORTED_MODULE_0__.options.diffed=function(t){e&&e(t);var o=t.__c;o&&o.__H&&o.__H.__h.length&&(1!==i.push(o)&&r===preact__WEBPACK_IMPORTED_MODULE_0__.options.requestAnimationFrame||((r=preact__WEBPACK_IMPORTED_MODULE_0__.options.requestAnimationFrame)||function(n){var t,u=function(){clearTimeout(r),b&&cancelAnimationFrame(t),setTimeout(n)},r=setTimeout(u,100);b&&(t=requestAnimationFrame(u))})(x)),u=null},preact__WEBPACK_IMPORTED_MODULE_0__.options.__c=function(t,u){u.some(function(t){try{t.__h.forEach(g),t.__h=t.__h.filter(function(n){return!n.__||j(n)})}catch(r){u.some(function(n){n.__h&&(n.__h=[])}),u=[],preact__WEBPACK_IMPORTED_MODULE_0__.options.__e(r,t.__v)}}),a&&a(t,u)},preact__WEBPACK_IMPORTED_MODULE_0__.options.unmount=function(t){v&&v(t);var u,r=t.__c;r&&r.__H&&(r.__H.__.forEach(function(n){try{g(n)}catch(n){u=n}}),u&&preact__WEBPACK_IMPORTED_MODULE_0__.options.__e(u,r.__v))};var b="function"==typeof requestAnimationFrame;function g(n){var t=u,r=n.__c;"function"==typeof r&&(n.__c=void 0,r()),u=t}function j(n){var t=u;n.__c=n.__(),u=t}function k(n,t){return!n||n.length!==t.length||t.some(function(t,u){return t!==n[u]})}function w(n,t){return"function"==typeof t?t(n):t}
//# sourceMappingURL=hooks.module.js.map


/***/ }),

/***/ "./Config.ts":
/*!*******************!*\
  !*** ./Config.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_Storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/Storage */ "./utils/Storage.ts");
/* harmony import */ var _components_main_content_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/main_content/types */ "./components/main_content/types.ts");


const SUBTHEME_NAME_STORAGE_KEY = 'spec_subtheme_name';
const SUBTHEME_MODE_STORAGE_KEY = 'spec_subtheme_mode';
const INIT_SUBTHEME_NAME = _utils_Storage__WEBPACK_IMPORTED_MODULE_0__["default"].get(SUBTHEME_NAME_STORAGE_KEY) ||
    window.PrimerSpecConfig.defaultSubthemeName ||
    'default';
const INIT_SUBTHEME_MODE = (_utils_Storage__WEBPACK_IMPORTED_MODULE_0__["default"].get(SUBTHEME_MODE_STORAGE_KEY) ||
    window.PrimerSpecConfig.defaultSubthemeMode ||
    'system');
const INIT_SITEMAP_ENABLED = getInitSitemapEnabled();
/**
 * Exposes config variables defined in the webpack config (as a plugin)
 * or in window.PrimerSpecConfig. Also exposes constants used throughout the
 * app.
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    // From webpack config
    VERSION_RAW: "1.8.0.d",
    VERSION_MINOR_STR: "v1.8",
    BUILD_MODE: "development",
    // From window.PrimerSpecConfig
    HIDE_SIDEBAR_ON_LOAD: getHideSidebarOnLoad(),
    DISABLE_SIDEBAR: window.PrimerSpecConfig.disableSidebar || false,
    INIT_SUBTHEME_NAME,
    INIT_SUBTHEME_MODE,
    INIT_SITEMAP_ENABLED,
    SITEMAP_URLS: window.PrimerSpecConfig.sitemapUrls || [],
    SITEMAP_LABEL: window.PrimerSpecConfig.sitemapLabel || 'Supplemental Pages',
    SITEMAP_SITE_TITLE: window.PrimerSpecConfig.sitemapSiteTitle || '',
    DEFAULT_CODEBLOCK_VARIANT: getDefaultCodeblockVariant(),
    // DEPRECATED in v1.7.0. Use `DEFAULT_CODEBLOCK_VARIANT` instead.
    USE_LEGACY_CODE_BLOCKS_DEPRECATED_DO_NOT_USE: window.PrimerSpecConfig.useLegacyCodeBlocks || false,
    // Other constants
    PRIMER_SPEC_APP_NODE_ID: 'primer-spec-app-container',
    PRIMER_SPEC_CONTENT_PLUGIN_NODE_ID: 'primer-spec-plugin-main-content',
    PRIMER_SPEC_CONTENT_PREACT_NODE_ID: 'primer-spec-preact-main-content',
    SUBTHEME_NAME_STORAGE_KEY,
    SUBTHEME_MODE_STORAGE_KEY,
    DEFAULT_ACTIVE_SECTION_OFFSET_Y: 10,
});
function getHideSidebarOnLoad() {
    const sidebar_hidden_stored_value = _utils_Storage__WEBPACK_IMPORTED_MODULE_0__["default"].getForPage('sidebar_hidden');
    let hideSidebar = false;
    if (sidebar_hidden_stored_value !== null) {
        hideSidebar = sidebar_hidden_stored_value === 'true';
    }
    else {
        hideSidebar =
            window.PrimerSpecConfig.hideSidebarOnLoad ||
                window.PrimerSpecConfig.disableSidebar ||
                false;
        _utils_Storage__WEBPACK_IMPORTED_MODULE_0__["default"].setForPage('sidebar_hidden', hideSidebar.toString());
    }
    return hideSidebar;
}
function getInitSitemapEnabled() {
    if (true) {
        const searchParams = new URLSearchParams(document.location.search);
        const sitemapEnabledFromUrl = searchParams.get('enable_sitemap');
        if (sitemapEnabledFromUrl != null) {
            return sitemapEnabledFromUrl === '1';
        }
    }
    return !!window.PrimerSpecConfig.sitemapEnabled;
}
function getDefaultCodeblockVariant() {
    if (window.PrimerSpecConfig.useLegacyCodeBlocks === true) {
        // Note that `useLegacyCodeBlocks` is deprecated in v1.7.0. This code
        // just ensures backwards-compatibility.
        return _components_main_content_types__WEBPACK_IMPORTED_MODULE_1__.CodeblockVariant.LEGACY;
    }
    const maybeVariant = window.PrimerSpecConfig.defaultCodeblockVariant?.toLowerCase();
    if (maybeVariant && Object.values(_components_main_content_types__WEBPACK_IMPORTED_MODULE_1__.CodeblockVariant).includes(maybeVariant)) {
        return maybeVariant;
    }
    return _components_main_content_types__WEBPACK_IMPORTED_MODULE_1__.CodeblockVariant.ENHANCED;
}


/***/ }),

/***/ "./components/PrimerSpec.tsx":
/*!***********************************!*\
  !*** ./components/PrimerSpec.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PrimerSpec)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");
/* harmony import */ var preact_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! preact/hooks */ "../node_modules/preact/hooks/dist/hooks.module.js");
/* harmony import */ var _subthemes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../subthemes */ "./subthemes/index.ts");
/* harmony import */ var _utils_getChromeVersion__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/getChromeVersion */ "./utils/getChromeVersion.ts");
/* harmony import */ var _utils_hooks_print__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/hooks/print */ "./utils/hooks/print.ts");
/* harmony import */ var _utils_hooks_useSmallScreen__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/hooks/useSmallScreen */ "./utils/hooks/useSmallScreen.ts");
/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Config */ "./Config.ts");
/* harmony import */ var _main_content__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./main_content */ "./components/main_content/index.tsx");
/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./settings */ "./components/settings/index.tsx");
/* harmony import */ var _sidebar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./sidebar */ "./components/sidebar/index.tsx");
/* harmony import */ var _Topbar__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Topbar */ "./components/Topbar.tsx");
/* harmony import */ var _utils_Storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Storage */ "./utils/Storage.ts");












let mainElScrollPosition = null;
/**
 * This component encapsulates the JS controlling Primer Spec, including the
 * Sidebar, the Topbar and the Settings pane.
 */
function PrimerSpec(props) {
    // Initialize all shared state
    const is_small_screen = (0,_utils_hooks_useSmallScreen__WEBPACK_IMPORTED_MODULE_2__["default"])();
    const [sidebar_shown, setSidebarShown] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useState)(!_Config__WEBPACK_IMPORTED_MODULE_3__["default"].HIDE_SIDEBAR_ON_LOAD && !is_small_screen);
    const [settings_shown, setSettingsShown] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [active_section_offset_y, setActiveSectionOffsetY] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useState)(_Config__WEBPACK_IMPORTED_MODULE_3__["default"].DEFAULT_ACTIVE_SECTION_OFFSET_Y);
    const [subtheme_name, setSubthemeName] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useState)(_Config__WEBPACK_IMPORTED_MODULE_3__["default"].INIT_SUBTHEME_NAME);
    const [subtheme_mode, setSubthemeMode] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useState)(_Config__WEBPACK_IMPORTED_MODULE_3__["default"].INIT_SUBTHEME_MODE);
    const [sitemap_enabled, setSitemapEnabled] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useState)(_Config__WEBPACK_IMPORTED_MODULE_3__["default"].INIT_SITEMAP_ENABLED);
    const main_content_visible = !settings_shown;
    // Define derived methods to manipulate state
    const toggleSidebarShown = () => {
        _utils_Storage__WEBPACK_IMPORTED_MODULE_4__["default"].setForPage('sidebar_hidden', sidebar_shown.toString());
        setSidebarShown(!sidebar_shown);
    };
    const toggleSettingsShown = () => {
        // Before toggling the settings, save the current scroll position of the
        // main content. We'll need it later to restore the scroll position after
        // the settings pane is closed.
        if (main_content_visible) {
            mainElScrollPosition = { top: window.scrollY, left: window.scrollX };
        }
        setSettingsShown(!settings_shown);
    };
    const setTheme = (themeDelta) => {
        (0,_subthemes__WEBPACK_IMPORTED_MODULE_5__.updateTheme)(themeDelta);
        setSubthemeName((0,_subthemes__WEBPACK_IMPORTED_MODULE_5__.getStoredSubthemeName)());
        setSubthemeMode((0,_subthemes__WEBPACK_IMPORTED_MODULE_5__.getStoredSubthemeMode)());
    };
    // Listen for print events
    const beforePrint = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallback)(_utils_hooks_print__WEBPACK_IMPORTED_MODULE_6__.useBeforePrint, []);
    const afterPrint = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallback)(_utils_hooks_print__WEBPACK_IMPORTED_MODULE_6__.useAfterPrint, []);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        return beforePrint(() => {
            toggleItalicsInChrome(false);
        });
    }, [beforePrint]);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        return afterPrint(() => {
            toggleItalicsInChrome(true);
        });
    }, [afterPrint]);
    // Expose Debug methods
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        window.Debug = Object.freeze({
            toggleSitemap: () => setSitemapEnabled(!sitemap_enabled),
        });
    }, [sitemap_enabled]);
    // Lazy-load the conditional plugins. These are purely cosmetic and
    // don't affect the functionality of the page.
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        __webpack_require__.e(/*! import() */ "conditional_plugins_conditional_plugins_ts").then(__webpack_require__.bind(__webpack_require__, /*! ../conditional_plugins/conditional_plugins */ "./conditional_plugins/conditional_plugins.ts")).then(({ executePlugins }) => {
            executePlugins({
                is_small_screen,
                sidebar_shown,
                settings_shown,
                subtheme_name,
                subtheme_mode: (0,_subthemes__WEBPACK_IMPORTED_MODULE_5__.normalizeSubthemeMode)(subtheme_mode),
            });
        });
    }, [
        is_small_screen,
        sidebar_shown,
        settings_shown,
        subtheme_name,
        subtheme_mode,
    ]);
    const sidebar = _Config__WEBPACK_IMPORTED_MODULE_3__["default"].DISABLE_SIDEBAR ? null : ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_sidebar__WEBPACK_IMPORTED_MODULE_7__["default"], { contentNodeSelector: `#${_Config__WEBPACK_IMPORTED_MODULE_3__["default"].PRIMER_SPEC_CONTENT_PREACT_NODE_ID}`, isSmallScreen: is_small_screen, sidebarShown: sidebar_shown, settingsShown: settings_shown, activeSectionOffsetY: active_section_offset_y, sitemapEnabled: sitemap_enabled, onToggleSidebar: toggleSidebarShown, onToggleSettings: toggleSettingsShown }));
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_Topbar__WEBPACK_IMPORTED_MODULE_8__["default"], { isSmallScreen: is_small_screen, showSidebarToggle: !_Config__WEBPACK_IMPORTED_MODULE_3__["default"].DISABLE_SIDEBAR, showSettingsToggle: true, sidebarShown: sidebar_shown, settingsShown: settings_shown, onActiveSectionOffsetChange: setActiveSectionOffsetY, onToggleSidebar: toggleSidebarShown, onToggleSettings: toggleSettingsShown }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_main_content__WEBPACK_IMPORTED_MODULE_9__["default"], { innerHTML: props.contentHTML, visible: main_content_visible, 
            // Only attempt to restore scroll-state if the main content is visible
            scrollToPosition: main_content_visible ? mainElScrollPosition : null, isSmallScreen: is_small_screen, sidebarShown: sidebar_shown, currentSubthemeName: subtheme_name, currentSubthemeMode: subtheme_mode }),
        sidebar,
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_settings__WEBPACK_IMPORTED_MODULE_10__["default"], { isSmallScreen: is_small_screen, sidebarShown: sidebar_shown, settingsShown: settings_shown, currentSubthemeName: subtheme_name, currentSubthemeMode: subtheme_mode, onSubthemeNameChange: (name) => setTheme({ name }), onSubthemeModeChange: (mode) => setTheme({ mode }) })));
}
/**
 * HACK: Toggles italics in Chrome before printing.
 * (See issue eecs485staff/primer-spec#38)
 * @param isItalicsEnabled boolean indicating whether italics should be enabled
 */
function toggleItalicsInChrome(enableItalics) {
    const chromeVersion = (0,_utils_getChromeVersion__WEBPACK_IMPORTED_MODULE_11__["default"])();
    if (chromeVersion === false || chromeVersion >= 82) {
        return;
    }
    const all_italic_els = 'em, dfn, .text-italic, dt, .highlight .cm, .highlight .c1, ' +
        '.highlight .cs, .highlight .cd, .highlight .ge, .primer-spec-toc-h4';
    const font_style = enableItalics ? 'italic' : 'inherit';
    const nodes = document.querySelectorAll(all_italic_els);
    Array.from(nodes).map((el) => {
        el.style.fontStyle = font_style;
    });
}


/***/ }),

/***/ "./components/Topbar.tsx":
/*!*******************************!*\
  !*** ./components/Topbar.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Topbar)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");
/* harmony import */ var preact_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! preact/hooks */ "../node_modules/preact/hooks/dist/hooks.module.js");
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ "../node_modules/clsx/dist/clsx.m.js");
/* harmony import */ var _common_IconType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/IconType */ "./components/common/IconType.ts");
/* harmony import */ var _common_InlineButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/InlineButton */ "./components/common/InlineButton.tsx");





function Topbar(props) {
    const topbarRef = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
    const { isSmallScreen, onActiveSectionOffsetChange } = props;
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {
        if (!isSmallScreen) {
            // On wide screens, the Topbar is transparent, so its effective height is
            // 0.
            onActiveSectionOffsetChange(20);
        }
        else if (topbarRef.current) {
            // On small screens, the Topbar is opaque, so we should find its true
            // height.
            onActiveSectionOffsetChange(topbarRef.current.getBoundingClientRect().height);
        }
    }, [isSmallScreen, onActiveSectionOffsetChange]);
    let sidebar_toggle = null;
    if (props.showSidebarToggle) {
        sidebar_toggle = props.sidebarShown ? null : ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `primer-spec-sidebar-toggle-fixed primer-spec-float-left` },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_common_InlineButton__WEBPACK_IMPORTED_MODULE_3__["default"], { icon: _common_IconType__WEBPACK_IMPORTED_MODULE_4__["default"].SIDEBAR, onClick: props.onToggleSidebar, ariaLabel: 'Open navigation pane' })));
    }
    let settings_toggle = null;
    if (props.showSettingsToggle) {
        settings_toggle = ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "primer-spec-settings-toggle primer-spec-float-right" },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_common_InlineButton__WEBPACK_IMPORTED_MODULE_3__["default"], { icon: props.settingsShown ? _common_IconType__WEBPACK_IMPORTED_MODULE_4__["default"].CLOSE : _common_IconType__WEBPACK_IMPORTED_MODULE_4__["default"].SETTINGS, onClick: props.onToggleSettings, ariaLabel: props.settingsShown ? 'Close settings pane' : 'Open settings pane' })));
    }
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("header", { ref: topbarRef, class: (0,clsx__WEBPACK_IMPORTED_MODULE_2__["default"])('primer-spec-topbar', 'position-fixed', 'width-full', 'top-0', 'left-0', 'py-2', 'no-print', {
            'primer-spec-topbar-mobile': props.isSmallScreen,
            'primer-spec-topbar-settings-shown': props.settingsShown,
        }) },
        sidebar_toggle,
        settings_toggle));
}


/***/ }),

/***/ "./components/common/Hoverable.tsx":
/*!*****************************************!*\
  !*** ./components/common/Hoverable.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Hoverable": () => (/* binding */ Hoverable)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");

function Hoverable(props) {
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: `primer-spec-hoverable ${props.floatRight ? 'primer-spec-hoverable-float-right' : ''}` }, props.children));
}


/***/ }),

/***/ "./components/common/IconType.ts":
/*!***************************************!*\
  !*** ./components/common/IconType.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var IconType;
(function (IconType) {
    IconType["CLOSE"] = "fas fa-times";
    IconType["HOME"] = "fas fa-home";
    IconType["SETTINGS"] = "fas fa-cog";
    IconType["SIDEBAR"] = "fas fa-bars";
    IconType["EXTERNAL_LINK"] = "fas fa-external-link-alt";
})(IconType || (IconType = {}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (IconType);


/***/ }),

/***/ "./components/common/InlineButton.tsx":
/*!********************************************!*\
  !*** ./components/common/InlineButton.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ InlineButton)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");
/* harmony import */ var _Hoverable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Hoverable */ "./components/common/Hoverable.tsx");


function InlineButton(props) {
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_Hoverable__WEBPACK_IMPORTED_MODULE_1__.Hoverable, { floatRight: props.floatRight },
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("button", { class: "btn-link primer-spec-hoverable no-print", onClick: props.onClick
                ? (event) => {
                    event.preventDefault();
                    props.onClick && props.onClick();
                }
                : undefined, "aria-label": props.ariaLabel },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("i", { class: props.icon }))));
}


/***/ }),

/***/ "./components/common/InlineNavButton.tsx":
/*!***********************************************!*\
  !*** ./components/common/InlineNavButton.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ InlineButton)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");
/* harmony import */ var _Hoverable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Hoverable */ "./components/common/Hoverable.tsx");


function InlineButton(props) {
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_Hoverable__WEBPACK_IMPORTED_MODULE_1__.Hoverable, { floatRight: props.floatRight },
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("a", { href: props.href ?? '#primer-spec-top', class: "primer-spec-hoverable no-print", onClick: props.onClick
                ? (event) => {
                    event.preventDefault();
                    props.onClick && props.onClick();
                }
                : undefined, "aria-label": props.ariaLabel },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("i", { class: props.icon }))));
}


/***/ }),

/***/ "./components/main_content/index.tsx":
/*!*******************************************!*\
  !*** ./components/main_content/index.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MainContent)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");
/* harmony import */ var preact_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! preact/hooks */ "../node_modules/preact/hooks/dist/hooks.module.js");
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ "../node_modules/clsx/dist/clsx.m.js");
/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../Config */ "./Config.ts");
/* harmony import */ var _utils_hooks_print__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/hooks/print */ "./utils/hooks/print.ts");
/* harmony import */ var _useTaskListCheckboxes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./useTaskListCheckboxes */ "./components/main_content/useTaskListCheckboxes.ts");
/* harmony import */ var _useEnhancedCodeBlocks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./useEnhancedCodeBlocks */ "./components/main_content/useEnhancedCodeBlocks.tsx");
/* harmony import */ var _useMermaidDiagrams__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./useMermaidDiagrams */ "./components/main_content/useMermaidDiagrams.tsx");
/* harmony import */ var _useTooltippedAbbreviations__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./useTooltippedAbbreviations */ "./components/main_content/useTooltippedAbbreviations.tsx");
/* harmony import */ var _utils_hooks_usePrefersDarkMode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/hooks/usePrefersDarkMode */ "./utils/hooks/usePrefersDarkMode.ts");
/* harmony import */ var _utils_hooks_useWindowLoaded__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/hooks/useWindowLoaded */ "./utils/hooks/useWindowLoaded.ts");











function MainContent({ innerHTML, visible, scrollToPosition, isSmallScreen, sidebarShown, currentSubthemeName, currentSubthemeMode, }) {
    const is_print_in_progress = (0,_utils_hooks_print__WEBPACK_IMPORTED_MODULE_3__.usePrintInProgress)();
    const prefers_dark_mode = (0,_utils_hooks_usePrefersDarkMode__WEBPACK_IMPORTED_MODULE_4__["default"])();
    const window_loaded = (0,_utils_hooks_useWindowLoaded__WEBPACK_IMPORTED_MODULE_5__["default"])();
    const main_el_ref = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
    // INTERACTIVE TASK LIST CHECKBOXES
    const taskListCheckboxEffect = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallback)(_useTaskListCheckboxes__WEBPACK_IMPORTED_MODULE_6__["default"], [
        innerHTML,
    ]);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        return taskListCheckboxEffect(main_el_ref);
    }, [taskListCheckboxEffect]);
    // ENHANCED CODE BLOCKS
    const enhancedCodeBlocksEffect = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallback)(_useEnhancedCodeBlocks__WEBPACK_IMPORTED_MODULE_7__["default"], [
        innerHTML,
    ]);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        return enhancedCodeBlocksEffect(main_el_ref);
    }, [enhancedCodeBlocksEffect]);
    // MERMAID DIAGRAMS
    let should_use_dark_mode = false;
    switch (currentSubthemeMode) {
        case 'system':
            should_use_dark_mode = prefers_dark_mode;
            break;
        case 'dark':
            should_use_dark_mode = true;
            break;
        default:
            should_use_dark_mode = false;
    }
    if (currentSubthemeName === 'xcode-civic' ||
        currentSubthemeName === 'spooky') {
        should_use_dark_mode = true;
    }
    if (is_print_in_progress) {
        should_use_dark_mode = false;
    }
    const mermaidDiagramsEffect = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallback)(_useMermaidDiagrams__WEBPACK_IMPORTED_MODULE_8__["default"], [innerHTML]);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        // Mermaid Diagrams should only be rendered after the document has
        // completed loading (including CSS and font resources). Otherwise, labels
        // may be displayed out of bounds.
        // Hence, we trigger a re-render of the Mermaid diagrams if the
        // `window_loaded` variable changes.
        //
        // NOTE: We _could_ have delayed rendering till after
        // `window_loaded === true`, but then users would briefly see a flash with
        // the original Mermaid source before the diagram is rendered. That page
        // might also reflow.
        return mermaidDiagramsEffect(main_el_ref, should_use_dark_mode);
    }, [window_loaded, mermaidDiagramsEffect, should_use_dark_mode]);
    // TOOLTIPPED ABBREVIATIONS
    const tooltippedAbbreviationsEffect = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallback)(_useTooltippedAbbreviations__WEBPACK_IMPORTED_MODULE_9__["default"], [innerHTML]);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        return tooltippedAbbreviationsEffect(main_el_ref);
    }, [tooltippedAbbreviationsEffect]);
    // RESET SCROLL POSITION (after closing settings pane)
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {
        if (scrollToPosition != null) {
            window.scrollTo(scrollToPosition);
        }
    }, [scrollToPosition]);
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("main", { ref: main_el_ref, id: _Config__WEBPACK_IMPORTED_MODULE_10__["default"].PRIMER_SPEC_CONTENT_PREACT_NODE_ID, class: (0,clsx__WEBPACK_IMPORTED_MODULE_2__["default"])('container-lg', 'px-3', 'my-5', 'markdown-body', {
            'primer-spec-content-margin-extra': sidebarShown && !isSmallScreen && !is_print_in_progress,
            'primer-spec-content-mobile': isSmallScreen && !is_print_in_progress,
            'primer-spec-content-frozen': !visible,
        }), 
        // eslint-disable-next-line react/no-danger
        dangerouslySetInnerHTML: { __html: innerHTML } }));
}


/***/ }),

/***/ "./components/main_content/types.ts":
/*!******************************************!*\
  !*** ./components/main_content/types.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CodeblockVariant": () => (/* binding */ CodeblockVariant)
/* harmony export */ });
var CodeblockVariant;
(function (CodeblockVariant) {
    CodeblockVariant["ENHANCED"] = "enhanced";
    CodeblockVariant["NO_LINE_NUMBERS"] = "no-line-numbers";
    CodeblockVariant["LEGACY"] = "legacy";
})(CodeblockVariant || (CodeblockVariant = {}));


/***/ }),

/***/ "./components/main_content/useEnhancedCodeBlocks.tsx":
/*!***********************************************************!*\
  !*** ./components/main_content/useEnhancedCodeBlocks.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useEnhancedCodeBlocks)
/* harmony export */ });
/* unused harmony export parseCodeHighlightRanges */
/* harmony import */ var jsx_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsx-dom */ "../node_modules/jsx-dom/index.js");
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ "../node_modules/clsx/dist/clsx.m.js");
/* harmony import */ var anchor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! anchor-js */ "../node_modules/anchor-js/anchor.js");
/* harmony import */ var anchor_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(anchor_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sindresorhus/slugify */ "../node_modules/@sindresorhus/slugify/index.js");
/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Config */ "./Config.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types */ "./components/main_content/types.ts");






const CODEBLOCK_LINE_CLASS = 'primer-spec-code-block-line-code';
// We use the following class to ensure that we don't double-process code
// blocks.
const CODEBLOCK_PROCESSED_CLASS = 'primer-spec-code-block-processed';
// Since we want to linkify code block titles, this is the class used to
// identify them to AnchorJS.
const CODEBLOCK_TITLE_CLASS = 'primer-spec-code-block-title';
// We perform special handling for blocks in the `console` language: If a user
// clicks the line number, the entire line will be highlighted EXCLUDING the
// prompt (`$`) at the beginning, if it exists.
// See the special handling in `createCodeBlockLine()`.
const LANGUAGE_CONSOLE = 'console';
// We use this to keep track of click-then-drag on line numbers to select
// multiple lines simultaneously.
let mouseDownStartLine = null;
/**
 * A custom hook that enhances code blocks that are longer than two lines.
 * These enhancecd code blocks show line numbers, and can optionally highlight
 * lines.
 * @param mainElRef A ref to the `<main>` element from MainContent
 */
function useEnhancedCodeBlocks(mainElRef) {
    if (!mainElRef.current) {
        throw new Error('Primer Spec: Main Content: Expected main content ref to be initialized.');
    }
    // First enhance codeblocks formatted by Jekyll + Rouge
    const numCodeBlocks = enhanceBlocks(mainElRef.current.querySelectorAll('div.highlighter-rouge'), getCodeElFromJekyllRougeCodeblock, 0);
    // Then attempt to enhance ordinary <pre> blocks.
    enhanceBlocks(mainElRef.current.querySelectorAll('pre'), getCodeElFromPreCodeblock, numCodeBlocks);
    return () => { };
}
function getCodeElFromJekyllRougeCodeblock(codeblock) {
    // The original structure of a codeblock:
    // <div
    //   class="highlighter-rouge language-[lang]"
    //   data-highlight="[highlight-range]" {/* OPTIONAL */}
    //   data-variant="[legacy|enhanced]"   {/* OPTIONAL */}
    //   data-title="[title]"               {/* OPTIONAL */}
    // >
    //   <div class="highlight">
    //     <pre class="highlight">
    //       <code>
    //         [contents]
    //       </code>
    //     </pre>
    //   </div>
    // </div>
    //
    // Notice that `contents` is wrapped in a pre-formatted block. Hence, we will
    // use newlines in `contents` to demarcate lines, and we need to preserve
    // whitespace within the line.
    const codeEl = codeblock.firstElementChild?.firstElementChild?.firstElementChild;
    if (codeEl == null) {
        console.warn('useEnhancedCodeBlocks: Code Block has malformed structure. See Primer Spec Docs for expected structure. https://github.com/eecs485staff/primer-spec/blob/main/docs/USAGE_ADVANCED.md#enhanced-code-blocks', 'codeblock', codeblock);
        return null;
    }
    return codeEl;
}
function getCodeElFromPreCodeblock(codeblock) {
    // The structure of a <pre> codeblock:
    // <pre>
    //   <code> <!-- OPTIONAL -->
    //     [contents]
    //   </code>
    // </pre>
    if (codeblock.childNodes.length === 1 &&
        codeblock.firstElementChild?.tagName === 'CODE') {
        return codeblock.firstElementChild;
    }
    return codeblock;
}
/**
 * @param codeblocks Output from `.querySelectorAll()`
 * @param getContents A method that extracts a string with the codeblock contents given a codeblock element
 * @param startId The ID to use for the first enhanced code block
 */
function enhanceBlocks(codeblocks, getCodeEl, startId = 0) {
    let nextCodeBlockId = startId;
    [...codeblocks]
        .filter((codeblock) => codeblock.querySelector(`.${CODEBLOCK_PROCESSED_CLASS}`) == null &&
        codeblock.closest(`.${CODEBLOCK_PROCESSED_CLASS}`) == null)
        .forEach((codeblock) => {
        if (shouldRetainLegacyCodeBlock(codeblock)) {
            // We decided not to enhance this block. Mark it as processed.
            codeblock.classList.add(CODEBLOCK_PROCESSED_CLASS);
            return;
        }
        const codeblockNumericId = nextCodeBlockId++;
        const codeblockParent = codeblock.parentElement;
        if (!codeblockParent) {
            console.warn('useEnhanccedCodeBlocks: Codeblock missing parent');
            return;
        }
        const codeblockContentsEl = getCodeEl(codeblock);
        if (codeblockContentsEl == null) {
            return;
        }
        const codeblockContents = getCodeblockContents(codeblockContentsEl);
        const title = codeblock.dataset['title'] || null;
        const anchorId = title
            ? createCodeBlockAnchorId(codeblockNumericId, title)
            : null;
        const enhancedCodeBlock = createEnhancedCodeBlock({
            codeblockNumericId,
            rawContent: codeblockContents,
            language: getCodeBlockLanguage(codeblock),
            rawHighlightRanges: codeblock.dataset['highlight'] || null,
            title,
            anchorId,
            showLineNumbers: getCodeblockVariant(codeblock) !== _types__WEBPACK_IMPORTED_MODULE_4__.CodeblockVariant.NO_LINE_NUMBERS,
        });
        if (!enhancedCodeBlock) {
            return;
        }
        // Clear the old code block and replace with the enhanced block
        codeblockParent.replaceChild(jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("div", { id: anchorId ?? undefined, class: "primer-spec-code-block" }, enhancedCodeBlock), codeblock);
    });
    // We need to add anchors to Code Block titles if applicable
    new (anchor_js__WEBPACK_IMPORTED_MODULE_2___default())().add(`.${CODEBLOCK_TITLE_CLASS}`);
    return nextCodeBlockId;
}
function shouldRetainLegacyCodeBlock(codeblock) {
    // Don't mess with Mermaid blocks, they'll be handled by the Mermaid plugin.
    if (codeblock.querySelector('.language-mermaid') != null) {
        return true;
    }
    return getCodeblockVariant(codeblock) === _types__WEBPACK_IMPORTED_MODULE_4__.CodeblockVariant.LEGACY;
}
function getCodeblockVariant(codeblock) {
    const rawVariant = codeblock.dataset['variant']?.toLowerCase();
    if (rawVariant && Object.values(_types__WEBPACK_IMPORTED_MODULE_4__.CodeblockVariant).includes(rawVariant)) {
        return rawVariant;
    }
    return _Config__WEBPACK_IMPORTED_MODULE_5__["default"].DEFAULT_CODEBLOCK_VARIANT;
}
function createEnhancedCodeBlock(options) {
    const { codeblockNumericId, rawContent, language, rawHighlightRanges, title, anchorId, showLineNumbers, } = options;
    const lines = rawContent.split('\n');
    if (lines.length === 0) {
        console.warn('useEnhancedCodeBlocks: Code Block appears to have no lines!');
        return null;
    }
    const lastLine = lines[lines.length - 1];
    if (lastLine === '' || lastLine === '</span>') {
        lines.pop();
    }
    const highlightRanges = parseCodeHighlightRanges(rawHighlightRanges, lines.length);
    const codeblockId = `primer-spec-code-block-${codeblockNumericId}`;
    const header = genCodeBlockHeader(title, anchorId);
    const enhancedCodeBlock = (jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("div", { id: codeblockId, class: "Box mt-3 text-mono" },
        header,
        jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("div", { class: (0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])('Box-body', 'p-0', 'primer-spec-code-block-body', header && 'primer-spec-code-block-header-present') },
            jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("table", { class: "highlight" },
                jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("tbody", { onMouseOver: (e) => {
                        if (mouseDownStartLine != null && e.target != null) {
                            let el = e.target;
                            while (el && el.tagName !== 'TABLE') {
                                const match = el.id.match(/^primer-spec-code-block-(?:\d+)-L(?:C|R)?(\d+)$/);
                                if (match && match[1] != null) {
                                    selectLines(codeblockId, mouseDownStartLine, +match[1]);
                                    break;
                                }
                                else {
                                    el = el.parentNode;
                                }
                            }
                        }
                    }, onMouseLeave: () => {
                        mouseDownStartLine = null;
                    }, onMouseUp: () => {
                        mouseDownStartLine = null;
                    } }, lines.map((line, lineNumber) => createCodeBlockLine({
                    codeblockId,
                    language,
                    line,
                    lineNumber: lineNumber + 1,
                    shouldHighlight: highlightRanges.has(lineNumber + 1),
                    showLineNumbers,
                })))),
            lines.length > 1 ? genCopyButton(codeblockId, language) : null)));
    return enhancedCodeBlock;
}
function createCodeBlockLine(options) {
    const { codeblockId, language, line, lineNumber, shouldHighlight, showLineNumbers, } = options;
    const L_ID = `${codeblockId}-L${lineNumber}`;
    const LC_ID = `${codeblockId}-LC${lineNumber}`;
    const LR_ID = `${codeblockId}-LR${lineNumber}`;
    const codeblockLine = (jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("tr", { id: LR_ID },
        jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("td", { id: L_ID, class: (0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])('primer-spec-code-block-line-number', showLineNumbers && 'primer-spec-code-block-line-numbers-shown'), "data-line-number": lineNumber, onMouseDown: (e) => {
                e.preventDefault();
                mouseDownStartLine = lineNumber;
                selectLines(codeblockId, mouseDownStartLine, mouseDownStartLine);
            } }),
        jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("td", { id: LC_ID, class: (0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])(CODEBLOCK_LINE_CLASS, shouldHighlight && 'primer-spec-code-block-highlighted'), 
            // eslint-disable-next-line react/no-danger
            dangerouslySetInnerHTML: { __html: line } })));
    // SPECIAL HANDLING for `console` blocks: When a user clicks the line number
    // to select the entire line, attempt to exclude the leading prompt
    // symbol (`$`).
    if (language === LANGUAGE_CONSOLE) {
        const codeLine = codeblockLine.querySelector(`.${CODEBLOCK_LINE_CLASS}`);
        const firstChild = codeLine.firstChild;
        if (firstChild?.tagName === 'SPAN' && firstChild.classList.contains('gp')) {
            // This prompt needs to be excluded from selection.
            // (1) Remove the original LC_ID
            codeLine.id = '';
            // (2) Find children to exclude from selection. Do this by searching for
            //     the first child that is not of class `gp` (Generic::Prompt) or
            //     `w` (Whitespace)
            const children = [...codeLine.childNodes];
            const childrenToExcludeFromSelection = [];
            let i = 0;
            for (; i < children.length; ++i) {
                const child = children[i];
                if ('classList' in child &&
                    (child.classList.contains('gp') || child.classList.contains('w'))) {
                    childrenToExcludeFromSelection.push(child);
                }
                else {
                    break;
                }
            }
            const childrenToIncludeInSelection = children.slice(i);
            // (3) Wrap remaining children in a new <span> with id=LC_ID.
            codeLine.innerHTML = '';
            codeLine.appendChild(jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("span", null, childrenToExcludeFromSelection));
            codeLine.appendChild(jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("span", { id: LC_ID }, childrenToIncludeInSelection));
        }
    }
    return codeblockLine;
}
function genCopyButton(codeblockId, language) {
    return (jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("div", { class: "primer-spec-zeroclipboard-container position-absolute top-0 right-0" },
        jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("button", { type: "button", class: "btn-octicon no-print m-2 p-2 tooltipped tooltipped-no-delay tooltipped-n", tabIndex: 0, "aria-label": language === LANGUAGE_CONSOLE ? 'Copy all commands' : 'Copy', onClick: async (e) => {
                const codeblock = document.getElementById(codeblockId);
                if (codeblock) {
                    // (1) Copy the lines to the clipboard
                    await copyLines(codeblock, language === LANGUAGE_CONSOLE
                        ? CONSOLE_COPY_LINES_MAP_FN
                        : DEFAULT_COPY_LINES_MAP_FN);
                    // (2) Fetch the copy-button
                    let btn = e.target;
                    if (btn?.tagName === 'I') {
                        btn = btn.parentElement;
                    }
                    if (!btn) {
                        return;
                    }
                    // (3) Temporarily change the label and icon of the button
                    const originalLabel = btn.getAttribute('aria-label');
                    btn.setAttribute('aria-label', 'Copied!');
                    const originalIcon = btn.firstChild;
                    if (!originalIcon) {
                        return;
                    }
                    btn.innerText = '';
                    btn.appendChild(jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("i", { class: "fas fa-check" }));
                    setTimeout(() => {
                        if (!btn) {
                            return;
                        }
                        btn.setAttribute('aria-label', originalLabel || '');
                        btn.blur();
                        btn.innerText = '';
                        btn.appendChild(originalIcon);
                    }, 2000);
                }
            } },
            jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("i", { class: "far fa-copy" }))));
}
const DEFAULT_COPY_LINES_MAP_FN = (line) => line.innerText;
const CONSOLE_COPY_LINES_MAP_FN = (line) => {
    // (1) Skip console output lines
    // (Class name 'go' refers to the Rouge class `Generic::Output`.)
    const outputText = line.querySelector('.go');
    if (outputText) {
        return null;
    }
    // (2) If there's a console prompt, skip it
    const shadowLine = line.cloneNode(true);
    let prompt = null;
    while ((prompt = shadowLine.querySelector('span.gp'))) {
        // (2.1) If there is a space after the prompt, remove it
        //       (to dedent the command)
        if (prompt.nextElementSibling?.classList.contains('w')) {
            const whitespaceEl = prompt.nextElementSibling;
            whitespaceEl.textContent =
                whitespaceEl.textContent?.replace(' ', '') ?? null;
        }
        prompt.remove();
    }
    return shadowLine.innerText;
};
/**
 * Copy the text of a codeblock into the clipboard. Optionally accepts a custom
 * map/filter method to extract text from each line.
 *
 * @param codeblock The codeblock whose lines need to be copied
 * @param mapFn (OPTIONAL) A method that extracts text from a given line HTMLElement
 */
async function copyLines(codeblock, mapFn = DEFAULT_COPY_LINES_MAP_FN) {
    const lines = codeblock.querySelectorAll(`.${CODEBLOCK_LINE_CLASS}`);
    const linesOfText = [...lines].map((line) => mapFn(line)).filter(Boolean);
    const text = linesOfText.join('\n');
    await navigator.clipboard.writeText(text);
}
function genCodeBlockHeader(title, anchorId) {
    if (title == null) {
        return null;
    }
    return (jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("div", { class: "Box-header py-2 pr-2 d-flex flex-shrink-0 flex-md-row flex-items-center primer-spec-code-block-header" },
        jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("span", { class: (0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])('flex-auto', CODEBLOCK_TITLE_CLASS), "data-anchor-id": anchorId }, title)));
}
/***********/
/** UTILS **/
/***********/
/**
 * Given an element, return the codeblock's language (if present) if the
 * element's `classList` contains a class of the form `language-[language]`.
 */
function getCodeBlockLanguage(codeblockSrc) {
    for (const className of codeblockSrc.classList) {
        if (className.startsWith('language-')) {
            return className.replace('language-', '');
        }
    }
    return null;
}
/**
 * Parse a string reprenting a list of line numbers, some of which may be
 * ranges. The parsed output is a Set of line numbers that are included in the
 * range.
 *
 * For instance, the string `'13, 24-26, 25-27'` is parsed as
 * `Set([13, 24, 25, 26, 27])`
 *
 * @param rawHighlightRanges A comma-separated string representing ranges
 * @param maxLineNumber The maximum valid line number
 */
function parseCodeHighlightRanges(rawHighlightRanges, maxLineNumber) {
    const highlightedLines = new Set();
    if (!rawHighlightRanges) {
        return highlightedLines;
    }
    const ranges = rawHighlightRanges.split(',');
    ranges.forEach((range) => {
        // First check if it's a single number
        const potentialLineNum = +range;
        if (isNumWithinInclusiveRange(potentialLineNum, 1, maxLineNumber)) {
            highlightedLines.add(potentialLineNum);
        }
        else {
            const rangeParts = range.trim().split('-');
            if (rangeParts.length === 2) {
                const lower = +rangeParts[0];
                const upper = +rangeParts[1];
                if (isNumWithinInclusiveRange(lower, 1, maxLineNumber) &&
                    isNumWithinInclusiveRange(upper, 1, maxLineNumber) &&
                    lower <= upper) {
                    for (let i = lower; i <= upper; ++i) {
                        highlightedLines.add(i);
                    }
                }
            }
        }
    });
    return highlightedLines;
}
/**
 * Return a boolean indicating whether `num` is in the range [`lower`, `upper`]
 * (inclusive).
 */
function isNumWithinInclusiveRange(num, lower, upper) {
    return num != null && !Number.isNaN(num) && num >= lower && num <= upper;
}
/**
 * Using the Selection API, select all content between `startLine_` and
 * `endLine_` for the codeblock identified by `codeblockId`.
 */
function selectLines(codeblockId, startLine_, endLine_) {
    let startLine = startLine_;
    let endLine = endLine_;
    if (startLine > endLine) {
        // The range is inverted (for example, start selecting from line 4 to
        // line 2).
        startLine = endLine_;
        endLine = startLine_;
    }
    const startNode = document.getElementById(`${codeblockId}-LC${startLine}`);
    const endNode = document.getElementById(`${codeblockId}-LC${endLine}`);
    if (!startNode || !endNode) {
        console.error('Primer Spec Code Block: selectLines: start or end nodes are null. Please report this issue on https://github.com/eecs485staff/primer-spec/issues. Thanks!');
        return;
    }
    const range = document.createRange();
    range.setStart(startNode, 0);
    range.setEnd(endNode, endNode.childNodes.length);
    document.getSelection()?.removeAllRanges();
    document.getSelection()?.addRange(range);
}
function createCodeBlockAnchorId(codeblockNumericId, title) {
    return `${(0,_sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_3__["default"])(title)}-${codeblockNumericId}`;
}
/**
 * Given a codeblock / pre element, return a string reprensenting the HTML of
 * the codeblock.
 *
 * One edge case that this method handles: Lines split within a single span.
 * Consider the following codeblock (observe lines 3-4):
 * ```html
 *   <code><span class="c">Line 1</span>
 *   <span class="c">Line 2</span>
 *   <span class="c">Line 3
 *   Line 4</span></code>
 * ```
 * Since the rest of the code assumes that "\n" characters separate lines, we
 * need to ensure that each line starts with its own span if necessary. The
 * output of this method should be:
 * ```html
 *   <code><span class="c">Line 1</span>
 *   <span class="c">Line 2</span>
 *   <span class="c">Line 3</span>
 *   <span class="c">Line 4</span></code>
 * ```
 */
function getCodeblockContents(codeEl) {
    const resultNode = codeEl.cloneNode();
    codeEl.childNodes.forEach((childNode) => {
        if (childNode.nodeType === Node.ELEMENT_NODE) {
            if (childNode.tagName === 'SPAN' &&
                childNode.textContent != null) {
                const lines = childNode.textContent.split('\n');
                lines.forEach((line, i) => {
                    // Ignore empty lines within a span, but still insert the \n.
                    if (line) {
                        const lineEl = childNode.cloneNode();
                        lineEl.textContent = line;
                        resultNode.appendChild(lineEl);
                    }
                    // Append a new line except after the last line in this span
                    if (i < lines.length - 1) {
                        resultNode.appendChild(document.createTextNode('\n'));
                    }
                });
            }
        }
        else {
            resultNode.appendChild(childNode.cloneNode(true));
        }
    });
    return resultNode.innerHTML;
}


/***/ }),

/***/ "./components/main_content/useMermaidDiagrams.tsx":
/*!********************************************************!*\
  !*** ./components/main_content/useMermaidDiagrams.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useMermaidDiagrams)
/* harmony export */ });
/* harmony import */ var jsx_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsx-dom */ "../node_modules/jsx-dom/index.js");

/**
 * A custom hook that renders "mermaid code blocks" into actual mermaid
 * diagrams.
 * @param mainElRef A ref to the `<main>` element from MainContent
 */
function useMermaidDiagrams(mainElRef, isDarkModeEnabled) {
    if (!mainElRef.current) {
        throw new Error('Primer Spec: Main Content: Expected main content ref to be initialized.');
    }
    if (!('mermaid' in window)) {
        return () => { };
    }
    mermaid.mermaidAPI.initialize({
        securityLevel: 'loose',
        startOnLoad: false,
        theme: isDarkModeEnabled ? 'dark' : 'default',
    });
    // Remove any existing mermaid diagrams
    mainElRef.current
        .querySelectorAll('.primer-spec-mermaid-output')
        .forEach((oldDiagram) => oldDiagram.remove());
    const mermaidBlocks = mainElRef.current.querySelectorAll('pre > code.language-mermaid');
    mermaidBlocks.forEach((mermaidBlock, i) => {
        const diagramID = `diagram-${i}`;
        const content = mermaidBlock.innerText;
        const parent = mermaidBlock.parentElement;
        if (parent == null) {
            return;
        }
        parent.style.display = 'none';
        const outputDiagram = (jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("div", { class: "primer-spec-mermaid-output", "aria-label": "Mermaid-enhanced diagram" }));
        parent.after(outputDiagram);
        mermaid.mermaidAPI.render(diagramID, content, (diagramHTML) => {
            outputDiagram.innerHTML = diagramHTML;
            const svgEl = outputDiagram.querySelector('svg');
            if (svgEl == null) {
                console.warn("Primer Spec: Mermaid diagram didn't have an SVG. Please report this issue at github.com/eeccs485staff/primer-spec/issues. Thanks!");
                return;
            }
            // Make diagrams a bit more accessible to screen readers.
            // Based on pattern 11 from: https://www.deque.com/blog/creating-accessible-svgs/
            svgEl.setAttribute('role', 'img');
            // (1) If the spec author added a title, make it available.
            if (parent.dataset['title']) {
                svgEl.insertBefore(jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("title", { id: `${diagramID}-title` }, parent.dataset['title']), svgEl.firstChild);
            }
            // (2) If the spec author added a description, make it available.
            //     Otherwise, use the diagram source code. (It isn't great, but it's
            //     better than nothing.)
            let description = parent.dataset['description'];
            if (!description) {
                description = content;
            }
            svgEl.insertBefore(jsx_dom__WEBPACK_IMPORTED_MODULE_0__.h("desc", { id: `${diagramID}-desc` }, description), svgEl.firstChild);
            svgEl.setAttribute('aria-labelledby', `${diagramID}-title ${diagramID}-desc`);
        });
    });
    return () => { };
}


/***/ }),

/***/ "./components/main_content/useTaskListCheckboxes.ts":
/*!**********************************************************!*\
  !*** ./components/main_content/useTaskListCheckboxes.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useTaskListCheckboxes)
/* harmony export */ });
/* unused harmony exports TASK_LIST_STORAGE_PREFIX, TASK_LIST_STORAGE_COUNT_KEY */
/* harmony import */ var _utils_Storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Storage */ "./utils/Storage.ts");

const TASK_LIST_STORAGE_PREFIX = 'primer_spec_task_list';
const TASK_LIST_STORAGE_COUNT_KEY = `${TASK_LIST_STORAGE_PREFIX}_count`;
/**
 * A custom hook that enables task-list checkboxes and persists the checkbox
 * state. Intended to be used inside `useEffect()`. Returns a cleanup method
 * to remove the event listeners.
 * @param mainElRef A ref to the `<main>` element from MainContent
 */
function useTaskListCheckboxes(mainElRef) {
    if (!mainElRef.current) {
        throw new Error('Primer Spec: Main Content: Expected main content ref to be initialized.');
    }
    // The structure of a task-list is:
    // <ul class="task-list">
    //   <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled>Item 1</li>
    //   <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled>Item 2</li>
    // </ul>
    // Wrap the entire contents of each <li> in a <label> for better a11y
    const task_list_items = mainElRef.current.querySelectorAll('.task-list-item');
    task_list_items.forEach((task_list_item) => {
        const label = document.createElement('label');
        label.innerHTML = task_list_item.innerHTML;
        task_list_item.innerHTML = '';
        task_list_item.appendChild(label);
    });
    // Find all GFM task-list checkboxes
    const task_checkboxes = [
        ...mainElRef.current.querySelectorAll('.task-list-item input.task-list-item-checkbox[type="checkbox"]'),
    ];
    let should_use_default_values = false;
    if (task_checkboxes.length !== getNumCheckboxesFromStorage()) {
        // If the number of checkboxes is different, then it's possible that
        // the page has changed (or the user is viewing this page for the first
        // time.)
        // Hence, we ignore storage values and render/store default states to
        // storage for future reloads.
        should_use_default_values = true;
        storeNumCheckboxes(task_checkboxes.length);
    }
    // Listen for changes to the *number of checkboxes* in local storage (from
    // another tab). If this changes, that usually means that the other tab has a
    // newer (and changed) version of the page compared to the current tab.
    // Since it's *very* likely that the current page is out-of-date, let us not
    // sync any future changes to checkboxes from this tab.
    let should_sync_checkbox_state = true;
    const count_change_callback = () => {
        should_sync_checkbox_state = false;
    };
    _utils_Storage__WEBPACK_IMPORTED_MODULE_0__["default"].addListenerForPage(TASK_LIST_STORAGE_COUNT_KEY, count_change_callback);
    // Keep track of the listeners so that we can unregister them if the
    // innerHTML prop to MainContent ever changes.
    const change_listeners = [];
    // Also add listeners for storage change events (in case the checkbox is
    // changed on another tab, we change it here too).
    const storage_change_listeners = [];
    task_checkboxes.forEach((checkbox, i) => {
        checkbox.disabled = false;
        if (should_use_default_values) {
            setCheckboxState(i, checkbox.checked);
        }
        else {
            checkbox.checked = getCheckboxState(i);
        }
        // Listen for clicks on the checkbox on the page.
        const checkbox_change_listener = () => {
            if (should_sync_checkbox_state) {
                // Persist preference
                setCheckboxState(i, checkbox.checked);
            }
        };
        change_listeners.push(checkbox_change_listener);
        checkbox.addEventListener('change', checkbox_change_listener);
        // Listen for changes to checkbox state on other tabs.
        const storage_change_listener = () => {
            if (should_sync_checkbox_state) {
                checkbox.checked = getCheckboxState(i);
            }
        };
        storage_change_listeners.push(storage_change_listener);
        addListenerForCheckboxStorage(i, storage_change_listener);
    });
    return () => {
        task_checkboxes.forEach((checkbox, i) => {
            checkbox.removeEventListener('change', change_listeners[i]);
            removeListenerForCheckboxStorage(i, storage_change_listeners[i]);
        });
        _utils_Storage__WEBPACK_IMPORTED_MODULE_0__["default"].removeListenerForPage(TASK_LIST_STORAGE_COUNT_KEY, count_change_callback);
    };
}
function getNumCheckboxesFromStorage() {
    const raw_count = _utils_Storage__WEBPACK_IMPORTED_MODULE_0__["default"].getForPage(TASK_LIST_STORAGE_COUNT_KEY) || '';
    const count = parseInt(raw_count, 10);
    return count || 0;
}
function storeNumCheckboxes(num_checkboxes) {
    _utils_Storage__WEBPACK_IMPORTED_MODULE_0__["default"].setForPage(TASK_LIST_STORAGE_COUNT_KEY, `${num_checkboxes}`);
}
function getCheckboxState(index) {
    const raw_state = _utils_Storage__WEBPACK_IMPORTED_MODULE_0__["default"].getForPage(`${TASK_LIST_STORAGE_PREFIX}_${index}`);
    return raw_state === 'true';
}
function setCheckboxState(index, state) {
    _utils_Storage__WEBPACK_IMPORTED_MODULE_0__["default"].setForPage(`${TASK_LIST_STORAGE_PREFIX}_${index}`, `${state}`);
}
function addListenerForCheckboxStorage(index, callback) {
    _utils_Storage__WEBPACK_IMPORTED_MODULE_0__["default"].addListenerForPage(`${TASK_LIST_STORAGE_PREFIX}_${index}`, callback);
}
function removeListenerForCheckboxStorage(index, callback) {
    _utils_Storage__WEBPACK_IMPORTED_MODULE_0__["default"].removeListenerForPage(`${TASK_LIST_STORAGE_PREFIX}_${index}`, callback);
}


/***/ }),

/***/ "./components/main_content/useTooltippedAbbreviations.tsx":
/*!****************************************************************!*\
  !*** ./components/main_content/useTooltippedAbbreviations.tsx ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useTooltippedAbbreviations)
/* harmony export */ });
/**
 * A custom hook that transforms elements of the form:
 * ```html
 *   <abbr title="...">...</abbr>
 * ```
 * with modified attributes that show a dynamic mobile-friendly tooltip.
 * @param mainElRef A ref to the `<main>` element from MainContent
 */
function useTooltippedAbbreviations(mainElRef) {
    if (!mainElRef.current) {
        throw new Error('Primer Spec: Main Content: Expected main content ref to be initialized.');
    }
    // The structure of a kramdown abbreviation is:
    // <abbr title="...">...</abbr>
    // Wrap the entire contents of each <li> in a <label> for better a11y
    const abbreviations = mainElRef.current.querySelectorAll('abbr[title]');
    abbreviations.forEach((abbreviation) => {
        abbreviation.classList.add('tooltipped', 'tooltipped-no-delay', 'tooltipped-n');
        abbreviation.setAttribute('aria-label', abbreviation.title);
        abbreviation.removeAttribute('title');
    });
    return () => { };
}


/***/ }),

/***/ "./components/settings/ThemePreview.tsx":
/*!**********************************************!*\
  !*** ./components/settings/ThemePreview.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ThemePreview)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");

function ThemePreview(props) {
    const { theme_definition } = props.subtheme;
    const { mode } = props;
    const svgClassName = `primer-spec-theme-preview-${props.subtheme.name}-${props.mode}`;
    const mainBgColor = theme_definition[mode]['--main-bg-color'] || 'white';
    const sidebarBgColor = theme_definition[mode]['--sidebar-bg-color'] || 'white';
    const sidebarHeadingTextColor = theme_definition[mode]['--sidebar-heading-text-color'] || 'black';
    const sidebarTocH1LinkColor = theme_definition[mode]['--sidebar-toc-h1-link-color'] || '#0366d6';
    const sidebarActiveTocSectionBgColor = theme_definition[mode]['--sidebar-active-toc-section-bg-color'] ||
        '#faed27';
    const sidebarActiveTocSectionLinkColor = theme_definition[mode]['--sidebar-active-toc-section-link-color'] ||
        'black';
    const sidebarTocSectionLinkColor = theme_definition[mode]['--sidebar-toc-section-link-color'] || 'black';
    const sidebarTocH1BorderColor = theme_definition[mode]['--sidebar-toc-h1-border-color'] || 'lightgrey';
    const mainHeadingLinkColor = theme_definition[mode]['--main-heading-link-color'] || '#0366d6';
    const mainTextColor = theme_definition[mode]['--main-text-color'] || 'black';
    const mainHeaderBorderBottomColor = theme_definition[mode]['--main-header-border-bottom-color'] || '#eaecef';
    const mainLinkColor = theme_definition[mode]['--main-link-color'] || '#0366d6';
    const mainTablePreBgColor = theme_definition[mode]['--main-table-pre-bg-color'] || '#f6f8fa';
    const sidebarBorderColor = theme_definition[mode]['--sidebar-border-color'] || '#eaecef';
    const mainTablePreBorderColor = mode === 'light' ? 'none' : 'rgb(60, 62, 66)';
    // The following SVG was designed by @bellakiminsun for Primer Spec. It was
    // modified so that the theme colors could be dynamically rendered by JS.
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("svg", { class: svgClassName, viewBox: "30.774 27.546 298.133 175.743", xmlns: "http://www.w3.org/2000/svg", style: `background-color: ${mainBgColor};`, role: "img" },
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("defs", null,
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("style", null,
                `.${svgClassName} .sidebar-bg{fill:${sidebarBgColor};stroke:${sidebarBgColor};}`,
                `.${svgClassName} .sidebar-heading{fill:${sidebarHeadingTextColor};}`,
                `.${svgClassName} .sidebar-toc-h1-link{fill:${sidebarTocH1LinkColor};}`,
                `.${svgClassName} .sidebar-active-toc-section-bg{fill:${sidebarActiveTocSectionBgColor};}`,
                `.${svgClassName} .sidebar-active-toc-section-link{fill:${sidebarActiveTocSectionLinkColor};}`,
                `.${svgClassName} .sidebar-toc-section-link{fill:${sidebarTocSectionLinkColor};}`,
                `.${svgClassName} .sidebar-toc-h1-border-color{fill:${sidebarTocH1BorderColor};}`,
                `.${svgClassName} .main-heading-link{fill:${mainHeadingLinkColor};}`,
                `.${svgClassName} .main-text{fill:${mainTextColor};}`,
                `.${svgClassName} .main-header-border-bottom{fill:none;stroke:${mainHeaderBorderBottomColor};stroke-miterlimit:10;}`,
                `.${svgClassName} .main-link{fill:${mainLinkColor};}`,
                `.${svgClassName} .main-table-pre{fill:${mainTablePreBgColor};stroke:${mainTablePreBorderColor};stroke-width:0.2}`,
                `.${svgClassName} .sidebar-border{fill:none;stroke:${sidebarBorderColor};stroke-miterlimit:10;}`)),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "sidebar-bg", x: "30.79", y: "27.669", width: "93.85", height: "175.646" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "sidebar-heading", x: "43.588", y: "43.623", width: "41", height: "10.26", rx: "5" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "sidebar-toc-h1-link", x: "43.588", y: "62.993", width: "58", height: "10.26", rx: "5" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("path", { class: "sidebar-active-toc-section-bg", d: "M 65.268 81.893 L 124.518 81.893 C 124.518 81.893 124.518 81.893 124.518 81.893 L 124.518 99.893 C 124.518 99.893 124.518 99.893 124.518 99.893 L 65.268 99.893 C 60.435 99.893 56.518 95.976 56.518 91.143 L 56.518 90.633 C 56.523 85.805 60.439 81.893 65.268 81.893 Z" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "sidebar-active-toc-section-link", x: "64.748", y: "85.853", width: "47.77", height: "10.26", rx: "5.13" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "sidebar-toc-section-link", x: "64.438", y: "105.573", width: "48.08", height: "10.26", rx: "5" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "sidebar-toc-section-link", x: "64.438", y: "124.573", width: "48.08", height: "10.26", rx: "5.13" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "sidebar-toc-h1-border-color", x: "-50.518", y: "-135.883", width: "2", height: "55", transform: "matrix(-1, 0, 0, -1, 0, 0)" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "main-heading-link", x: "141.588", y: "43.623", width: "106.93", height: "21.26", rx: "4.49" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "main-text", x: "141.518", y: "80.893", width: "162", height: "6", rx: "3" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("line", { class: "main-header-border-bottom", x1: "141.588", y1: "72.623", x2: "306.858", y2: "72.623" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "main-text", x: "141.518", y: "103.893", width: "101", height: "6", rx: "3" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "main-link", x: "245.388", y: "103.623", width: "28.13", height: "6.26", rx: "3.13" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "main-text", x: "276.518", y: "103.623", width: "27", height: "6", rx: "3" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "main-table-pre", x: "141.518", y: "170.893", width: "162", height: "32.424", style: "" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("circle", { class: "main-text", cx: "144.088", cy: "136.123", r: "2" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("circle", { class: "main-text", cx: "144.088", cy: "160.123", r: "2" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("circle", { class: "main-text", cx: "144.088", cy: "148.123", r: "2" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "main-link", x: "151.288", y: "133.063", width: "27.23", height: "6", rx: "3" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "main-link", x: "151.288", y: "145.063", width: "27.23", height: "6", rx: "3" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "sidebar-toc-h1-link", x: "43.638", y: "148.663", width: "58", height: "10.26", rx: "5" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "sidebar-toc-h1-border-color", x: "-50.518", y: "-203.281", width: "1.95", height: "36.728", transform: "matrix(-1, 0, 0, -1, 0, 0)", style: "" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "sidebar-toc-section-link", x: "64.888", y: "166.803", width: "48.08", height: "10.26", rx: "5" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "sidebar-toc-section-link", x: "64.888", y: "183.803", width: "48.08", height: "10.26", rx: "5.13" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("path", { class: "sidebar-toc-section-link", d: "M 65.248 203.3 C 66.2 202.04 67.796 201.283 69.504 201.283 L 107.283 201.283 C 108.94 201.285 110.459 202.119 111.424 203.317", style: "" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "main-text", x: "141.518", y: "92.893", width: "162", height: "6", rx: "3" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "main-text", x: "141.518", y: "115.893", width: "162", height: "6", rx: "3" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { class: "main-link", x: "151.398", y: "157.243", width: "27.23", height: "6", rx: "3" }),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("line", { class: "sidebar-border", x1: "124.588", y1: "27.623", x2: "124.588", y2: "203.317", style: "" })));
}


/***/ }),

/***/ "./components/settings/index.tsx":
/*!***************************************!*\
  !*** ./components/settings/index.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Settings)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");
/* harmony import */ var preact_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! preact/hooks */ "../node_modules/preact/hooks/dist/hooks.module.js");
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ "../node_modules/clsx/dist/clsx.m.js");
/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../Config */ "./Config.ts");
/* harmony import */ var _subthemes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../subthemes */ "./subthemes/index.ts");
/* harmony import */ var _subthemes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../subthemes */ "./subthemes/RegisteredSubthemes.ts");
/* harmony import */ var _utils_hooks_print__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/hooks/print */ "./utils/hooks/print.ts");
/* harmony import */ var _utils_hooks_usePrefersDarkMode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/hooks/usePrefersDarkMode */ "./utils/hooks/usePrefersDarkMode.ts");
/* harmony import */ var _ThemePreview__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ThemePreview */ "./components/settings/ThemePreview.tsx");








const SUBTHEME_MODE_INFO = [
    { name: 'light', label: 'Light' },
    { name: 'dark', label: 'Dark' },
    { name: 'system', label: 'Sync with OS setting' },
];
function Settings(props) {
    const is_print_in_progress = (0,_utils_hooks_print__WEBPACK_IMPORTED_MODULE_3__.usePrintInProgress)();
    // Refresh the component if dark mode changes (because we also want to
    // refresh the theme previews).
    (0,_utils_hooks_usePrefersDarkMode__WEBPACK_IMPORTED_MODULE_4__["default"])();
    // If a print is in progress, temporarily reset the theme to default light.
    const beforePrint = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallback)(_utils_hooks_print__WEBPACK_IMPORTED_MODULE_3__.useBeforePrint, []);
    const afterPrint = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallback)(_utils_hooks_print__WEBPACK_IMPORTED_MODULE_3__.useAfterPrint, []);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        return beforePrint(() => (0,_subthemes__WEBPACK_IMPORTED_MODULE_5__.updateTheme)({ name: 'default', mode: 'light' }, false));
    }, [beforePrint]);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        return afterPrint(() => (0,_subthemes__WEBPACK_IMPORTED_MODULE_5__.updateTheme)({ name: props.currentSubthemeName, mode: props.currentSubthemeMode }, false));
    }, [afterPrint, props.currentSubthemeName, props.currentSubthemeMode]);
    if (!props.settingsShown || is_print_in_progress) {
        return null;
    }
    const normalizedMode = (0,_subthemes__WEBPACK_IMPORTED_MODULE_5__.normalizeSubthemeMode)(props.currentSubthemeMode);
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "primer-spec-settings-container position-fixed top-0 left-0 width-full height-full" },
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: (0,clsx__WEBPACK_IMPORTED_MODULE_2__["default"])('primer-spec-settings', 'container-lg', 'markdown-body', 'px-3', 'my-5', {
                'primer-spec-content-margin-extra': props.sidebarShown && !props.isSmallScreen,
                'primer-spec-content-mobile': props.isSmallScreen,
            }) },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("h1", { class: "primer-spec-toc-ignore" }, 'Spec Theme Settings'),
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("h2", null, "Colors"),
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("form", { class: "primer-spec-settings-theme-preview-container", onSubmit: (e) => e.preventDefault() }, Object.values(_subthemes__WEBPACK_IMPORTED_MODULE_6__.REGISTERED_SUBTHEMES).map((subtheme) => ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("label", { key: subtheme.name, class: (0,clsx__WEBPACK_IMPORTED_MODULE_2__["default"])('primer-spec-settings-theme-preview-box', {
                    'primer-spec-settings-theme-preview-selected': props.currentSubthemeName === subtheme.name,
                }) },
                (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_ThemePreview__WEBPACK_IMPORTED_MODULE_7__["default"], { subtheme: subtheme, mode: normalizedMode }),
                (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: (0,clsx__WEBPACK_IMPORTED_MODULE_2__["default"])('primer-spec-settings-theme-preview-title', {
                        'primer-spec-settings-theme-preview-selected': props.currentSubthemeName === subtheme.name,
                    }) },
                    (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("input", { type: "radio", value: subtheme.name, name: "primer-spec-settings-subtheme", checked: props.currentSubthemeName === subtheme.name, onChange: (e) => props.onSubthemeNameChange(e.target.value) }),
                    ' ',
                    subtheme.label))))),
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("h2", null, "Color mode"),
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("form", { onSubmit: (e) => e.preventDefault() }, SUBTHEME_MODE_INFO.map((modeInfo) => ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("label", { key: modeInfo.name, class: "primer-spec-settings-theme-mode-label" },
                (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("input", { type: "radio", value: modeInfo.name, name: "primer-spec-settings-subtheme-mode", checked: props.currentSubthemeMode === modeInfo.name, onChange: (e) => props.onSubthemeModeChange(e.target
                        .value) }),
                ' ',
                modeInfo.label)))),
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("hr", null),
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("p", null,
                (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("small", null,
                    'Does the spec display incorrectly? ',
                    (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("a", { href: "https://github.com/eecs485staff/primer-spec/issues" }, 'Let us know by adding a new "issue" here.'))),
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "primer-spec-brand" },
                (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("a", { href: "https://github.com/eecs485staff/primer-spec/", target: "_blank", rel: "noreferrer" }, `Primer Spec v${_Config__WEBPACK_IMPORTED_MODULE_8__["default"].VERSION_RAW}`)))));
}


/***/ }),

/***/ "./components/sidebar/SidebarContent.tsx":
/*!***********************************************!*\
  !*** ./components/sidebar/SidebarContent.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SidebarContent)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");
/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Config */ "./Config.ts");
/* harmony import */ var _getSitemapName__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getSitemapName */ "./components/sidebar/getSitemapName.ts");
/* harmony import */ var _common_IconType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/IconType */ "./components/common/IconType.ts");




function SidebarContent(props) {
    if (props.sitemap == null) {
        return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { role: "presentation", onClick: () => true }, props.children));
    }
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("details", { role: "navigation", "aria-label": _Config__WEBPACK_IMPORTED_MODULE_1__["default"].SITEMAP_LABEL, open: props.sitemap.rootPage.current ? undefined : true },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("summary", null, _Config__WEBPACK_IMPORTED_MODULE_1__["default"].SITEMAP_LABEL),
            props.sitemap.siteUrls.map((sitePage) => ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(SitemapPage, { key: sitePage.url, page: sitePage }, sitePage.current ? props.children : undefined)))),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("hr", null),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(SitemapPage, { page: props.sitemap.rootPage, dedent: true }, props.sitemap.rootPage.current ? props.children : undefined)));
}
function SitemapPage(props) {
    const title = props.page.title || (props.page.path && (0,_getSitemapName__WEBPACK_IMPORTED_MODULE_2__["default"])(props.page.path));
    if (!title) {
        console.error(`Primer Spec: Page with URL ${props.page.url} has no title to display in sidebar`);
    }
    if (props.page.current) {
        return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("details", { open: true, class: props.dedent ? 'left-space-fix' : 'primer-spec-toc-sitemap-item' },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("summary", { class: "left-space-fix primer-spec-toc-active" }, title),
            props.children));
    }
    // Wrap everything in an <a/> element to indicate to mouse-users that it's
    // a hyperlink. But don't make it focusable because the <summary/> element
    // is itself focusable. Let the <summary/> function as the true hyperlink
    // element for keyboard users and screen-readers.
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("a", { href: props.page.url, tabIndex: -1 },
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("details", { class: props.dedent ? '' : 'primer-spec-toc-sitemap-item' },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("summary", { class: props.page.external ? 'primer-spec-toc-sitemap-external' : '', "data-order": props.page.external ? '' : props.page.sitemapOrder ?? '', role: "link", onClick: (e) => {
                    e.preventDefault();
                    window.location.href = props.page.url;
                } },
                title,
                props.page.external && ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                    (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("i", { class: _common_IconType__WEBPACK_IMPORTED_MODULE_3__["default"].EXTERNAL_LINK }),
                    (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "sr-only" }, "External Link")))))));
}


/***/ }),

/***/ "./components/sidebar/TableOfContents.tsx":
/*!************************************************!*\
  !*** ./components/sidebar/TableOfContents.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ TableOfContents)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");
/* harmony import */ var preact_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! preact/hooks */ "../node_modules/preact/hooks/dist/hooks.module.js");
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ "../node_modules/clsx/dist/clsx.m.js");
/* harmony import */ var _unflattenHeadings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./unflattenHeadings */ "./components/sidebar/unflattenHeadings.ts");




function TableOfContents(props) {
    // We don't actually care about the window.scrollY state, we can get that
    // from the window object on demand. We use a state-setter so that we can
    // re-render the component.
    const [_, setWindowScrollDistance] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useState)(window.scrollY || 0);
    // When the user scrolls, rerender the component.
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        // Throttle scroll events using rAF.
        // Based on: https://css-tricks.com/debouncing-throttling-explained-examples/
        let ticking = false;
        const scrollHandler = () => {
            if (!ticking) {
                window.requestAnimationFrame(() => {
                    setWindowScrollDistance(window.scrollY);
                    ticking = false;
                });
                ticking = true;
            }
        };
        window.addEventListener('scroll', scrollHandler, { passive: true });
        return () => {
            window.removeEventListener('scroll', scrollHandler);
        };
    }, []);
    const tocNodes = generateTocNodesForContentNode(props.contentNodeSelector, props.activeSectionOffsetY);
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("nav", { class: "primer-spec-toc", "aria-label": "Page contents" },
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { role: "presentation", onClick: () => {
                // When a TOC item is clicked, close the Settings. Also close the Sidebar on
                // small screens.
                if (props.isSmallScreen && props.sidebarShown) {
                    props.onToggleSidebar();
                }
                if (props.settingsShown) {
                    props.onToggleSettings();
                }
            } }, tocNodes)));
}
function generateTocNodesForContentNode(contentNodeSelector, threshold) {
    const contentNode = document.body.querySelector(contentNodeSelector);
    if (!contentNode) {
        throw new Error(`Primer Spec: TableOfContents: Main content node could not be found with selector: ${contentNodeSelector}`);
    }
    const headings = [
        ...contentNode.querySelectorAll('h1, h2, h3, h4, h5, h6'),
    ].filter((heading) => !heading.classList.contains('primer-spec-toc-ignore'));
    // Initialize activeHeadingIndex to the last index. If there are no active
    // headings below the threshold, we should be highlighting this section.
    let activeHeadingIndex = headings.length - 1;
    for (let i = 0; i < headings.length; ++i) {
        const heading = headings[i];
        if (heading.getBoundingClientRect().top - threshold > 0) {
            activeHeadingIndex = i - 1;
            break;
        }
    }
    return generateTocNodes(headings, activeHeadingIndex);
}
/**
 * Generate a list of JSX elements forming a Table of Contents.
 *
 * Previous versions of Primer Spec used a custom fork of
 * htmlTableOfContents.js by Matthew Christopher Kastor-Inare III
 * (https://github.com/matthewkastor/html-table-of-contents).
 * The current implementation bears very little resemblance to the original
 * algorithm besides the structure of the final HTML output.
 *
 * @param headings List of HTML nodes representing header elements in the page
 * @param activeHeadingIndex The index of the active heading item. Use -1 to deactivate.
 */
function generateTocNodes(headings, activeHeadingIndex) {
    const unflattened = (0,_unflattenHeadings__WEBPACK_IMPORTED_MODULE_3__["default"])(headings, activeHeadingIndex);
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("ul", { class: "primer-spec-toc-list" }, unflattened.map((section) => generateTocNodesHelper(section))));
}
function generateTocNodesHelper(section) {
    const heading = section.heading;
    const headingLabel = getHeadingLabel(heading);
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("li", null,
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: (0,clsx__WEBPACK_IMPORTED_MODULE_2__["default"])(`primer-spec-toc-item primer-spec-toc-${heading.tagName.toLowerCase()}`, {
                'primer-spec-toc-active': section.active,
            }) },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("a", { href: getAnchorLink(heading) }, headingLabel)),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("ul", { class: "primer-spec-toc-section primer-spec-toc-list" }, section.section.map((_section) => generateTocNodesHelper(_section)))));
}
function getAnchorLink(headingNode) {
    const anchorNode = headingNode.querySelector('a.anchorjs-link');
    if (!anchorNode) {
        console.error('Primer Spec: getAnchorLink expected heading to contain anchor while populating table of contents.');
        return '#';
    }
    return anchorNode.getAttribute('href') || '#';
}
// We memoize the heading label since it's not expected to change
// for the lifetime of the page.
const headingLabelMemo = {};
/**
 * Generate a label for use in the ToC Sidebar that represents the given
 * `headingNode`.
 *
 * Ordinarily, `headingNode.innerText` would have been sufficient, but this
 * function preserves inline code-blocks in headings.
 *
 * @param headingNode The heading node for which we need to generate a label
 */
function getHeadingLabel(headingNode) {
    if (headingNode.id && headingLabelMemo[headingNode.id]) {
        return headingLabelMemo[headingNode.id];
    }
    let headingLabel = null;
    try {
        const labelComponents = [];
        headingNode.childNodes.forEach((childNode) => {
            switch (childNode.nodeType) {
                case Node.TEXT_NODE:
                    labelComponents.push((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, childNode.nodeValue));
                    break;
                case Node.ELEMENT_NODE:
                    if (!(childNode instanceof HTMLElement)) {
                        throw new Error('getHeadingLabel expected HTML Element');
                    }
                    if (childNode.tagName === 'CODE' || childNode.tagName === 'TT') {
                        labelComponents.push((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("code", { class: [...childNode.classList].join(' ') }, childNode.innerText));
                    }
                    else if (childNode.tagName === 'ABBR') {
                        labelComponents.push((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, childNode.innerText));
                    }
                    else if (childNode.tagName === 'A' &&
                        childNode.classList.contains('anchorjs-link')) {
                        // Skip the AnchorJS link
                        return;
                    }
                    else {
                        // Retain any other HTML elements
                        labelComponents.push((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("span", { 
                            // eslint-disable-next-line react/no-danger
                            dangerouslySetInnerHTML: { __html: childNode.outerHTML } }));
                    }
                    break;
            }
        });
        headingLabel = (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, labelComponents);
    }
    catch (e) {
        console.error('Primer Spec ToC: Errored while building heading label for heading', headingNode);
        headingLabel = (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, headingNode.innerText);
    }
    if (headingNode.id) {
        headingLabelMemo[headingNode.id] = headingLabel;
    }
    return headingLabel;
}


/***/ }),

/***/ "./components/sidebar/getSitemapName.ts":
/*!**********************************************!*\
  !*** ./components/sidebar/getSitemapName.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getSitemapName)
/* harmony export */ });
/**
 * Generate a sitemap-label that describes a page with path `pathName`. The
 * extracted name is simply the name of the file in title-case and
 * word-boundaries replaced with spaces.
 * @param pathName path to a file whose sitemap-label needs to be generated
 * @example '../dir1/dir2/my-page.html' --> 'My Page'
 */
function getSitemapName(pathName) {
    pathName = getFilenameFromPath(pathName);
    const dotIndex = pathName.lastIndexOf('.');
    if (dotIndex !== -1) {
        pathName = pathName.slice(0, dotIndex);
    }
    // Replace hyphens and underscores with spaces
    pathName = pathName.replace(/[-_]/g, ' ');
    return toTitleCase(pathName);
}
function getFilenameFromPath(pathName) {
    const pathParts = pathName.split('/');
    return pathParts[pathParts.length - 1];
}
function toTitleCase(str) {
    return str.replace(/\w\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());
}


/***/ }),

/***/ "./components/sidebar/getSitemapUrls.ts":
/*!**********************************************!*\
  !*** ./components/sidebar/getSitemapUrls.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getSitemapUrls)
/* harmony export */ });
/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Config */ "./Config.ts");

/**
 * Parse raw sitemap information from `Config.ts` and return a data structure
 * that is easier to render.
 *
 * NOTE: The result of this method is not memoized.
 * @param sitemapEnabled boolean indicating whether to use sitemap URLs from
 *                       `Config.ts`
 */
function getSitemapUrls(sitemapEnabled) {
    if (!sitemapEnabled) {
        return null;
    }
    // Remove assets pages
    const siteUrls = _Config__WEBPACK_IMPORTED_MODULE_0__["default"].SITEMAP_URLS.filter((pageInfo) => !pageInfo.path?.startsWith('assets'));
    if (siteUrls.length === 0) {
        return null;
    }
    const rootIndex = siteUrls.findIndex((page) => /^(index|readme)\.(md|htm|html)$/.test(page.path?.toLowerCase() || ''));
    if (rootIndex === -1) {
        console.warn('PrimerSpec: processSitemapURLs: Expected to find a root page. Disabling sitemap.');
        return null;
    }
    const [rootPage] = siteUrls.splice(rootIndex, 1);
    rootPage.title = _Config__WEBPACK_IMPORTED_MODULE_0__["default"].SITEMAP_SITE_TITLE;
    siteUrls.sort((lhs, rhs) => {
        if (lhs.external && rhs.external) {
            // If both links are external, preserve the order that they are declared
            // in.
            return 0;
        }
        else if (lhs.external) {
            // If lhs is external, it should come after all internal links.
            return 1;
        }
        else if (rhs.external) {
            // If rhs is external but not lhs, then rhs should come after lhs.
            return -1;
        }
        const lhsOrder = lhs.sitemapOrder ?? Number.MAX_VALUE;
        const rhsOrder = rhs.sitemapOrder ?? Number.MAX_VALUE;
        // If both items are internal, sort them based on which one's sitemapOrder
        // property is lower.
        return lhsOrder - rhsOrder;
    });
    return { rootPage, siteUrls };
}


/***/ }),

/***/ "./components/sidebar/index.tsx":
/*!**************************************!*\
  !*** ./components/sidebar/index.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Sidebar)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");
/* harmony import */ var preact_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! preact/hooks */ "../node_modules/preact/hooks/dist/hooks.module.js");
/* harmony import */ var _common_IconType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/IconType */ "./components/common/IconType.ts");
/* harmony import */ var _common_InlineNavButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/InlineNavButton */ "./components/common/InlineNavButton.tsx");
/* harmony import */ var _common_InlineButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/InlineButton */ "./components/common/InlineButton.tsx");
/* harmony import */ var _TableOfContents__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TableOfContents */ "./components/sidebar/TableOfContents.tsx");
/* harmony import */ var _utils_hooks_print__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/hooks/print */ "./utils/hooks/print.ts");
/* harmony import */ var _utils_Storage__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/Storage */ "./utils/Storage.ts");
/* harmony import */ var _SidebarContent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SidebarContent */ "./components/sidebar/SidebarContent.tsx");
/* harmony import */ var _getSitemapUrls__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getSitemapUrls */ "./components/sidebar/getSitemapUrls.ts");










const SIDEBAR_SCROLL_POSITION_STORAGE_KEY = 'primer_spec_sidebar_scroll_position';
function Sidebar(props) {
    const { isSmallScreen, sidebarShown, onToggleSidebar } = props;
    const is_print_in_progress = (0,_utils_hooks_print__WEBPACK_IMPORTED_MODULE_2__.usePrintInProgress)();
    const sidebar_ref = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
    const sitemapUrls = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (0,_getSitemapUrls__WEBPACK_IMPORTED_MODULE_3__["default"])(props.sitemapEnabled), [
        props.sitemapEnabled,
    ]);
    const saveScrollPositionThenToggleSidebar = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {
        // Before closing the sidebar, persist the scroll position within the
        // Sidebar.
        if (sidebar_ref?.current) {
            setSidebarScrollPosition(sidebar_ref.current.scrollTop);
        }
        onToggleSidebar();
    }, [onToggleSidebar]);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        // On small screens, close the Sidebar if the user clicks outside the
        // Sidebar. We have to check the following before toggling the Sidebar:
        //   - The clicked element is not in the sidebar
        //   - The clicked element is still present in the DOM
        //       (If the user clicks the Sidebar toggle, the toggle disappears with
        //       the Sidebar, but the click handler fires only afterwards. The
        //       toggle is _technically_ not in the sidebar any more.)
        //   - The Sidebar is shown.
        const window_click_listener = (event) => {
            const target = event?.target;
            if (target &&
                !target.matches('.primer-spec-sidebar, .primer-spec-sidebar *') &&
                document.body.contains(target) &&
                sidebarShown) {
                saveScrollPositionThenToggleSidebar();
            }
        };
        if (isSmallScreen) {
            window.addEventListener('click', window_click_listener);
        }
        return () => {
            window.removeEventListener('click', window_click_listener);
        };
    }, [isSmallScreen, sidebarShown, saveScrollPositionThenToggleSidebar]);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {
        // Use the persisted scroll position if available, then reset it.
        // useLayoutEffect runs *before* the screen is updated. This means that
        // the Sidebar scrolls *before* it's shown to the user (preventing
        // "flashing".)
        const scrollPosition = getSidebarScrollPosition();
        if (scrollPosition && sidebar_ref?.current) {
            sidebar_ref.current.scrollTop = scrollPosition;
            setSidebarScrollPosition(null);
        }
    });
    if (!props.sidebarShown || is_print_in_progress) {
        return (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("div", null);
    }
    // The explicit onClick handler is needed to force Safari (iOS) to propagate
    // click events for the sidebar.
    // We use an <aside> element to indicate to screen-readers that the Sidebar
    // only contains complementary content.
    // We also need to unset the Sidebar's `tabIndex` to make its border
    // unfocusable.
    return ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("aside", { ref: sidebar_ref, class: "primer-spec-sidebar position-fixed top-0 py-5 no-print", "aria-label": "Contents Sidebar", tabIndex: -1 },
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("h2", { class: "primer-spec-toc-ignore", id: "primer-spec-toc-contents" },
            sitemapUrls == null ? undefined : ((0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_common_InlineNavButton__WEBPACK_IMPORTED_MODULE_4__["default"], { icon: _common_IconType__WEBPACK_IMPORTED_MODULE_5__["default"].HOME, href: sitemapUrls.rootPage.url, ariaLabel: sitemapUrls.rootPage.title || 'Home' }),
                ' ')),
            "Contents",
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_common_InlineButton__WEBPACK_IMPORTED_MODULE_6__["default"], { icon: _common_IconType__WEBPACK_IMPORTED_MODULE_5__["default"].SIDEBAR, floatRight: true, onClick: saveScrollPositionThenToggleSidebar, ariaLabel: "Close navigation pane" })),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)("br", null),
        (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_SidebarContent__WEBPACK_IMPORTED_MODULE_7__["default"], { sitemap: sitemapUrls },
            (0,preact__WEBPACK_IMPORTED_MODULE_0__.h)(_TableOfContents__WEBPACK_IMPORTED_MODULE_8__["default"], { contentNodeSelector: props.contentNodeSelector, isSmallScreen: props.isSmallScreen, sidebarShown: props.sidebarShown, settingsShown: props.settingsShown, activeSectionOffsetY: props.activeSectionOffsetY, onToggleSidebar: saveScrollPositionThenToggleSidebar, onToggleSettings: props.onToggleSettings }))));
}
function setSidebarScrollPosition(scrollPosition) {
    _utils_Storage__WEBPACK_IMPORTED_MODULE_9__["default"].setForPage(SIDEBAR_SCROLL_POSITION_STORAGE_KEY, `${scrollPosition}`);
}
function getSidebarScrollPosition() {
    const scrollPosition = parseInt(_utils_Storage__WEBPACK_IMPORTED_MODULE_9__["default"].getForPage(SIDEBAR_SCROLL_POSITION_STORAGE_KEY) || '', 10);
    return Number.isNaN(scrollPosition) ? null : scrollPosition;
}


/***/ }),

/***/ "./components/sidebar/unflattenHeadings.ts":
/*!*************************************************!*\
  !*** ./components/sidebar/unflattenHeadings.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ unflattenHeadings)
/* harmony export */ });
/**
 * Converts a flat list of heading nodes into a nested tree-like structure
 * indicating "sections".
 *
 * A particular heading's "section" consists of all subsequent headings with
 * lower precedence. For instance:
 *
 *   Flat list of headings: `[h2, h1, h3, h4, h3]`
 *   Active heading index: 3
 *   Resulting unflattened structure:
 * ```
 *     [
 *       { heading: h2, section: [] },
 *       {
 *         heading: h1,
 *         section: [
 *           {
 *             heading: h3,
 *             active: true,
 *             section: [
 *               { heading: h4, section: [] },
 *             ],
 *           },
 *           { heading: h3, section: [] }
 *         ],
 *       }
 *     ]
 * ```
 *
 * @param headings List of HTML elements representing heading nodes in the DOM
 * @param activeHeadingIndex (optional) Index of the active heading item.
 */
function unflattenHeadings(headings, activeHeadingIndex = -1) {
    if (!headings.length) {
        return [];
    }
    // This is where we will build the result.
    const unflattened = [];
    // We process each of the headings in the list sequentially. Since we will
    // init the following vars with headings[0], we start headingsIndex at 1.
    let headingsIndex = 1;
    // This is the section of the previous heading (headings[headingsIndex - 1]).
    let previousHeadingSection = {
        heading: headings[0],
        active: activeHeadingIndex === 0,
        section: [],
    };
    // When we find a heading of lower precedence, we store the higher
    // precedence headings in this stack.
    // For instance, when processing [h1, h2, h3], and headingsIndex is 2, we
    // expect the stack to hold h1's section, and we expect
    // previousHeadingSection to hold h2's section.
    const stackOfSections = [];
    while (headingsIndex < headings.length) {
        const currentHeading = headings[headingsIndex];
        const currentHeadingSection = {
            heading: currentHeading,
            active: activeHeadingIndex === headingsIndex,
            section: [],
        };
        if (currentHeading.tagName > previousHeadingSection.heading.tagName) {
            // The current heading should be included in the previous heading's
            // section.
            previousHeadingSection.section.push(currentHeadingSection);
            // We need to compare the current heading with subsequent headings.
            // (What if the next heading needs to be included in the current
            // heading's section?)
            stackOfSections.push(previousHeadingSection);
            previousHeadingSection = currentHeadingSection;
            ++headingsIndex;
        }
        else {
            // The current heading should NOT be part of the previous heading's
            // section.
            // eslint-disable-next-line no-lonely-if
            if (stackOfSections.length) {
                // But maybe the current heading needs to be included in the section of
                // the heading before the previous? We need to compare with every
                // section in the stack to be sure. (Notice that we don't increment
                // headingsIndex because we're not yet done with this heading.)
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                previousHeadingSection = stackOfSections.pop();
            }
            else {
                // The current heading can't fit in any of the existing sections. We
                // close off the previousHeadingSection and start a new top-level
                // section.
                unflattened.push(previousHeadingSection);
                previousHeadingSection = currentHeadingSection;
                ++headingsIndex;
            }
        }
    }
    // At the end, if the stack has stuff, we need to close off the section.
    if (stackOfSections.length) {
        // Notice that previousHeadingSection may not be at the bottom of the
        // stack, but it's definitely included in one of the sub-sections.
        unflattened.push(stackOfSections[0]);
    }
    else {
        // The previousHeadingSection is not attached to any other sections, so
        // it's a top-level section.
        unflattened.push(previousHeadingSection);
    }
    return unflattened;
}


/***/ }),

/***/ "./subthemes/RegisteredSubthemes.ts":
/*!******************************************!*\
  !*** ./subthemes/RegisteredSubthemes.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "REGISTERED_SUBTHEMES": () => (/* binding */ REGISTERED_SUBTHEMES)
/* harmony export */ });
/* unused harmony export registerNewSubtheme */
/* harmony import */ var _createSubtheme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createSubtheme */ "./subthemes/createSubtheme.ts");
/* harmony import */ var _definitions_default_theme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./definitions/default.theme */ "./subthemes/definitions/default.theme.ts");
/* harmony import */ var _definitions_bella_theme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./definitions/bella.theme */ "./subthemes/definitions/bella.theme.ts");
/* harmony import */ var _definitions_modern_theme__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./definitions/modern.theme */ "./subthemes/definitions/modern.theme.ts");
/* harmony import */ var _definitions_xcode_civic_theme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./definitions/xcode_civic.theme */ "./subthemes/definitions/xcode_civic.theme.ts");





const REGISTERED_SUBTHEMES = {
    default: (0,_createSubtheme__WEBPACK_IMPORTED_MODULE_0__["default"])('default', 'Primer', _definitions_default_theme__WEBPACK_IMPORTED_MODULE_1__["default"]),
    bella: (0,_createSubtheme__WEBPACK_IMPORTED_MODULE_0__["default"])('bella', 'Bella', _definitions_bella_theme__WEBPACK_IMPORTED_MODULE_2__["default"]),
    modern: (0,_createSubtheme__WEBPACK_IMPORTED_MODULE_0__["default"])('modern', 'Modern', _definitions_modern_theme__WEBPACK_IMPORTED_MODULE_3__["default"]),
    'xcode-civic': (0,_createSubtheme__WEBPACK_IMPORTED_MODULE_0__["default"])('xcode-civic', 'Xcode Civic', _definitions_xcode_civic_theme__WEBPACK_IMPORTED_MODULE_4__["default"]),
};
function registerNewSubtheme(name, label, definition) {
    REGISTERED_SUBTHEMES[name] = (0,_createSubtheme__WEBPACK_IMPORTED_MODULE_0__["default"])(name, label, definition);
}
window.PrimerSpec = {
    ...window.PrimerSpec,
    REGISTERED_SUBTHEMES,
    registerNewSubtheme,
};


/***/ }),

/***/ "./subthemes/Subtheme.ts":
/*!*******************************!*\
  !*** ./subthemes/Subtheme.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SUBTHEME_VARS": () => (/* binding */ SUBTHEME_VARS),
/* harmony export */   "ROUGE_STYLE_PROPS": () => (/* binding */ ROUGE_STYLE_PROPS),
/* harmony export */   "ROUGE_CLASS_NAMES": () => (/* binding */ ROUGE_CLASS_NAMES)
/* harmony export */ });
const SUBTHEME_VARS = [
    '--sidebar-bg-color',
    '--sidebar-border-color',
    '--sidebar-heading-text-color',
    '--sidebar-heading-link-color',
    '--sidebar-toc-h1-link-color',
    '--sidebar-toc-h1-border-color',
    '--sidebar-toc-h2-link-color',
    '--sidebar-active-toc-section-bg-color',
    '--sidebar-active-toc-section-link-color',
    '--sidebar-active-toc-h1-section-link-color',
    '--sidebar-active-toc-h2-section-link-color',
    '--sidebar-toc-section-link-color',
    '--sidebar-tt-active-text-color',
    '--sidebar-tt-active-bg-color',
    '--sidebar-tt-active-border',
    '--sidebar-tt-active-border-radius',
    '--main-heading-text-color',
    '--main-heading-link-color',
    '--main-link-color',
    '--hoverable-link-hover-color',
    '--main-header-border-bottom-color',
    '--main-image-border-color',
    '--main-image-border-color-inverted',
    '--tt-text-color',
    '--tt-bg-color',
    '--tt-border',
    '--tt-border-radius',
    '--main-bg-color',
    '--main-text-color',
    '--main-table-bg-color',
    '--main-table-bg-contrast-color',
    '--main-table-pre-bg-color',
    '--main-table-pre-text-color',
    '--main-table-pre-border',
    '--main-blockquote-text-color',
    '--main-blockquote-text-border',
    '--main-header-border-bottom-color',
    '--primer-spec-callout-neutral-bg-color',
    '--primer-spec-callout-neutral-text-color',
    '--primer-spec-callout-neutral-border-color',
    '--primer-spec-callout-info-bg-color',
    '--primer-spec-callout-info-text-color',
    '--primer-spec-callout-info-border-color',
    '--primer-spec-callout-warning-bg-color',
    '--primer-spec-callout-warning-text-color',
    '--primer-spec-callout-warning-border-color',
    '--primer-spec-callout-danger-bg-color',
    '--primer-spec-callout-danger-text-color',
    '--primer-spec-callout-danger-border-color',
    '--primer-spec-callout-success-bg-color',
    '--primer-spec-callout-success-text-color',
    '--primer-spec-callout-success-border-color',
    '--code-block-default-color',
    '--code-block-border-color',
    '--code-block-header-bg-color',
    '--code-block-bg-color',
    '--code-block-line-number-color',
    '--code-block-highlight-bg-color',
    '--code-block-highlight-shadow-color',
    '--code-block-button-color',
    '--code-block-button-bg-color',
    '--code-block-button-border-color',
    '--code-block-button-shadow',
    '--code-block-button-shadow-inset-color',
    '--code-block-button-hover-bg-color',
    '--code-block-button-hover-border-color',
    '--tooltip-background-color',
    '--tooltip-color',
    '--kbd-border-color',
];
const ROUGE_STYLE_PROPS = [
    'color',
    'background-color',
    'font-style',
    'font-weight',
];
const ROUGE_CLASS_NAMES = [
    'cm',
    'cp',
    'c1',
    'cs',
    'cd',
    'c',
    'err',
    'gd',
    'ge',
    'gr',
    'gh',
    'gi',
    'go',
    'gp',
    'gs',
    'gu',
    'gt',
    'kc',
    'kd',
    'kn',
    'kp',
    'kr',
    'kt',
    'kv',
    'k',
    'mf',
    'mh',
    'il',
    'mi',
    'mo',
    'mb',
    'mx',
    'm',
    'sb',
    'sc',
    'sd',
    's2',
    'se',
    'sh',
    'si',
    'sx',
    'sr',
    's1',
    'ss',
    's',
    'na',
    'bp',
    'nb',
    'nc',
    'no',
    'nd',
    'ni',
    'ne',
    'nf',
    'nl',
    'nn',
    'nt',
    'nx',
    'vc',
    'vg',
    'vi',
    'nv',
    'ow',
    'o',
    'w',
    'txt',
];


/***/ }),

/***/ "./subthemes/createSubtheme.ts":
/*!*************************************!*\
  !*** ./subthemes/createSubtheme.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ createSubtheme)
/* harmony export */ });
/* harmony import */ var _Subtheme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subtheme */ "./subthemes/Subtheme.ts");
/* harmony import */ var _rouge_themes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rouge_themes */ "./subthemes/rouge_themes/index.ts");


function apply(theme_definition, mode) {
    const theme_vars = theme_definition[mode];
    const bodyEl = document.body;
    for (const [theme_var, value] of Object.entries(theme_vars)) {
        bodyEl.style.setProperty(theme_var, value || null);
    }
    let rouge_theme_name = theme_vars['rouge_theme'];
    if (!rouge_theme_name || !_rouge_themes__WEBPACK_IMPORTED_MODULE_0__["default"][rouge_theme_name]) {
        rouge_theme_name = 'default';
    }
    _rouge_themes__WEBPACK_IMPORTED_MODULE_0__["default"][rouge_theme_name].apply();
    // Also reflect the `mode` in the DOM so that CSS can use it.
    document.documentElement.setAttribute('data-theme-mode', mode);
}
function reset(theme_definition, mode) {
    const theme_vars = theme_definition[mode];
    const bodyEl = document.body;
    _Subtheme__WEBPACK_IMPORTED_MODULE_1__.SUBTHEME_VARS.map((theme_var) => {
        bodyEl.style.removeProperty(theme_var);
    });
    if (theme_vars['rouge_theme'] && _rouge_themes__WEBPACK_IMPORTED_MODULE_0__["default"][theme_vars['rouge_theme']]) {
        _rouge_themes__WEBPACK_IMPORTED_MODULE_0__["default"][theme_vars['rouge_theme']].reset();
    }
}
/**
 * Create a Subtheme based on a given CSS config
 * @param name The name of the subtheme
 * @param theme_definition The CSS variables describing this subtheme
 */
function createSubtheme(name, label, theme_definition) {
    return {
        name,
        label,
        theme_definition,
        apply: (mode) => apply(theme_definition, mode),
        reset: (mode) => reset(theme_definition, mode),
    };
}


/***/ }),

/***/ "./subthemes/definitions/bella.theme.ts":
/*!**********************************************!*\
  !*** ./subthemes/definitions/bella.theme.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_dark_theme_colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common_dark_theme_colors */ "./subthemes/definitions/common_dark_theme_colors.ts");

const BELLA_PRIMARY_TEXT_COLOR = 'rgb(69, 98, 115)';
const BELLA_MAIN_LINK_COLOR = 'rgb(219, 71, 93)';
const BELLA_DARK_PRIMARY_COLOR = 'rgb(67, 116, 121)';
const BELLA_DARK_PRIMARY_HEADING_COLOR = '#61a1a8'; // lighten($BELLA_DARK_PRIMARY_COLOR, 15%)
const BELLA_DARK_MAIN_LINK_COLOR = 'rgb(218, 128, 131)';
const BELLA_DARK_SIDEBAR_HEADING_COLOR = 'white';
const bella_theme_vars = {
    light: {
        '--sidebar-bg-color': 'rgb(246, 246, 246)',
        '--sidebar-heading-text-color': BELLA_PRIMARY_TEXT_COLOR,
        '--sidebar-heading-link-color': BELLA_MAIN_LINK_COLOR,
        '--sidebar-toc-h1-link-color': BELLA_PRIMARY_TEXT_COLOR,
        '--sidebar-toc-h1-border-color': BELLA_PRIMARY_TEXT_COLOR,
        '--sidebar-toc-h2-link-color': BELLA_PRIMARY_TEXT_COLOR,
        '--sidebar-active-toc-section-bg-color': BELLA_PRIMARY_TEXT_COLOR,
        '--sidebar-active-toc-section-link-color': 'white',
        '--sidebar-active-toc-h1-section-link-color': 'white',
        '--sidebar-active-toc-h2-section-link-color': 'white',
        '--sidebar-toc-section-link-color': 'rgb(58, 58, 58)',
        '--main-heading-text-color': BELLA_PRIMARY_TEXT_COLOR,
        '--main-heading-link-color': BELLA_MAIN_LINK_COLOR,
        '--main-link-color': BELLA_MAIN_LINK_COLOR,
        '--tt-border-radius': '3px',
        '--hoverable-link-hover-color': '#731624',
        rouge_theme: 'default',
    },
    dark: {
        '--sidebar-bg-color': 'rgb(58, 58, 60)',
        '--sidebar-heading-text-color': BELLA_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-heading-link-color': BELLA_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-toc-h1-link-color': BELLA_DARK_PRIMARY_HEADING_COLOR,
        '--sidebar-toc-h1-border-color': BELLA_DARK_PRIMARY_HEADING_COLOR,
        '--sidebar-toc-h2-link-color': BELLA_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-active-toc-section-bg-color': BELLA_DARK_PRIMARY_COLOR,
        '--sidebar-active-toc-section-link-color': BELLA_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-active-toc-h1-section-link-color': BELLA_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-active-toc-h2-section-link-color': BELLA_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-toc-section-link-color': BELLA_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-tt-active-text-color': BELLA_DARK_SIDEBAR_HEADING_COLOR,
        '--main-heading-text-color': BELLA_DARK_PRIMARY_HEADING_COLOR,
        '--main-heading-link-color': BELLA_DARK_MAIN_LINK_COLOR,
        '--main-link-color': BELLA_DARK_MAIN_LINK_COLOR,
        '--hoverable-link-hover-color': '#fdf6f7',
        '--main-bg-color': 'rgb(28, 28, 30)',
        ..._common_dark_theme_colors__WEBPACK_IMPORTED_MODULE_0__["default"],
        rouge_theme: 'monokai',
    },
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bella_theme_vars);


/***/ }),

/***/ "./subthemes/definitions/common_dark_theme_colors.ts":
/*!***********************************************************!*\
  !*** ./subthemes/definitions/common_dark_theme_colors.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const MAIN_TEXT_COLOR = '#c9d1d9';
const CODE_COLOR = 'white';
const CODE_BG_COLOR = '#161b22';
const CODE_BORDER_COLOR = 'rgb(60, 62, 66)';
const CODE_BORDER = `1px solid ${CODE_BORDER_COLOR}`;
const BORDER_LINE_COLOR = '#21262d';
const BORDER_LINE_COLOR_INVERTED = '#eaecef';
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    '--sidebar-border-color': BORDER_LINE_COLOR,
    '--main-text-color': MAIN_TEXT_COLOR,
    '--main-table-bg-color': '#0d1117',
    '--main-table-bg-contrast-color': '#262d36',
    '--main-table-pre-bg-color': CODE_BG_COLOR,
    '--main-table-pre-text-color': CODE_COLOR,
    '--main-table-pre-border': CODE_BORDER,
    '--tt-bg-color': 'rgba(240, 246, 252, 0.15)',
    '--tt-text-color': MAIN_TEXT_COLOR,
    '--tt-border': '0px',
    '--tt-border-radius': '6px',
    // Use the sidebar active color for each theme
    '--sidebar-tt-active-bg-color': 'rgba(0, 0, 0, 0)',
    '--main-blockquote-text-color': '#8b949e',
    '--main-blockquote-text-border': '#3b434b',
    '--main-header-border-bottom-color': BORDER_LINE_COLOR,
    '--main-image-border-color': BORDER_LINE_COLOR,
    '--main-image-border-color-inverted': BORDER_LINE_COLOR_INVERTED,
    '--primer-spec-callout-neutral-bg-color': 'rgba(22, 27, 34, 0.8)',
    '--primer-spec-callout-neutral-text-color': MAIN_TEXT_COLOR,
    '--primer-spec-callout-neutral-border-color': 'rgb(48, 54, 61)',
    '--primer-spec-callout-info-bg-color': 'rgba(56, 139, 253, 0.1)',
    '--primer-spec-callout-info-text-color': '#79c0ff',
    '--primer-spec-callout-info-border-color': 'rgba(56, 139, 253, 0.4)',
    '--primer-spec-callout-warning-bg-color': 'rgba(187, 128, 9, 0.1)',
    '--primer-spec-callout-warning-text-color': '#e3b341',
    '--primer-spec-callout-warning-border-color': 'rgba(187, 128, 9, 0.4)',
    '--primer-spec-callout-danger-bg-color': 'rgba(248, 81, 73, 0.1)',
    '--primer-spec-callout-danger-text-color': '#ff7b72',
    '--primer-spec-callout-danger-border-color': 'rgba(248, 81, 73, 0.4)',
    '--primer-spec-callout-success-bg-color': 'rgba(46, 160, 67, 0.1)',
    '--primer-spec-callout-success-text-color': '#56d364',
    '--primer-spec-callout-success-border-color': 'rgba(46, 160, 67, 0.4)',
    '--code-block-default-color': MAIN_TEXT_COLOR,
    '--code-block-border-color': CODE_BORDER_COLOR,
    '--code-block-header-bg-color': CODE_BG_COLOR,
    '--code-block-bg-color': 'rgb(13, 17, 23)',
    '--code-block-line-number-color': '#484f58',
    '--code-block-highlight-bg-color': 'rgba(187, 128, 9, 0.15)',
    '--code-block-highlight-shadow-color': 'rgba(187, 128, 9, 0.4)',
    '--code-block-button-color': MAIN_TEXT_COLOR,
    '--code-block-button-bg-color': BORDER_LINE_COLOR,
    '--code-block-button-border-color': 'rgba(240, 246, 252, 0.1)',
    '--code-block-button-shadow': '0 0 transparent',
    '--code-block-button-shadow-inset-color': '0 0 transparent',
    '--code-block-button-hover-bg-color': 'rgb(48, 54, 61)',
    '--code-block-button-hover-border-color': 'rgb(140, 148, 158)',
    '--tooltip-background-color': 'rgb(110, 118, 129)',
    '--tooltip-color': 'white',
    '--kbd-border-color': 'rgba(110, 118, 129, 0.4)',
});


/***/ }),

/***/ "./subthemes/definitions/default.theme.ts":
/*!************************************************!*\
  !*** ./subthemes/definitions/default.theme.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_dark_theme_colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common_dark_theme_colors */ "./subthemes/definitions/common_dark_theme_colors.ts");

const DEFAULT_DARK_BG_COLOR = '#0d1117'; // GitHub's dark mode background color
const DEFAULT_DARK_MAIN_HEADING_COLOR = '#e7ebee'; // lighten(#c9d1d9 (MAIN_TEXT_COLOR), 10%)
const DEFAULT_DARK_SIDEBAR_HEADING_COLOR = '#cccccc'; // darken(MAIN_HEADING_COLOR, 15%)
const DEFAULT_DARK_LINK_COLOR = '#58a6ff'; // GitHub's dark mode link color
const default_theme_vars = {
    light: { rouge_theme: 'default' },
    dark: {
        '--sidebar-bg-color': DEFAULT_DARK_BG_COLOR,
        '--sidebar-heading-text-color': DEFAULT_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-heading-link-color': DEFAULT_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-toc-h1-link-color': DEFAULT_DARK_LINK_COLOR,
        '--sidebar-toc-h1-border-color': '#555',
        '--sidebar-toc-h2-link-color': DEFAULT_DARK_LINK_COLOR,
        '--sidebar-active-toc-section-bg-color': '#e4d93f',
        '--sidebar-active-toc-section-link-color': DEFAULT_DARK_BG_COLOR,
        '--sidebar-active-toc-h1-section-link-color': DEFAULT_DARK_BG_COLOR,
        '--sidebar-active-toc-h2-section-link-color': DEFAULT_DARK_BG_COLOR,
        '--sidebar-toc-section-link-color': DEFAULT_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-tt-active-text-color': DEFAULT_DARK_BG_COLOR,
        '--main-heading-text-color': DEFAULT_DARK_MAIN_HEADING_COLOR,
        '--main-heading-link-color': DEFAULT_DARK_LINK_COLOR,
        '--main-link-color': DEFAULT_DARK_LINK_COLOR,
        '--hoverable-link-hover-color': '#9dd2fb',
        '--main-bg-color': DEFAULT_DARK_BG_COLOR,
        ..._common_dark_theme_colors__WEBPACK_IMPORTED_MODULE_0__["default"],
        rouge_theme: 'monokai',
    },
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (default_theme_vars);


/***/ }),

/***/ "./subthemes/definitions/modern.theme.ts":
/*!***********************************************!*\
  !*** ./subthemes/definitions/modern.theme.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_dark_theme_colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common_dark_theme_colors */ "./subthemes/definitions/common_dark_theme_colors.ts");

const MODERN_PRIMARY_COLOR = 'rgb(41, 82, 91)';
const MODERN_SPECIAL_COLOR = 'rgb(229, 214, 204)';
const MODERN_SIDEBAR_CONTRAST_COLOR = 'rgb(114, 202, 195)';
const MODERN_MAIN_LINK_COLOR = 'rgb(233, 114, 110)';
const MODERN_DARK_HEADING_COLOR = 'rgb(79, 205, 196)';
const MODERN_DARK_SPECIAL_COLOR = 'rgb(242, 224, 213)';
const MODERN_DARK_SIDEBAR_BG_COLOR = 'rgb(22, 60, 60)';
const modern_theme_vars = {
    light: {
        '--sidebar-bg-color': MODERN_PRIMARY_COLOR,
        '--sidebar-heading-text-color': MODERN_SIDEBAR_CONTRAST_COLOR,
        '--sidebar-heading-link-color': MODERN_SIDEBAR_CONTRAST_COLOR,
        '--sidebar-toc-h1-link-color': MODERN_SPECIAL_COLOR,
        '--sidebar-toc-h1-border-color': MODERN_SPECIAL_COLOR,
        '--sidebar-toc-h2-link-color': 'white',
        '--sidebar-active-toc-section-bg-color': 'rgb(248, 255, 248)',
        '--sidebar-active-toc-section-link-color': MODERN_PRIMARY_COLOR,
        '--sidebar-active-toc-h1-section-link-color': MODERN_PRIMARY_COLOR,
        '--sidebar-active-toc-h2-section-link-color': MODERN_PRIMARY_COLOR,
        '--sidebar-toc-section-link-color': 'white',
        '--main-heading-text-color': MODERN_PRIMARY_COLOR,
        '--main-heading-link-color': MODERN_PRIMARY_COLOR,
        '--main-link-color': MODERN_MAIN_LINK_COLOR,
        '--tt-border-radius': '3px',
        '--hoverable-link-hover-color': '#a51e19',
        rouge_theme: 'default',
    },
    dark: {
        '--sidebar-bg-color': MODERN_DARK_SIDEBAR_BG_COLOR,
        '--sidebar-heading-link-color': MODERN_SIDEBAR_CONTRAST_COLOR,
        '--sidebar-heading-text-color': MODERN_SIDEBAR_CONTRAST_COLOR,
        '--sidebar-toc-h1-link-color': MODERN_DARK_SPECIAL_COLOR,
        '--sidebar-toc-h1-border-color': MODERN_DARK_SPECIAL_COLOR,
        '--sidebar-toc-h2-link-color': 'white',
        '--sidebar-active-toc-section-bg-color': 'rgb(248, 255, 248)',
        '--sidebar-active-toc-section-link-color': MODERN_DARK_SIDEBAR_BG_COLOR,
        '--sidebar-active-toc-h1-section-link-color': MODERN_DARK_SIDEBAR_BG_COLOR,
        '--sidebar-active-toc-h2-section-link-color': MODERN_DARK_SIDEBAR_BG_COLOR,
        '--sidebar-toc-section-link-color': 'white',
        '--sidebar-tt-active-text-color': MODERN_DARK_SIDEBAR_BG_COLOR,
        '--main-heading-text-color': MODERN_DARK_HEADING_COLOR,
        '--main-heading-link-color': MODERN_DARK_HEADING_COLOR,
        '--main-link-color': MODERN_MAIN_LINK_COLOR,
        '--hoverable-link-hover-color': '#fdf3f3',
        '--main-bg-color': 'rgb(28, 28, 30)',
        ..._common_dark_theme_colors__WEBPACK_IMPORTED_MODULE_0__["default"],
        rouge_theme: 'monokai',
    },
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (modern_theme_vars);


/***/ }),

/***/ "./subthemes/definitions/xcode_civic.theme.ts":
/*!****************************************************!*\
  !*** ./subthemes/definitions/xcode_civic.theme.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_dark_theme_colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common_dark_theme_colors */ "./subthemes/definitions/common_dark_theme_colors.ts");

const XCODE_DARK_BG_COLOR = 'rgb(40, 41, 35)';
const XCODE_DARK_TEXT_COLOR = 'white';
const XCODE_DARK_SIDEBAR_HEADING_COLOR = 'rgb(58, 58, 58)';
const XCODE_DARK_MAIN_HEADING_COLOR = 'rgb(137, 135, 205)';
const XCODE_DARK_MAIN_LINK_COLOR = '#ffae66';
const BORDER_LINE_COLOR = '#555';
const xcode_dark_theme_vars = {
    light: {
        '--sidebar-bg-color': 'rgb(242, 243, 243)',
        '--sidebar-heading-text-color': XCODE_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-heading-link-color': XCODE_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-border-color': BORDER_LINE_COLOR,
        '--sidebar-toc-h1-link-color': XCODE_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-toc-h1-border-color': 'rgb(125, 125, 125)',
        '--sidebar-toc-h2-link-color': XCODE_DARK_SIDEBAR_HEADING_COLOR,
        '--sidebar-active-toc-section-bg-color': 'rgb(90, 151, 247)',
        '--sidebar-active-toc-section-link-color': 'white',
        '--sidebar-active-toc-h1-section-link-color': 'white',
        '--sidebar-active-toc-h2-section-link-color': 'white',
        '--sidebar-toc-section-link-color': XCODE_DARK_SIDEBAR_HEADING_COLOR,
        '--main-heading-text-color': XCODE_DARK_MAIN_HEADING_COLOR,
        '--main-heading-link-color': XCODE_DARK_MAIN_HEADING_COLOR,
        '--main-link-color': XCODE_DARK_MAIN_LINK_COLOR,
        '--hoverable-link-hover-color': '#cc6000',
        '--main-bg-color': XCODE_DARK_BG_COLOR,
        '--main-text-color': XCODE_DARK_TEXT_COLOR,
        '--main-table-pre-bg-color': '#f6f8fa',
        '--main-table-pre-text-color': 'black',
        '--main-blockquote-text-color': '#ccc',
        '--tt-text-color': 'white',
        '--tt-bg-color': '#696969',
        '--tt-border-radius': '3px',
        '--main-header-border-bottom-color': BORDER_LINE_COLOR,
        '--primer-spec-callout-neutral-text-color': 'black',
        '--primer-spec-callout-info-text-color': 'black',
        '--primer-spec-callout-warning-text-color': 'black',
        '--primer-spec-callout-danger-text-color': 'black',
        '--primer-spec-callout-success-text-color': 'black',
        rouge_theme: 'default',
    },
    dark: {
        ..._common_dark_theme_colors__WEBPACK_IMPORTED_MODULE_0__["default"],
        '--sidebar-bg-color': 'rgb(75, 77, 85)',
        '--sidebar-heading-text-color': 'white',
        '--sidebar-heading-link-color': 'white',
        '--sidebar-border-color': BORDER_LINE_COLOR,
        '--sidebar-toc-h1-link-color': 'white',
        '--sidebar-toc-h1-border-color': 'rgb(125, 125, 125)',
        '--sidebar-toc-h2-link-color': 'white',
        '--sidebar-active-toc-section-bg-color': 'rgb(90, 151, 247)',
        '--sidebar-active-toc-section-link-color': 'white',
        '--sidebar-active-toc-h1-section-link-color': 'white',
        '--sidebar-active-toc-h2-section-link-color': 'white',
        '--sidebar-toc-section-link-color': 'white',
        '--main-heading-text-color': XCODE_DARK_MAIN_HEADING_COLOR,
        '--main-heading-link-color': XCODE_DARK_MAIN_HEADING_COLOR,
        '--main-link-color': XCODE_DARK_MAIN_LINK_COLOR,
        '--hoverable-link-hover-color': 'white',
        '--main-bg-color': XCODE_DARK_BG_COLOR,
        '--main-text-color': XCODE_DARK_TEXT_COLOR,
        '--main-table-pre-bg-color': XCODE_DARK_BG_COLOR,
        '--main-table-pre-text-color': XCODE_DARK_TEXT_COLOR,
        '--main-table-pre-border': '1px solid rgb(60, 62, 66)',
        '--tt-text-color': 'white',
        '--tt-border-radius': '6px',
        '--main-blockquote-text-color': '#999999',
        '--main-header-border-bottom-color': BORDER_LINE_COLOR,
        rouge_theme: 'monokai',
    },
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (xcode_dark_theme_vars);


/***/ }),

/***/ "./subthemes/index.ts":
/*!****************************!*\
  !*** ./subthemes/index.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "updateTheme": () => (/* binding */ updateTheme),
/* harmony export */   "getStoredSubthemeName": () => (/* binding */ getStoredSubthemeName),
/* harmony export */   "getStoredSubthemeMode": () => (/* binding */ getStoredSubthemeMode),
/* harmony export */   "normalizeSubthemeMode": () => (/* binding */ normalizeSubthemeMode)
/* harmony export */ });
/* harmony import */ var _RegisteredSubthemes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RegisteredSubthemes */ "./subthemes/RegisteredSubthemes.ts");
/* harmony import */ var _utils_Storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Storage */ "./utils/Storage.ts");
/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Config */ "./Config.ts");



// Expose Subthemes publicly

/**
 * Updates the appearance of the page based on the Subtheme details to be
 * changed. If no Subtheme details are specified, the method uses Subtheme info
 * from Storage.
 *
 * This method also persists Subtheme changes to Storage (unless
 * `persistUpdate` is set to `false`.)
 *
 * @param newSubtheme   The subtheme details to be updated. This defaults to
 *                      the subtheme from Storage.
 * @param persistUpdate Defaults to true. If set to false, the updated theme
 *                      is not persisted to Storage.
 */
function updateTheme({ name, mode } = {}, persistUpdate = true) {
    const { name: stored_subtheme_name, mode: stored_subtheme_mode, } = getStoredSubtheme();
    const normalized_name = verifySubthemeName(name ?? stored_subtheme_name);
    const currently_selected_mode = verifySubthemeMode(mode ?? stored_subtheme_mode);
    const normalized_mode = normalizeSubthemeMode(currently_selected_mode);
    // First store changes. Then decide if we need to take any action on the DOM.
    if (persistUpdate) {
        storeSubtheme({ name: normalized_name, mode: currently_selected_mode });
    }
    if (normalized_name === stored_subtheme_name &&
        normalized_mode === stored_subtheme_mode &&
        // If stores are not updated, the "current" subthemes from the store may be
        // stale. Hence, skip this optimization.
        persistUpdate) {
        return;
    }
    const old_subtheme = _RegisteredSubthemes__WEBPACK_IMPORTED_MODULE_0__.REGISTERED_SUBTHEMES[stored_subtheme_name];
    const new_subtheme = _RegisteredSubthemes__WEBPACK_IMPORTED_MODULE_0__.REGISTERED_SUBTHEMES[normalized_name];
    old_subtheme.reset(normalizeSubthemeMode(stored_subtheme_mode));
    new_subtheme.apply(normalized_mode);
}
// Make this method accessible to the plugins.
window.PrimerSpec.updateTheme = updateTheme;
/**
 * Retrieve the previously stored subtheme name from persistent local
 * storage. If this cannot be retrieved, returns the name of the first
 * available subtheme.
 */
function getStoredSubthemeName() {
    const stored_subtheme_name = _utils_Storage__WEBPACK_IMPORTED_MODULE_1__["default"].get(_Config__WEBPACK_IMPORTED_MODULE_2__["default"].SUBTHEME_NAME_STORAGE_KEY);
    return verifySubthemeName(stored_subtheme_name ?? _Config__WEBPACK_IMPORTED_MODULE_2__["default"].INIT_SUBTHEME_NAME);
}
/**
 * Retrieve the previously stored subtheme mode from persistent local
 * storage. If this cannot be retrieved, returns the default mode.
 */
function getStoredSubthemeMode() {
    const stored_subtheme_mode = _utils_Storage__WEBPACK_IMPORTED_MODULE_1__["default"].get(_Config__WEBPACK_IMPORTED_MODULE_2__["default"].SUBTHEME_MODE_STORAGE_KEY);
    return verifySubthemeMode(stored_subtheme_mode ?? _Config__WEBPACK_IMPORTED_MODULE_2__["default"].INIT_SUBTHEME_MODE);
}
function normalizeSubthemeMode(mode) {
    if (mode !== 'system') {
        return mode;
    }
    if (!window.matchMedia) {
        return 'light';
    }
    // The following is based on:
    // https://gosink.in/javascript-css-toggle-dark-light-theme-based-on-your-users-preferred-scheme/
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        // It's a dark theme
        return 'dark';
    }
    // Otherwise, it's not a dark theme
    return 'light';
}
/**
 * Update persistent local storage with the given subtheme for future
 * retrieval.
 * @param subtheme the name to be stored in local storage
 */
function storeSubtheme({ name, mode }) {
    _utils_Storage__WEBPACK_IMPORTED_MODULE_1__["default"].set(_Config__WEBPACK_IMPORTED_MODULE_2__["default"].SUBTHEME_NAME_STORAGE_KEY, name);
    _utils_Storage__WEBPACK_IMPORTED_MODULE_1__["default"].set(_Config__WEBPACK_IMPORTED_MODULE_2__["default"].SUBTHEME_MODE_STORAGE_KEY, mode);
}
function getStoredSubtheme() {
    return { name: getStoredSubthemeName(), mode: getStoredSubthemeMode() };
}
function verifySubthemeName(name) {
    if (name && _RegisteredSubthemes__WEBPACK_IMPORTED_MODULE_0__.REGISTERED_SUBTHEMES[name]) {
        return name;
    }
    console.warn(`Primer Spec: Invalid subtheme name: ${name}. Reverting to 'default'`);
    return _RegisteredSubthemes__WEBPACK_IMPORTED_MODULE_0__.REGISTERED_SUBTHEMES["default"].name;
}
function verifySubthemeMode(mode) {
    switch (mode) {
        case 'light':
        case 'dark':
        case 'system':
            return mode;
    }
    console.warn(`Primer Spec: Invalid subtheme mode: ${mode}. Reverting to 'system'`);
    return 'system';
}


/***/ }),

/***/ "./subthemes/rouge_themes/createRougeTheme.ts":
/*!****************************************************!*\
  !*** ./subthemes/rouge_themes/createRougeTheme.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ createRougeTheme)
/* harmony export */ });
/* harmony import */ var _Subtheme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subtheme */ "./subthemes/Subtheme.ts");

function apply(theme_vars) {
    const documentEl = document.documentElement;
    _Subtheme__WEBPACK_IMPORTED_MODULE_0__.ROUGE_CLASS_NAMES.map((class_name) => {
        if (theme_vars[class_name]) {
            for (const [style_prop, value] of Object.entries(theme_vars[class_name])) {
                const var_name = `--primer-spec-rouge-${class_name}-${style_prop}`;
                documentEl.style.setProperty(var_name, value ?? null);
            }
        }
    });
}
function reset() {
    const documentEl = document.documentElement;
    _Subtheme__WEBPACK_IMPORTED_MODULE_0__.ROUGE_CLASS_NAMES.map((class_name) => {
        _Subtheme__WEBPACK_IMPORTED_MODULE_0__.ROUGE_STYLE_PROPS.map((style_prop) => {
            const var_name = `--primer-spec-rouge-${class_name}-${style_prop}`;
            documentEl.style.removeProperty(var_name);
        });
    });
}
/**
 * Create a Rouge (syntax highlighting) theme based on a given config
 * @param name The name of the subtheme
 * @param theme_vars The config describing this Rouge theme
 */
function createRougeTheme(name, theme_vars) {
    return {
        name,
        // TODO: Figure out why TypeScript is not able to unify RougeVarsType and
        //       RougeVarsTypeInternal.
        apply: () => apply(theme_vars),
        reset,
    };
}


/***/ }),

/***/ "./subthemes/rouge_themes/default.rouge.ts":
/*!*************************************************!*\
  !*** ./subthemes/rouge_themes/default.rouge.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const default_rouge_style = {
    cm: {
        // Comment::Multiline
        color: '#999988',
        'font-style': 'italic',
    },
    cp: {
        // Comment::Preproc
        color: '#999999',
        'font-weight': 'bold',
    },
    c1: {
        // Comment::Single
        color: '#999988',
        'font-style': 'italic',
    },
    cs: {
        // Comment::Special
        color: '#999999',
        'font-weight': 'bold',
        'font-style': 'italic',
    },
    cd: {
        // Comment
        color: '#999988',
        'font-style': 'italic',
    },
    c: {
        // Comment
        color: '#999988',
        'font-style': 'italic',
    },
    err: {
        // Error
        color: '#a61717',
        'background-color': '#e3d2d2',
    },
    gd: {
        // Generic::Deleted
        color: '#000000',
        'background-color': '#ffdddd',
    },
    ge: {
        // Generic::Emph
        color: '#000000',
        'font-style': 'italic',
    },
    gr: {
        // Generic::Error
        color: '#aa0000',
    },
    gh: {
        // Generic::Heading
        color: '#999999',
    },
    gi: {
        // Generic::Inserted
        color: '#000000',
        'background-color': '#ddffdd',
    },
    go: {
        // Generic::Output
        color: '#888888',
    },
    gp: {
        // Generic::Prompt
        color: '#555555',
    },
    gs: {
        // Generic::Strong
        'font-weight': 'bold',
    },
    gu: {
        // Generic::Subheading
        color: '#aaaaaa',
    },
    gt: {
        // Generic::Traceback
        color: '#aa0000',
    },
    kc: {
        // Keyword::Constant
        color: '#000000',
        'font-weight': 'bold',
    },
    kd: {
        // Keyword::Declaration
        color: '#000000',
        'font-weight': ' bold',
    },
    kn: {
        // Keyword::Namespace
        color: '#000000',
        'font-weight': 'bold',
    },
    kp: {
        // Keyword::Pseudo
        color: '#000000',
        'font-weight': 'bold',
    },
    kr: {
        // Keyword::Reserved
        color: '#000000',
        'font-weight': 'bold',
    },
    kt: {
        // Keyword::Type
        color: '#445588',
        'font-weight': 'bold',
    },
    kv: {
        // Keyword
        color: '#000000',
        'font-weight': 'bold',
    },
    k: {
        // Keyword
        color: '#000000',
        'font-weight': 'bold',
    },
    mf: {
        // Literal::Number::Float
        color: '#009999',
    },
    mh: {
        // Literal::Number::Hex
        color: '#009999',
    },
    il: {
        // Literal::Number::Integer::Long
        color: '#009999',
    },
    mi: {
        // Literal::Number::Integer
        color: '#009999',
    },
    mo: {
        // Literal::Number::Oct
        color: '#009999',
    },
    mb: {
        // Literal::Number
        color: '#009999',
    },
    mx: {
        // Literal::Number
        color: '#009999',
    },
    m: {
        // Literal::Number
        color: '#009999',
    },
    sb: {
        // Literal::String::Backtick
        color: '#d14',
    },
    sc: {
        // Literal::String::Char
        color: '#d14',
    },
    sd: {
        // Literal::String::Symbol
        color: '#d14',
    },
    s2: {
        // Literal::String::Double
        color: '#d14',
    },
    se: {
        // Literal::String::Escape
        color: '#d14',
    },
    sh: {
        // Literal::String::Heredoc
        color: '#d14',
    },
    si: {
        // Literal::String::Interpol
        color: '#d14',
    },
    sx: {
        // Literal::String::Other
        color: '#d14',
    },
    sr: {
        // Literal::String::Regex
        color: '#009926',
    },
    s1: {
        // Literal::String::Single
        color: '#d14',
    },
    ss: {
        // Literal::String::Symbol
        color: '#990073',
    },
    s: {
        // Literal::String
        color: '#d14',
    },
    na: {
        // Name::Attribute
        color: '#008080',
    },
    bp: {
        // Name::Builtin::Pseudo
        color: '#999999',
    },
    nb: {
        // Name::Builtin
        color: '#0086B3',
    },
    nc: {
        // Name::Class
        color: '#445588',
        'font-weight': 'bold',
    },
    no: {
        // Name::Constant
        color: '#008080',
    },
    nd: {
        // Name::Decorator
        color: '#3c5d5d',
        'font-weight': 'bold',
    },
    ni: {
        // Name::Entity
        color: '#800080',
    },
    ne: {
        // Name::Exception
        color: '#990000',
        'font-weight': 'bold',
    },
    nf: {
        // Name::Function
        color: '#990000',
        'font-weight': 'bold',
    },
    nl: {
        // Name::Label
        color: '#990000',
        'font-weight': 'bold',
    },
    nn: {
        // Name::Namespace
        color: '#555555',
    },
    nt: {
        // Name::Tag
        color: '#000080',
    },
    nx: {
        // Name::Other
        color: '#000000',
    },
    vc: {
        // Name::Variable::Class
        color: '#008080',
    },
    vg: {
        // Name::Variable::Global
        color: '#008080',
    },
    vi: {
        // Name::Variable::Instance
        color: '#008080',
    },
    nv: {
        // Name::Variable::Instance
        color: '#008080',
    },
    ow: {
        // Operator::Word
        color: '#000000',
        'font-weight': 'bold',
    },
    o: {
        // Operator
        color: '#000000',
        'font-weight': 'bold',
    },
    w: {
        // Text::Whitespace
        color: '#bbbbbb',
    },
    txt: {
        'background-color': '#f8f8f8',
    },
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (default_rouge_style);


/***/ }),

/***/ "./subthemes/rouge_themes/index.ts":
/*!*****************************************!*\
  !*** ./subthemes/rouge_themes/index.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _createRougeTheme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createRougeTheme */ "./subthemes/rouge_themes/createRougeTheme.ts");
/* harmony import */ var _default_rouge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./default.rouge */ "./subthemes/rouge_themes/default.rouge.ts");
/* harmony import */ var _monokai_rouge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./monokai.rouge */ "./subthemes/rouge_themes/monokai.rouge.ts");



const registered_rouge_themes = {
    default: (0,_createRougeTheme__WEBPACK_IMPORTED_MODULE_0__["default"])('default', _default_rouge__WEBPACK_IMPORTED_MODULE_1__["default"]),
    monokai: (0,_createRougeTheme__WEBPACK_IMPORTED_MODULE_0__["default"])('monokai', _monokai_rouge__WEBPACK_IMPORTED_MODULE_2__["default"]),
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (registered_rouge_themes);


/***/ }),

/***/ "./subthemes/rouge_themes/monokai.rouge.ts":
/*!*************************************************!*\
  !*** ./subthemes/rouge_themes/monokai.rouge.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// The styles in this file were partially generated using the command:
// bundle exec rougify style monokai.sublime
// Readability changes are based on the original Roguify source:
// https://github.com/rouge-ruby/rouge/blob/184848ae363c41b7f8372791d6f4701bf601c722/lib/rouge/themes/monokai_sublime.rb
// const black = '#000000';
const bright_green = '#a6e22e';
const bright_pink = '#f92672';
const carmine = '#960050';
const dark = '#49483e';
// const dark_graphite = '#272822';
const dark_grey = '#999999';
// const dark_red = '#aa0000';
const dimgrey = '#868064';
// const emperor = '#555555';
const grey = '#999999';
const light_grey = '#aaaaaa';
const light_violet = '#ae81ff';
const soft_cyan = '#66d9ef';
const soft_yellow = '#e6db74';
// const very_dark = '#1e0010';
// const whitish = '#f8f8f2';
const orange = '#f6aa11';
const white = '#ffffff';
const monokai_rouge_style = {
    cm: {
        // Comment::Multiline
        color: dimgrey,
    },
    cp: {
        // Comment::Preproc
        color: light_grey,
    },
    c1: {
        // Comment::Single
        color: dimgrey,
    },
    cs: {
        // Comment::Special
        color: dimgrey,
    },
    cd: {
        // Comment
        color: dimgrey,
    },
    c: {
        // Comment
        color: dimgrey,
    },
    err: {
        // Error
        color: carmine,
    },
    gd: {
        // Generic::Deleted
        color: dark,
    },
    ge: {
        // Generic::Emph
        color: light_grey,
        'font-style': 'italic',
    },
    gr: {
        // Generic::Error
        color: carmine,
    },
    gh: {
        // Generic::Heading
        color: grey,
    },
    gi: {
        // Generic::Inserted
        color: dark,
    },
    go: {
        // Generic::Output
        color: dark_grey,
    },
    gp: {
        // Generic::Prompt
        color: dark_grey,
    },
    gs: {
        // Generic::Strong
        'font-weight': 'bold',
    },
    gu: {
        // Generic::Subheading
        color: light_grey,
    },
    gt: {
        // Generic::Traceback
        color: carmine,
    },
    kc: {
        // Keyword::Constant
        color: soft_cyan,
    },
    kd: {
        // Keyword::Declaration
        color: soft_cyan,
        'font-style': 'italic',
    },
    kn: {
        // Keyword::Namespace
        color: bright_pink,
    },
    kp: {
        // Keyword::Pseudo
        color: bright_pink,
    },
    kr: {
        // Keyword::Reserved
        color: soft_cyan,
    },
    kt: {
        // Keyword::Type
        color: soft_cyan,
        'font-style': 'italic',
    },
    kv: {
        // Keyword
        color: bright_pink,
    },
    k: {
        // Keyword
        color: bright_pink,
    },
    mf: {
        // Literal::Number::Float
        color: light_violet,
    },
    mh: {
        // Literal::Number::Hex
        color: light_violet,
    },
    il: {
        // Literal::Number::Integer::Long
        color: light_violet,
    },
    mi: {
        // Literal::Number::Integer
        color: light_violet,
    },
    mo: {
        // Literal::Number::Oct
        color: light_violet,
    },
    mb: {
        // Literal::Number
        color: light_violet,
    },
    mx: {
        // Literal::Number
        color: light_violet,
    },
    m: {
        // Literal::Number
        color: light_violet,
    },
    sb: {
        // Literal::String::Backtick
        color: soft_yellow,
    },
    sc: {
        // Literal::String::Char
        color: light_violet,
    },
    sd: {
        // Literal::String::Symbol
        color: soft_yellow,
    },
    s2: {
        // Literal::String::Double
        color: soft_yellow,
    },
    se: {
        // Literal::String::Escape
        color: light_violet,
    },
    sh: {
        // Literal::String::Heredoc
        color: soft_yellow,
    },
    si: {
        // Literal::String::Interpol
        color: soft_yellow,
    },
    sx: {
        // Literal::String::Other
        color: soft_yellow,
    },
    sr: {
        // Literal::String::Regex
        color: orange,
    },
    s1: {
        // Literal::String::Single
        color: soft_yellow,
    },
    ss: {
        // Literal::String::Symbol
        color: light_violet,
    },
    s: {
        // Literal::String
        color: soft_yellow,
    },
    na: {
        // Name::Attribute
        color: bright_green,
    },
    bp: {
        // Name::Builtin::Pseudo
        color: white,
    },
    nb: {
        // Name::Builtin
        color: orange,
    },
    nc: {
        // Name::Class
        color: bright_green,
    },
    no: {
        // Name::Constant
        color: soft_cyan,
    },
    nd: {
        // Name::Decorator
        color: bright_green,
    },
    ni: {
        // Name::Entity
        color: white,
    },
    ne: {
        // Name::Exception
        color: bright_green,
    },
    nf: {
        // Name::Function
        color: bright_green,
    },
    nl: {
        // Name::Label
        color: white,
    },
    nn: {
        // Name::Namespace
        color: white,
    },
    nt: {
        // Name::Tag
        color: bright_pink,
    },
    nx: {
        // Name::Other
        color: white,
    },
    vc: {
        // Name::Variable::Class
        color: white,
    },
    vg: {
        // Name::Variable::Global
        color: white,
    },
    vi: {
        // Name::Variable::Instance
        color: white,
    },
    nv: {
        // Name::Variable::Instance
        color: white,
    },
    ow: {
        // Operator::Word
        color: bright_pink,
    },
    o: {
        // Operator
        color: white,
    },
    w: {
        // Text::Whitespace
        color: white,
    },
    txt: {
        color: white,
        'background-color': 'rgb(35, 37, 41)',
    },
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (monokai_rouge_style);


/***/ }),

/***/ "./utils/Storage.ts":
/*!**************************!*\
  !*** ./utils/Storage.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const listener_callbacks = {};
window.addEventListener('storage', (e) => {
    if (!e.key)
        return;
    const callbacks = listener_callbacks[e.key];
    if (!callbacks)
        return;
    callbacks.forEach((callback) => callback(e.newValue, e.oldValue));
});
const local_storage_available = isStorageAvailable('localStorage');
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    /**
     * Get an item persisted in local storage by key. These values are typically
     * persisted across all pages in the same "website".
     *
     * Use in conjunction with `Storage.set()`.
     */
    get(key) {
        return local_storage_available ? window.localStorage.getItem(key) : null;
    },
    /**
     * Persist an item in local storage by key. The item is persisted across all
     * pages in the same "website".
     *
     * Use in conjunction with `Storage.get()`.
     */
    set(key, value) {
        if (local_storage_available) {
            window.localStorage.setItem(key, value);
        }
    },
    /**
     * Get an item persisted in local storage using `Storage.setForPage()`.
     */
    getForPage(key) {
        return this.get(mangleKeyWithPagePath(key));
    },
    /**
     * Persist an item in local storage, and mark it as being attached to the
     * current page (as opposed to being available to all pages across the same
     * "website").
     *
     * Retrieve items set using this method using `Storage.getForPage()`.
     */
    setForPage(key, value) {
        return this.set(mangleKeyWithPagePath(key), value);
    },
    /**
     * Register a `callback` that will be invoked when `key` changes in local
     * storage (in a different document context). This can help sync app state
     * across tabs.
     *
     * Use this to listen to listen for changes to items persisted using
     * `Storage.set()`.
     * Unregister the callback using `Storage.removeListener()`.
     */
    addListener(key, callback) {
        if (!listener_callbacks[key]) {
            listener_callbacks[key] = [];
        }
        listener_callbacks[key].push(callback);
    },
    /**
     * Unregister the callback registered using `Storage.addListener()`.
     */
    removeListener(key, callbackToRemove) {
        const callbacks = listener_callbacks[key];
        if (!callbacks)
            return;
        listener_callbacks[key] = callbacks.filter((callback) => callback !== callbackToRemove);
    },
    /**
     * Register a `callback` that will be invoked when `key` changes in local
     * storage for the given page path (but in a different document context).
     * This can help sync app state across tabs.
     *
     * Use this to listen to listen for changes to items persisted using
     * `Storage.setForPage()`.
     * Unregister the callback using `Storage.removeListenerForPage()`.
     */
    addListenerForPage(key, callback) {
        this.addListener(mangleKeyWithPagePath(key), callback);
    },
    /**
     * Unregister the callback registered using
     * `Storage.removeListenerForPage()`.
     */
    removeListenerForPage(key, callbackToRemove) {
        this.removeListener(mangleKeyWithPagePath(key), callbackToRemove);
    },
});
function mangleKeyWithPagePath(key) {
    return `${document.location.pathname}__${key}`;
}
/**
 * Check if a particular type of storage is made available by the browser.
 * @param type storage type (for instance, 'localStorage')
 */
function isStorageAvailable(type) {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    let storage;
    try {
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        storage = window[type];
        const x = '__storage_test__';
        storage.setItem(x, x);
        storage.removeItem(x);
        return true;
    }
    catch (e) {
        return (e instanceof DOMException &&
            // everything except Firefox
            (e.code === 22 ||
                // Firefox
                e.code === 1014 ||
                // test name field too, because code might not be present
                // everything except Firefox
                e.name === 'QuotaExceededError' ||
                // Firefox
                e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&
            // acknowledge QuotaExceededError only if there's something already stored
            storage &&
            storage.length !== 0);
    }
}


/***/ }),

/***/ "./utils/getChromeVersion.ts":
/*!***********************************!*\
  !*** ./utils/getChromeVersion.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getChromeVersion)
/* harmony export */ });
/**
 * Return a number indicating the Chrome major version. Returns false if
 * not Chrome.
 */
function getChromeVersion() {
    // Based on: https://stackoverflow.com/a/4900484/5868796
    const raw = navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);
    return raw ? parseInt(raw[2], 10) : false;
}


/***/ }),

/***/ "./utils/hooks/print.ts":
/*!******************************!*\
  !*** ./utils/hooks/print.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "usePrintInProgress": () => (/* binding */ usePrintInProgress),
/* harmony export */   "useBeforePrint": () => (/* binding */ useBeforePrint),
/* harmony export */   "useAfterPrint": () => (/* binding */ useAfterPrint)
/* harmony export */ });
/* harmony import */ var preact_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/hooks */ "../node_modules/preact/hooks/dist/hooks.module.js");

/**
 * Return a stateful boolean representing if a print-event is in progress
 * (between beforeprint and afterprint).
 */
function usePrintInProgress() {
    const [isPrintInProgress, setIsPrintInProgress] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const beforePrint = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_0__.useCallback)(useBeforePrint, []);
    const afterPrint = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_0__.useCallback)(useAfterPrint, []);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        return beforePrint(() => setIsPrintInProgress(true));
    }, [beforePrint]);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        return afterPrint(() => setIsPrintInProgress(false));
    }, [afterPrint]);
    return isPrintInProgress;
}
/**
 * Register a function (that could contain imperative and possibly effectful
 * code) that will be invoked when window.onbeforeprint fires.
 *
 * The return-value is a cleanup method that must be returned at the end of
 * the `useEffect()` handler. For instance:
 * ```
 * const beforePrint = useCallback(useBeforePrint, []);
 * useEffect(
 *   () => { return beforePrint(handler); },
 *   [beforePrint, dep1, dep2],
 * );
 * ```
 * @param handler Imperative function to be invoked onbeforeprint
 */
function useBeforePrint(handler) {
    // Safari < 13 requires this polyfill:
    let mql_listener;
    if (window.matchMedia) {
        mql_listener = (mql) => {
            if (mql.matches) {
                // webkit equivalent of onbeforeprint
                handler();
            }
        };
        window.matchMedia('print').addListener(mql_listener);
    }
    // Non-Safari browsers support this:
    window.addEventListener('beforeprint', handler);
    return () => {
        if (window.matchMedia) {
            window.matchMedia('print').removeListener(mql_listener);
        }
        window.removeEventListener('beforeprint', handler);
    };
}
/**
 * Register a function (that could contain imperative and possibly effectful
 * code) that will be invoked when window.onafterprint fires.
 *
 * The return-value is a cleanup method that must be returned at the end of
 * the `useEffect()` handler. For instance:
 * ```
 * const afterPrint = useCallback(useAfterPrint, []);
 * useEffect(
 *   () => { return afterPrint(handler); },
 *   [afterPrint, dep1, dep2],
 * );
 * ```
 * @param handler Imperative function to execute onafterprint
 */
function useAfterPrint(handler) {
    // Safari < 13 requires this polyfill:
    let mql_listener;
    if (window.matchMedia) {
        mql_listener = (mql) => {
            if (!mql.matches) {
                // webkit equivalent of onafterprint
                handler();
            }
        };
        window.matchMedia('print').addListener(mql_listener);
    }
    // Non-Safari browsers support this:
    window.addEventListener('afterprint', handler);
    return () => {
        if (window.matchMedia) {
            window.matchMedia('print').removeListener(mql_listener);
        }
        window.removeEventListener('afterprint', handler);
    };
}


/***/ }),

/***/ "./utils/hooks/usePrefersDarkMode.ts":
/*!*******************************************!*\
  !*** ./utils/hooks/usePrefersDarkMode.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ usePrefersDarkMode)
/* harmony export */ });
/* harmony import */ var preact_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/hooks */ "../node_modules/preact/hooks/dist/hooks.module.js");

/**
 * Return a stateful boolean that describes whether the user's OS settings
 * indicate a preference for light-themes or dark-themes. This preference is
 * used when the subtheme mode is set to 'system'.
 */
function usePrefersDarkMode() {
    const [prefersDarkMode, setPrefersDarkMode] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_0__.useState)(window.matchMedia('(prefers-color-scheme: dark)').matches);
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        const listener = (mql) => setPrefersDarkMode(mql.matches);
        window
            .matchMedia('(prefers-color-scheme: dark)')
            .addEventListener('change', listener);
        return () => {
            window
                .matchMedia('(prefers-color-scheme: dark)')
                .removeEventListener('change', listener);
        };
    }, []);
    return prefersDarkMode;
}


/***/ }),

/***/ "./utils/hooks/useSmallScreen.ts":
/*!***************************************!*\
  !*** ./utils/hooks/useSmallScreen.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useSmallScreen)
/* harmony export */ });
/* harmony import */ var preact_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/hooks */ "../node_modules/preact/hooks/dist/hooks.module.js");
/* harmony import */ var _isSmallScreen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../isSmallScreen */ "./utils/isSmallScreen.ts");


/**
 * Return a stateful boolean indicating whether the viewer's screen width is
 * 'small' (as defined by `isSmallScreen()`).
 */
function useSmallScreen() {
    const [is_small_screen, setIsSmallScreen] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_0__.useState)((0,_isSmallScreen__WEBPACK_IMPORTED_MODULE_1__["default"])());
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {
        const window_resize_listener = () => {
            const is_window_now_a_small_screen = (0,_isSmallScreen__WEBPACK_IMPORTED_MODULE_1__["default"])();
            if (is_window_now_a_small_screen !== is_small_screen) {
                setIsSmallScreen(is_window_now_a_small_screen);
            }
        };
        window.addEventListener('resize', window_resize_listener);
        return () => {
            window.removeEventListener('resize', window_resize_listener);
        };
    }, [is_small_screen]);
    return is_small_screen;
}


/***/ }),

/***/ "./utils/hooks/useWindowLoaded.ts":
/*!****************************************!*\
  !*** ./utils/hooks/useWindowLoaded.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useWindowLoaded)
/* harmony export */ });
/* harmony import */ var preact_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/hooks */ "../node_modules/preact/hooks/dist/hooks.module.js");

/**
 * Return a stateful boolean that indicates whether all resources on the page
 * have been downloaded (and the 'load' event will fire / has fired on the
 * window).
 */
function useWindowLoaded() {
    const [windowLoaded, setWindowLoaded] = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_0__.useState)(document.readyState === 'complete');
    (0,preact_hooks__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        const onWindowLoad = () => {
            setWindowLoaded(true);
        };
        window.addEventListener('load', onWindowLoad);
        return () => {
            window.removeEventListener('load', onWindowLoad);
        };
    });
    return windowLoaded;
}


/***/ }),

/***/ "./utils/isSmallScreen.ts":
/*!********************************!*\
  !*** ./utils/isSmallScreen.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isSmallScreen)
/* harmony export */ });
/**
 * Return a boolean indicating whether the viewer's screen width is
 * smaller than 900px.
 */
function isSmallScreen() {
    return document.documentElement.clientWidth < 900;
}


/***/ }),

/***/ "../node_modules/@sindresorhus/slugify/index.js":
/*!******************************************************!*\
  !*** ../node_modules/@sindresorhus/slugify/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ slugify)
/* harmony export */ });
/* unused harmony export slugifyWithCounter */
/* harmony import */ var escape_string_regexp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! escape-string-regexp */ "../node_modules/escape-string-regexp/index.js");
/* harmony import */ var _sindresorhus_transliterate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sindresorhus/transliterate */ "../node_modules/@sindresorhus/transliterate/index.js");
/* harmony import */ var _overridable_replacements_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./overridable-replacements.js */ "../node_modules/@sindresorhus/slugify/overridable-replacements.js");




const decamelize = string => {
	return string
		// Separate capitalized words.
		.replace(/([A-Z]{2,})(\d+)/g, '$1 $2')
		.replace(/([a-z\d]+)([A-Z]{2,})/g, '$1 $2')

		.replace(/([a-z\d])([A-Z])/g, '$1 $2')
		.replace(/([A-Z]+)([A-Z][a-z\d]+)/g, '$1 $2');
};

const removeMootSeparators = (string, separator) => {
	const escapedSeparator = (0,escape_string_regexp__WEBPACK_IMPORTED_MODULE_0__["default"])(separator);

	return string
		.replace(new RegExp(`${escapedSeparator}{2,}`, 'g'), separator)
		.replace(new RegExp(`^${escapedSeparator}|${escapedSeparator}$`, 'g'), '');
};

function slugify(string, options) {
	if (typeof string !== 'string') {
		throw new TypeError(`Expected a string, got \`${typeof string}\``);
	}

	options = {
		separator: '-',
		lowercase: true,
		decamelize: true,
		customReplacements: [],
		preserveLeadingUnderscore: false,
		preserveTrailingDash: false,
		...options
	};

	const shouldPrependUnderscore = options.preserveLeadingUnderscore && string.startsWith('_');
	const shouldAppendDash = options.preserveTrailingDash && string.endsWith('-');

	const customReplacements = new Map([
		..._overridable_replacements_js__WEBPACK_IMPORTED_MODULE_2__["default"],
		...options.customReplacements
	]);

	string = (0,_sindresorhus_transliterate__WEBPACK_IMPORTED_MODULE_1__["default"])(string, {customReplacements});

	if (options.decamelize) {
		string = decamelize(string);
	}

	let patternSlug = /[^a-zA-Z\d]+/g;

	if (options.lowercase) {
		string = string.toLowerCase();
		patternSlug = /[^a-z\d]+/g;
	}

	string = string.replace(patternSlug, options.separator);
	string = string.replace(/\\/g, '');
	if (options.separator) {
		string = removeMootSeparators(string, options.separator);
	}

	if (shouldPrependUnderscore) {
		string = `_${string}`;
	}

	if (shouldAppendDash) {
		string = `${string}-`;
	}

	return string;
}

function slugifyWithCounter() {
	const occurrences = new Map();

	const countable = (string, options) => {
		string = slugify(string, options);

		if (!string) {
			return '';
		}

		const stringLower = string.toLowerCase();
		const numberless = occurrences.get(stringLower.replace(/(?:-\d+?)+?$/, '')) || 0;
		const counter = occurrences.get(stringLower);
		occurrences.set(stringLower, typeof counter === 'number' ? counter + 1 : 1);
		const newCounter = occurrences.get(stringLower) || 2;
		if (newCounter >= 2 || numberless > 2) {
			string = `${string}-${newCounter}`;
		}

		return string;
	};

	countable.reset = () => {
		occurrences.clear();
	};

	return countable;
}


/***/ }),

/***/ "../node_modules/@sindresorhus/slugify/overridable-replacements.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@sindresorhus/slugify/overridable-replacements.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const overridableReplacements = [
	['&', ' and '],
	['🦄', ' unicorn '],
	['♥', ' love ']
];

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (overridableReplacements);


/***/ }),

/***/ "../node_modules/@sindresorhus/transliterate/index.js":
/*!************************************************************!*\
  !*** ../node_modules/@sindresorhus/transliterate/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ transliterate)
/* harmony export */ });
/* harmony import */ var lodash_deburr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.deburr */ "../node_modules/lodash.deburr/index.js");
/* harmony import */ var escape_string_regexp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! escape-string-regexp */ "../node_modules/escape-string-regexp/index.js");
/* harmony import */ var _replacements_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./replacements.js */ "../node_modules/@sindresorhus/transliterate/replacements.js");




const doCustomReplacements = (string, replacements) => {
	for (const [key, value] of replacements) {
		// TODO: Use `String#replaceAll()` when targeting Node.js 16.
		string = string.replace(new RegExp((0,escape_string_regexp__WEBPACK_IMPORTED_MODULE_1__["default"])(key), 'g'), value);
	}

	return string;
};

function transliterate(string, options) {
	if (typeof string !== 'string') {
		throw new TypeError(`Expected a string, got \`${typeof string}\``);
	}

	options = {
		customReplacements: [],
		...options
	};

	const customReplacements = new Map([
		..._replacements_js__WEBPACK_IMPORTED_MODULE_2__["default"],
		...options.customReplacements
	]);

	string = string.normalize();
	string = doCustomReplacements(string, customReplacements);
	string = lodash_deburr__WEBPACK_IMPORTED_MODULE_0__(string);

	return string;
}


/***/ }),

/***/ "../node_modules/@sindresorhus/transliterate/replacements.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@sindresorhus/transliterate/replacements.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const replacements = [
	// German umlauts
	['ß', 'ss'],
	['ẞ', 'Ss'],
	['ä', 'ae'],
	['Ä', 'Ae'],
	['ö', 'oe'],
	['Ö', 'Oe'],
	['ü', 'ue'],
	['Ü', 'Ue'],

	// Latin
	['À', 'A'],
	['Á', 'A'],
	['Â', 'A'],
	['Ã', 'A'],
	['Ä', 'Ae'],
	['Å', 'A'],
	['Æ', 'AE'],
	['Ç', 'C'],
	['È', 'E'],
	['É', 'E'],
	['Ê', 'E'],
	['Ë', 'E'],
	['Ì', 'I'],
	['Í', 'I'],
	['Î', 'I'],
	['Ï', 'I'],
	['Ð', 'D'],
	['Ñ', 'N'],
	['Ò', 'O'],
	['Ó', 'O'],
	['Ô', 'O'],
	['Õ', 'O'],
	['Ö', 'Oe'],
	['Ő', 'O'],
	['Ø', 'O'],
	['Ù', 'U'],
	['Ú', 'U'],
	['Û', 'U'],
	['Ü', 'Ue'],
	['Ű', 'U'],
	['Ý', 'Y'],
	['Þ', 'TH'],
	['ß', 'ss'],
	['à', 'a'],
	['á', 'a'],
	['â', 'a'],
	['ã', 'a'],
	['ä', 'ae'],
	['å', 'a'],
	['æ', 'ae'],
	['ç', 'c'],
	['è', 'e'],
	['é', 'e'],
	['ê', 'e'],
	['ë', 'e'],
	['ì', 'i'],
	['í', 'i'],
	['î', 'i'],
	['ï', 'i'],
	['ð', 'd'],
	['ñ', 'n'],
	['ò', 'o'],
	['ó', 'o'],
	['ô', 'o'],
	['õ', 'o'],
	['ö', 'oe'],
	['ő', 'o'],
	['ø', 'o'],
	['ù', 'u'],
	['ú', 'u'],
	['û', 'u'],
	['ü', 'ue'],
	['ű', 'u'],
	['ý', 'y'],
	['þ', 'th'],
	['ÿ', 'y'],
	['ẞ', 'SS'],

	// Vietnamese
	['à', 'a'],
	['À', 'A'],
	['á', 'a'],
	['Á', 'A'],
	['â', 'a'],
	['Â', 'A'],
	['ã', 'a'],
	['Ã', 'A'],
	['è', 'e'],
	['È', 'E'],
	['é', 'e'],
	['É', 'E'],
	['ê', 'e'],
	['Ê', 'E'],
	['ì', 'i'],
	['Ì', 'I'],
	['í', 'i'],
	['Í', 'I'],
	['ò', 'o'],
	['Ò', 'O'],
	['ó', 'o'],
	['Ó', 'O'],
	['ô', 'o'],
	['Ô', 'O'],
	['õ', 'o'],
	['Õ', 'O'],
	['ù', 'u'],
	['Ù', 'U'],
	['ú', 'u'],
	['Ú', 'U'],
	['ý', 'y'],
	['Ý', 'Y'],
	['ă', 'a'],
	['Ă', 'A'],
	['Đ', 'D'],
	['đ', 'd'],
	['ĩ', 'i'],
	['Ĩ', 'I'],
	['ũ', 'u'],
	['Ũ', 'U'],
	['ơ', 'o'],
	['Ơ', 'O'],
	['ư', 'u'],
	['Ư', 'U'],
	['ạ', 'a'],
	['Ạ', 'A'],
	['ả', 'a'],
	['Ả', 'A'],
	['ấ', 'a'],
	['Ấ', 'A'],
	['ầ', 'a'],
	['Ầ', 'A'],
	['ẩ', 'a'],
	['Ẩ', 'A'],
	['ẫ', 'a'],
	['Ẫ', 'A'],
	['ậ', 'a'],
	['Ậ', 'A'],
	['ắ', 'a'],
	['Ắ', 'A'],
	['ằ', 'a'],
	['Ằ', 'A'],
	['ẳ', 'a'],
	['Ẳ', 'A'],
	['ẵ', 'a'],
	['Ẵ', 'A'],
	['ặ', 'a'],
	['Ặ', 'A'],
	['ẹ', 'e'],
	['Ẹ', 'E'],
	['ẻ', 'e'],
	['Ẻ', 'E'],
	['ẽ', 'e'],
	['Ẽ', 'E'],
	['ế', 'e'],
	['Ế', 'E'],
	['ề', 'e'],
	['Ề', 'E'],
	['ể', 'e'],
	['Ể', 'E'],
	['ễ', 'e'],
	['Ễ', 'E'],
	['ệ', 'e'],
	['Ệ', 'E'],
	['ỉ', 'i'],
	['Ỉ', 'I'],
	['ị', 'i'],
	['Ị', 'I'],
	['ọ', 'o'],
	['Ọ', 'O'],
	['ỏ', 'o'],
	['Ỏ', 'O'],
	['ố', 'o'],
	['Ố', 'O'],
	['ồ', 'o'],
	['Ồ', 'O'],
	['ổ', 'o'],
	['Ổ', 'O'],
	['ỗ', 'o'],
	['Ỗ', 'O'],
	['ộ', 'o'],
	['Ộ', 'O'],
	['ớ', 'o'],
	['Ớ', 'O'],
	['ờ', 'o'],
	['Ờ', 'O'],
	['ở', 'o'],
	['Ở', 'O'],
	['ỡ', 'o'],
	['Ỡ', 'O'],
	['ợ', 'o'],
	['Ợ', 'O'],
	['ụ', 'u'],
	['Ụ', 'U'],
	['ủ', 'u'],
	['Ủ', 'U'],
	['ứ', 'u'],
	['Ứ', 'U'],
	['ừ', 'u'],
	['Ừ', 'U'],
	['ử', 'u'],
	['Ử', 'U'],
	['ữ', 'u'],
	['Ữ', 'U'],
	['ự', 'u'],
	['Ự', 'U'],
	['ỳ', 'y'],
	['Ỳ', 'Y'],
	['ỵ', 'y'],
	['Ỵ', 'Y'],
	['ỷ', 'y'],
	['Ỷ', 'Y'],
	['ỹ', 'y'],
	['Ỹ', 'Y'],

	// Arabic
	['ء', 'e'],
	['آ', 'a'],
	['أ', 'a'],
	['ؤ', 'w'],
	['إ', 'i'],
	['ئ', 'y'],
	['ا', 'a'],
	['ب', 'b'],
	['ة', 't'],
	['ت', 't'],
	['ث', 'th'],
	['ج', 'j'],
	['ح', 'h'],
	['خ', 'kh'],
	['د', 'd'],
	['ذ', 'dh'],
	['ر', 'r'],
	['ز', 'z'],
	['س', 's'],
	['ش', 'sh'],
	['ص', 's'],
	['ض', 'd'],
	['ط', 't'],
	['ظ', 'z'],
	['ع', 'e'],
	['غ', 'gh'],
	['ـ', '_'],
	['ف', 'f'],
	['ق', 'q'],
	['ك', 'k'],
	['ل', 'l'],
	['م', 'm'],
	['ن', 'n'],
	['ه', 'h'],
	['و', 'w'],
	['ى', 'a'],
	['ي', 'y'],
	['َ‎', 'a'],
	['ُ', 'u'],
	['ِ‎', 'i'],
	['٠', '0'],
	['١', '1'],
	['٢', '2'],
	['٣', '3'],
	['٤', '4'],
	['٥', '5'],
	['٦', '6'],
	['٧', '7'],
	['٨', '8'],
	['٩', '9'],

	// Persian / Farsi
	['چ', 'ch'],
	['ک', 'k'],
	['گ', 'g'],
	['پ', 'p'],
	['ژ', 'zh'],
	['ی', 'y'],
	['۰', '0'],
	['۱', '1'],
	['۲', '2'],
	['۳', '3'],
	['۴', '4'],
	['۵', '5'],
	['۶', '6'],
	['۷', '7'],
	['۸', '8'],
	['۹', '9'],

	// Pashto
	['ټ', 'p'],
	['ځ', 'z'],
	['څ', 'c'],
	['ډ', 'd'],
	['ﺫ', 'd'],
	['ﺭ', 'r'],
	['ړ', 'r'],
	['ﺯ', 'z'],
	['ږ', 'g'],
	['ښ', 'x'],
	['ګ', 'g'],
	['ڼ', 'n'],
	['ۀ', 'e'],
	['ې', 'e'],
	['ۍ', 'ai'],

	// Urdu
	['ٹ', 't'],
	['ڈ', 'd'],
	['ڑ', 'r'],
	['ں', 'n'],
	['ہ', 'h'],
	['ھ', 'h'],
	['ے', 'e'],

	// Russian
	['А', 'A'],
	['а', 'a'],
	['Б', 'B'],
	['б', 'b'],
	['В', 'V'],
	['в', 'v'],
	['Г', 'G'],
	['г', 'g'],
	['Д', 'D'],
	['д', 'd'],
	['ъе', 'ye'],
	['Ъе', 'Ye'],
	['ъЕ', 'yE'],
	['ЪЕ', 'YE'],
	['Е', 'E'],
	['е', 'e'],
	['Ё', 'Yo'],
	['ё', 'yo'],
	['Ж', 'Zh'],
	['ж', 'zh'],
	['З', 'Z'],
	['з', 'z'],
	['И', 'I'],
	['и', 'i'],
	['ый', 'iy'],
	['Ый', 'Iy'],
	['ЫЙ', 'IY'],
	['ыЙ', 'iY'],
	['Й', 'Y'],
	['й', 'y'],
	['К', 'K'],
	['к', 'k'],
	['Л', 'L'],
	['л', 'l'],
	['М', 'M'],
	['м', 'm'],
	['Н', 'N'],
	['н', 'n'],
	['О', 'O'],
	['о', 'o'],
	['П', 'P'],
	['п', 'p'],
	['Р', 'R'],
	['р', 'r'],
	['С', 'S'],
	['с', 's'],
	['Т', 'T'],
	['т', 't'],
	['У', 'U'],
	['у', 'u'],
	['Ф', 'F'],
	['ф', 'f'],
	['Х', 'Kh'],
	['х', 'kh'],
	['Ц', 'Ts'],
	['ц', 'ts'],
	['Ч', 'Ch'],
	['ч', 'ch'],
	['Ш', 'Sh'],
	['ш', 'sh'],
	['Щ', 'Sch'],
	['щ', 'sch'],
	['Ъ', ''],
	['ъ', ''],
	['Ы', 'Y'],
	['ы', 'y'],
	['Ь', ''],
	['ь', ''],
	['Э', 'E'],
	['э', 'e'],
	['Ю', 'Yu'],
	['ю', 'yu'],
	['Я', 'Ya'],
	['я', 'ya'],

	// Romanian
	['ă', 'a'],
	['Ă', 'A'],
	['ș', 's'],
	['Ș', 'S'],
	['ț', 't'],
	['Ț', 'T'],
	['ţ', 't'],
	['Ţ', 'T'],

	// Turkish
	['ş', 's'],
	['Ş', 'S'],
	['ç', 'c'],
	['Ç', 'C'],
	['ğ', 'g'],
	['Ğ', 'G'],
	['ı', 'i'],
	['İ', 'I'],

	// Armenian
	['ա', 'a'],
	['Ա', 'A'],
	['բ', 'b'],
	['Բ', 'B'],
	['գ', 'g'],
	['Գ', 'G'],
	['դ', 'd'],
	['Դ', 'D'],
	['ե', 'ye'],
	['Ե', 'Ye'],
	['զ', 'z'],
	['Զ', 'Z'],
	['է', 'e'],
	['Է', 'E'],
	['ը', 'y'],
	['Ը', 'Y'],
	['թ', 't'],
	['Թ', 'T'],
	['ժ', 'zh'],
	['Ժ', 'Zh'],
	['ի', 'i'],
	['Ի', 'I'],
	['լ', 'l'],
	['Լ', 'L'],
	['խ', 'kh'],
	['Խ', 'Kh'],
	['ծ', 'ts'],
	['Ծ', 'Ts'],
	['կ', 'k'],
	['Կ', 'K'],
	['հ', 'h'],
	['Հ', 'H'],
	['ձ', 'dz'],
	['Ձ', 'Dz'],
	['ղ', 'gh'],
	['Ղ', 'Gh'],
	['ճ', 'tch'],
	['Ճ', 'Tch'],
	['մ', 'm'],
	['Մ', 'M'],
	['յ', 'y'],
	['Յ', 'Y'],
	['ն', 'n'],
	['Ն', 'N'],
	['շ', 'sh'],
	['Շ', 'Sh'],
	['ո', 'vo'],
	['Ո', 'Vo'],
	['չ', 'ch'],
	['Չ', 'Ch'],
	['պ', 'p'],
	['Պ', 'P'],
	['ջ', 'j'],
	['Ջ', 'J'],
	['ռ', 'r'],
	['Ռ', 'R'],
	['ս', 's'],
	['Ս', 'S'],
	['վ', 'v'],
	['Վ', 'V'],
	['տ', 't'],
	['Տ', 'T'],
	['ր', 'r'],
	['Ր', 'R'],
	['ց', 'c'],
	['Ց', 'C'],
	['ու', 'u'],
	['ՈՒ', 'U'],
	['Ու', 'U'],
	['փ', 'p'],
	['Փ', 'P'],
	['ք', 'q'],
	['Ք', 'Q'],
	['օ', 'o'],
	['Օ', 'O'],
	['ֆ', 'f'],
	['Ֆ', 'F'],
	['և', 'yev'],

	// Georgian
	['ა', 'a'],
	['ბ', 'b'],
	['გ', 'g'],
	['დ', 'd'],
	['ე', 'e'],
	['ვ', 'v'],
	['ზ', 'z'],
	['თ', 't'],
	['ი', 'i'],
	['კ', 'k'],
	['ლ', 'l'],
	['მ', 'm'],
	['ნ', 'n'],
	['ო', 'o'],
	['პ', 'p'],
	['ჟ', 'zh'],
	['რ', 'r'],
	['ს', 's'],
	['ტ', 't'],
	['უ', 'u'],
	['ფ', 'ph'],
	['ქ', 'q'],
	['ღ', 'gh'],
	['ყ', 'k'],
	['შ', 'sh'],
	['ჩ', 'ch'],
	['ც', 'ts'],
	['ძ', 'dz'],
	['წ', 'ts'],
	['ჭ', 'tch'],
	['ხ', 'kh'],
	['ჯ', 'j'],
	['ჰ', 'h'],

	// Czech
	['č', 'c'],
	['ď', 'd'],
	['ě', 'e'],
	['ň', 'n'],
	['ř', 'r'],
	['š', 's'],
	['ť', 't'],
	['ů', 'u'],
	['ž', 'z'],
	['Č', 'C'],
	['Ď', 'D'],
	['Ě', 'E'],
	['Ň', 'N'],
	['Ř', 'R'],
	['Š', 'S'],
	['Ť', 'T'],
	['Ů', 'U'],
	['Ž', 'Z'],

	// Dhivehi
	['ހ', 'h'],
	['ށ', 'sh'],
	['ނ', 'n'],
	['ރ', 'r'],
	['ބ', 'b'],
	['ޅ', 'lh'],
	['ކ', 'k'],
	['އ', 'a'],
	['ވ', 'v'],
	['މ', 'm'],
	['ފ', 'f'],
	['ދ', 'dh'],
	['ތ', 'th'],
	['ލ', 'l'],
	['ގ', 'g'],
	['ޏ', 'gn'],
	['ސ', 's'],
	['ޑ', 'd'],
	['ޒ', 'z'],
	['ޓ', 't'],
	['ޔ', 'y'],
	['ޕ', 'p'],
	['ޖ', 'j'],
	['ޗ', 'ch'],
	['ޘ', 'tt'],
	['ޙ', 'hh'],
	['ޚ', 'kh'],
	['ޛ', 'th'],
	['ޜ', 'z'],
	['ޝ', 'sh'],
	['ޞ', 's'],
	['ޟ', 'd'],
	['ޠ', 't'],
	['ޡ', 'z'],
	['ޢ', 'a'],
	['ޣ', 'gh'],
	['ޤ', 'q'],
	['ޥ', 'w'],
	['ަ', 'a'],
	['ާ', 'aa'],
	['ި', 'i'],
	['ީ', 'ee'],
	['ު', 'u'],
	['ޫ', 'oo'],
	['ެ', 'e'],
	['ޭ', 'ey'],
	['ޮ', 'o'],
	['ޯ', 'oa'],
	['ް', ''],

	// Greek
	['α', 'a'],
	['β', 'v'],
	['γ', 'g'],
	['δ', 'd'],
	['ε', 'e'],
	['ζ', 'z'],
	['η', 'i'],
	['θ', 'th'],
	['ι', 'i'],
	['κ', 'k'],
	['λ', 'l'],
	['μ', 'm'],
	['ν', 'n'],
	['ξ', 'ks'],
	['ο', 'o'],
	['π', 'p'],
	['ρ', 'r'],
	['σ', 's'],
	['τ', 't'],
	['υ', 'y'],
	['φ', 'f'],
	['χ', 'x'],
	['ψ', 'ps'],
	['ω', 'o'],
	['ά', 'a'],
	['έ', 'e'],
	['ί', 'i'],
	['ό', 'o'],
	['ύ', 'y'],
	['ή', 'i'],
	['ώ', 'o'],
	['ς', 's'],
	['ϊ', 'i'],
	['ΰ', 'y'],
	['ϋ', 'y'],
	['ΐ', 'i'],
	['Α', 'A'],
	['Β', 'B'],
	['Γ', 'G'],
	['Δ', 'D'],
	['Ε', 'E'],
	['Ζ', 'Z'],
	['Η', 'I'],
	['Θ', 'TH'],
	['Ι', 'I'],
	['Κ', 'K'],
	['Λ', 'L'],
	['Μ', 'M'],
	['Ν', 'N'],
	['Ξ', 'KS'],
	['Ο', 'O'],
	['Π', 'P'],
	['Ρ', 'R'],
	['Σ', 'S'],
	['Τ', 'T'],
	['Υ', 'Y'],
	['Φ', 'F'],
	['Χ', 'X'],
	['Ψ', 'PS'],
	['Ω', 'O'],
	['Ά', 'A'],
	['Έ', 'E'],
	['Ί', 'I'],
	['Ό', 'O'],
	['Ύ', 'Y'],
	['Ή', 'I'],
	['Ώ', 'O'],
	['Ϊ', 'I'],
	['Ϋ', 'Y'],

	// Disabled as it conflicts with German and Latin.
	// Hungarian
	// ['ä', 'a'],
	// ['Ä', 'A'],
	// ['ö', 'o'],
	// ['Ö', 'O'],
	// ['ü', 'u'],
	// ['Ü', 'U'],
	// ['ű', 'u'],
	// ['Ű', 'U'],

	// Latvian
	['ā', 'a'],
	['ē', 'e'],
	['ģ', 'g'],
	['ī', 'i'],
	['ķ', 'k'],
	['ļ', 'l'],
	['ņ', 'n'],
	['ū', 'u'],
	['Ā', 'A'],
	['Ē', 'E'],
	['Ģ', 'G'],
	['Ī', 'I'],
	['Ķ', 'K'],
	['Ļ', 'L'],
	['Ņ', 'N'],
	['Ū', 'U'],
	['č', 'c'],
	['š', 's'],
	['ž', 'z'],
	['Č', 'C'],
	['Š', 'S'],
	['Ž', 'Z'],

	// Lithuanian
	['ą', 'a'],
	['č', 'c'],
	['ę', 'e'],
	['ė', 'e'],
	['į', 'i'],
	['š', 's'],
	['ų', 'u'],
	['ū', 'u'],
	['ž', 'z'],
	['Ą', 'A'],
	['Č', 'C'],
	['Ę', 'E'],
	['Ė', 'E'],
	['Į', 'I'],
	['Š', 'S'],
	['Ų', 'U'],
	['Ū', 'U'],

	// Macedonian
	['Ќ', 'Kj'],
	['ќ', 'kj'],
	['Љ', 'Lj'],
	['љ', 'lj'],
	['Њ', 'Nj'],
	['њ', 'nj'],
	['Тс', 'Ts'],
	['тс', 'ts'],

	// Polish
	['ą', 'a'],
	['ć', 'c'],
	['ę', 'e'],
	['ł', 'l'],
	['ń', 'n'],
	['ś', 's'],
	['ź', 'z'],
	['ż', 'z'],
	['Ą', 'A'],
	['Ć', 'C'],
	['Ę', 'E'],
	['Ł', 'L'],
	['Ń', 'N'],
	['Ś', 'S'],
	['Ź', 'Z'],
	['Ż', 'Z'],

	// Disabled as it conflicts with Vietnamese.
	// Serbian
	// ['љ', 'lj'],
	// ['њ', 'nj'],
	// ['Љ', 'Lj'],
	// ['Њ', 'Nj'],
	// ['đ', 'dj'],
	// ['Đ', 'Dj'],
	// ['ђ', 'dj'],
	// ['ј', 'j'],
	// ['ћ', 'c'],
	// ['џ', 'dz'],
	// ['Ђ', 'Dj'],
	// ['Ј', 'j'],
	// ['Ћ', 'C'],
	// ['Џ', 'Dz'],

	// Disabled as it conflicts with German and Latin.
	// Slovak
	// ['ä', 'a'],
	// ['Ä', 'A'],
	// ['ľ', 'l'],
	// ['ĺ', 'l'],
	// ['ŕ', 'r'],
	// ['Ľ', 'L'],
	// ['Ĺ', 'L'],
	// ['Ŕ', 'R'],

	// Disabled as it conflicts with German and Latin.
	// Swedish
	// ['å', 'o'],
	// ['Å', 'o'],
	// ['ä', 'a'],
	// ['Ä', 'A'],
	// ['ë', 'e'],
	// ['Ë', 'E'],
	// ['ö', 'o'],
	// ['Ö', 'O'],

	// Ukrainian
	['Є', 'Ye'],
	['І', 'I'],
	['Ї', 'Yi'],
	['Ґ', 'G'],
	['є', 'ye'],
	['і', 'i'],
	['ї', 'yi'],
	['ґ', 'g'],

	// Dutch
	['Ĳ', 'IJ'],
	['ĳ', 'ij'],

	// Danish
	// ['Æ', 'Ae'],
	// ['Ø', 'Oe'],
	// ['Å', 'Aa'],
	// ['æ', 'ae'],
	// ['ø', 'oe'],
	// ['å', 'aa']

	// Currencies
	['¢', 'c'],
	['¥', 'Y'],
	['߿', 'b'],
	['৳', 't'],
	['૱', 'Bo'],
	['฿', 'B'],
	['₠', 'CE'],
	['₡', 'C'],
	['₢', 'Cr'],
	['₣', 'F'],
	['₥', 'm'],
	['₦', 'N'],
	['₧', 'Pt'],
	['₨', 'Rs'],
	['₩', 'W'],
	['₫', 's'],
	['€', 'E'],
	['₭', 'K'],
	['₮', 'T'],
	['₯', 'Dp'],
	['₰', 'S'],
	['₱', 'P'],
	['₲', 'G'],
	['₳', 'A'],
	['₴', 'S'],
	['₵', 'C'],
	['₶', 'tt'],
	['₷', 'S'],
	['₸', 'T'],
	['₹', 'R'],
	['₺', 'L'],
	['₽', 'P'],
	['₿', 'B'],
	['﹩', '$'],
	['￠', 'c'],
	['￥', 'Y'],
	['￦', 'W'],

	// Latin
	['𝐀', 'A'],
	['𝐁', 'B'],
	['𝐂', 'C'],
	['𝐃', 'D'],
	['𝐄', 'E'],
	['𝐅', 'F'],
	['𝐆', 'G'],
	['𝐇', 'H'],
	['𝐈', 'I'],
	['𝐉', 'J'],
	['𝐊', 'K'],
	['𝐋', 'L'],
	['𝐌', 'M'],
	['𝐍', 'N'],
	['𝐎', 'O'],
	['𝐏', 'P'],
	['𝐐', 'Q'],
	['𝐑', 'R'],
	['𝐒', 'S'],
	['𝐓', 'T'],
	['𝐔', 'U'],
	['𝐕', 'V'],
	['𝐖', 'W'],
	['𝐗', 'X'],
	['𝐘', 'Y'],
	['𝐙', 'Z'],
	['𝐚', 'a'],
	['𝐛', 'b'],
	['𝐜', 'c'],
	['𝐝', 'd'],
	['𝐞', 'e'],
	['𝐟', 'f'],
	['𝐠', 'g'],
	['𝐡', 'h'],
	['𝐢', 'i'],
	['𝐣', 'j'],
	['𝐤', 'k'],
	['𝐥', 'l'],
	['𝐦', 'm'],
	['𝐧', 'n'],
	['𝐨', 'o'],
	['𝐩', 'p'],
	['𝐪', 'q'],
	['𝐫', 'r'],
	['𝐬', 's'],
	['𝐭', 't'],
	['𝐮', 'u'],
	['𝐯', 'v'],
	['𝐰', 'w'],
	['𝐱', 'x'],
	['𝐲', 'y'],
	['𝐳', 'z'],
	['𝐴', 'A'],
	['𝐵', 'B'],
	['𝐶', 'C'],
	['𝐷', 'D'],
	['𝐸', 'E'],
	['𝐹', 'F'],
	['𝐺', 'G'],
	['𝐻', 'H'],
	['𝐼', 'I'],
	['𝐽', 'J'],
	['𝐾', 'K'],
	['𝐿', 'L'],
	['𝑀', 'M'],
	['𝑁', 'N'],
	['𝑂', 'O'],
	['𝑃', 'P'],
	['𝑄', 'Q'],
	['𝑅', 'R'],
	['𝑆', 'S'],
	['𝑇', 'T'],
	['𝑈', 'U'],
	['𝑉', 'V'],
	['𝑊', 'W'],
	['𝑋', 'X'],
	['𝑌', 'Y'],
	['𝑍', 'Z'],
	['𝑎', 'a'],
	['𝑏', 'b'],
	['𝑐', 'c'],
	['𝑑', 'd'],
	['𝑒', 'e'],
	['𝑓', 'f'],
	['𝑔', 'g'],
	['𝑖', 'i'],
	['𝑗', 'j'],
	['𝑘', 'k'],
	['𝑙', 'l'],
	['𝑚', 'm'],
	['𝑛', 'n'],
	['𝑜', 'o'],
	['𝑝', 'p'],
	['𝑞', 'q'],
	['𝑟', 'r'],
	['𝑠', 's'],
	['𝑡', 't'],
	['𝑢', 'u'],
	['𝑣', 'v'],
	['𝑤', 'w'],
	['𝑥', 'x'],
	['𝑦', 'y'],
	['𝑧', 'z'],
	['𝑨', 'A'],
	['𝑩', 'B'],
	['𝑪', 'C'],
	['𝑫', 'D'],
	['𝑬', 'E'],
	['𝑭', 'F'],
	['𝑮', 'G'],
	['𝑯', 'H'],
	['𝑰', 'I'],
	['𝑱', 'J'],
	['𝑲', 'K'],
	['𝑳', 'L'],
	['𝑴', 'M'],
	['𝑵', 'N'],
	['𝑶', 'O'],
	['𝑷', 'P'],
	['𝑸', 'Q'],
	['𝑹', 'R'],
	['𝑺', 'S'],
	['𝑻', 'T'],
	['𝑼', 'U'],
	['𝑽', 'V'],
	['𝑾', 'W'],
	['𝑿', 'X'],
	['𝒀', 'Y'],
	['𝒁', 'Z'],
	['𝒂', 'a'],
	['𝒃', 'b'],
	['𝒄', 'c'],
	['𝒅', 'd'],
	['𝒆', 'e'],
	['𝒇', 'f'],
	['𝒈', 'g'],
	['𝒉', 'h'],
	['𝒊', 'i'],
	['𝒋', 'j'],
	['𝒌', 'k'],
	['𝒍', 'l'],
	['𝒎', 'm'],
	['𝒏', 'n'],
	['𝒐', 'o'],
	['𝒑', 'p'],
	['𝒒', 'q'],
	['𝒓', 'r'],
	['𝒔', 's'],
	['𝒕', 't'],
	['𝒖', 'u'],
	['𝒗', 'v'],
	['𝒘', 'w'],
	['𝒙', 'x'],
	['𝒚', 'y'],
	['𝒛', 'z'],
	['𝒜', 'A'],
	['𝒞', 'C'],
	['𝒟', 'D'],
	['𝒢', 'g'],
	['𝒥', 'J'],
	['𝒦', 'K'],
	['𝒩', 'N'],
	['𝒪', 'O'],
	['𝒫', 'P'],
	['𝒬', 'Q'],
	['𝒮', 'S'],
	['𝒯', 'T'],
	['𝒰', 'U'],
	['𝒱', 'V'],
	['𝒲', 'W'],
	['𝒳', 'X'],
	['𝒴', 'Y'],
	['𝒵', 'Z'],
	['𝒶', 'a'],
	['𝒷', 'b'],
	['𝒸', 'c'],
	['𝒹', 'd'],
	['𝒻', 'f'],
	['𝒽', 'h'],
	['𝒾', 'i'],
	['𝒿', 'j'],
	['𝓀', 'h'],
	['𝓁', 'l'],
	['𝓂', 'm'],
	['𝓃', 'n'],
	['𝓅', 'p'],
	['𝓆', 'q'],
	['𝓇', 'r'],
	['𝓈', 's'],
	['𝓉', 't'],
	['𝓊', 'u'],
	['𝓋', 'v'],
	['𝓌', 'w'],
	['𝓍', 'x'],
	['𝓎', 'y'],
	['𝓏', 'z'],
	['𝓐', 'A'],
	['𝓑', 'B'],
	['𝓒', 'C'],
	['𝓓', 'D'],
	['𝓔', 'E'],
	['𝓕', 'F'],
	['𝓖', 'G'],
	['𝓗', 'H'],
	['𝓘', 'I'],
	['𝓙', 'J'],
	['𝓚', 'K'],
	['𝓛', 'L'],
	['𝓜', 'M'],
	['𝓝', 'N'],
	['𝓞', 'O'],
	['𝓟', 'P'],
	['𝓠', 'Q'],
	['𝓡', 'R'],
	['𝓢', 'S'],
	['𝓣', 'T'],
	['𝓤', 'U'],
	['𝓥', 'V'],
	['𝓦', 'W'],
	['𝓧', 'X'],
	['𝓨', 'Y'],
	['𝓩', 'Z'],
	['𝓪', 'a'],
	['𝓫', 'b'],
	['𝓬', 'c'],
	['𝓭', 'd'],
	['𝓮', 'e'],
	['𝓯', 'f'],
	['𝓰', 'g'],
	['𝓱', 'h'],
	['𝓲', 'i'],
	['𝓳', 'j'],
	['𝓴', 'k'],
	['𝓵', 'l'],
	['𝓶', 'm'],
	['𝓷', 'n'],
	['𝓸', 'o'],
	['𝓹', 'p'],
	['𝓺', 'q'],
	['𝓻', 'r'],
	['𝓼', 's'],
	['𝓽', 't'],
	['𝓾', 'u'],
	['𝓿', 'v'],
	['𝔀', 'w'],
	['𝔁', 'x'],
	['𝔂', 'y'],
	['𝔃', 'z'],
	['𝔄', 'A'],
	['𝔅', 'B'],
	['𝔇', 'D'],
	['𝔈', 'E'],
	['𝔉', 'F'],
	['𝔊', 'G'],
	['𝔍', 'J'],
	['𝔎', 'K'],
	['𝔏', 'L'],
	['𝔐', 'M'],
	['𝔑', 'N'],
	['𝔒', 'O'],
	['𝔓', 'P'],
	['𝔔', 'Q'],
	['𝔖', 'S'],
	['𝔗', 'T'],
	['𝔘', 'U'],
	['𝔙', 'V'],
	['𝔚', 'W'],
	['𝔛', 'X'],
	['𝔜', 'Y'],
	['𝔞', 'a'],
	['𝔟', 'b'],
	['𝔠', 'c'],
	['𝔡', 'd'],
	['𝔢', 'e'],
	['𝔣', 'f'],
	['𝔤', 'g'],
	['𝔥', 'h'],
	['𝔦', 'i'],
	['𝔧', 'j'],
	['𝔨', 'k'],
	['𝔩', 'l'],
	['𝔪', 'm'],
	['𝔫', 'n'],
	['𝔬', 'o'],
	['𝔭', 'p'],
	['𝔮', 'q'],
	['𝔯', 'r'],
	['𝔰', 's'],
	['𝔱', 't'],
	['𝔲', 'u'],
	['𝔳', 'v'],
	['𝔴', 'w'],
	['𝔵', 'x'],
	['𝔶', 'y'],
	['𝔷', 'z'],
	['𝔸', 'A'],
	['𝔹', 'B'],
	['𝔻', 'D'],
	['𝔼', 'E'],
	['𝔽', 'F'],
	['𝔾', 'G'],
	['𝕀', 'I'],
	['𝕁', 'J'],
	['𝕂', 'K'],
	['𝕃', 'L'],
	['𝕄', 'M'],
	['𝕆', 'N'],
	['𝕊', 'S'],
	['𝕋', 'T'],
	['𝕌', 'U'],
	['𝕍', 'V'],
	['𝕎', 'W'],
	['𝕏', 'X'],
	['𝕐', 'Y'],
	['𝕒', 'a'],
	['𝕓', 'b'],
	['𝕔', 'c'],
	['𝕕', 'd'],
	['𝕖', 'e'],
	['𝕗', 'f'],
	['𝕘', 'g'],
	['𝕙', 'h'],
	['𝕚', 'i'],
	['𝕛', 'j'],
	['𝕜', 'k'],
	['𝕝', 'l'],
	['𝕞', 'm'],
	['𝕟', 'n'],
	['𝕠', 'o'],
	['𝕡', 'p'],
	['𝕢', 'q'],
	['𝕣', 'r'],
	['𝕤', 's'],
	['𝕥', 't'],
	['𝕦', 'u'],
	['𝕧', 'v'],
	['𝕨', 'w'],
	['𝕩', 'x'],
	['𝕪', 'y'],
	['𝕫', 'z'],
	['𝕬', 'A'],
	['𝕭', 'B'],
	['𝕮', 'C'],
	['𝕯', 'D'],
	['𝕰', 'E'],
	['𝕱', 'F'],
	['𝕲', 'G'],
	['𝕳', 'H'],
	['𝕴', 'I'],
	['𝕵', 'J'],
	['𝕶', 'K'],
	['𝕷', 'L'],
	['𝕸', 'M'],
	['𝕹', 'N'],
	['𝕺', 'O'],
	['𝕻', 'P'],
	['𝕼', 'Q'],
	['𝕽', 'R'],
	['𝕾', 'S'],
	['𝕿', 'T'],
	['𝖀', 'U'],
	['𝖁', 'V'],
	['𝖂', 'W'],
	['𝖃', 'X'],
	['𝖄', 'Y'],
	['𝖅', 'Z'],
	['𝖆', 'a'],
	['𝖇', 'b'],
	['𝖈', 'c'],
	['𝖉', 'd'],
	['𝖊', 'e'],
	['𝖋', 'f'],
	['𝖌', 'g'],
	['𝖍', 'h'],
	['𝖎', 'i'],
	['𝖏', 'j'],
	['𝖐', 'k'],
	['𝖑', 'l'],
	['𝖒', 'm'],
	['𝖓', 'n'],
	['𝖔', 'o'],
	['𝖕', 'p'],
	['𝖖', 'q'],
	['𝖗', 'r'],
	['𝖘', 's'],
	['𝖙', 't'],
	['𝖚', 'u'],
	['𝖛', 'v'],
	['𝖜', 'w'],
	['𝖝', 'x'],
	['𝖞', 'y'],
	['𝖟', 'z'],
	['𝖠', 'A'],
	['𝖡', 'B'],
	['𝖢', 'C'],
	['𝖣', 'D'],
	['𝖤', 'E'],
	['𝖥', 'F'],
	['𝖦', 'G'],
	['𝖧', 'H'],
	['𝖨', 'I'],
	['𝖩', 'J'],
	['𝖪', 'K'],
	['𝖫', 'L'],
	['𝖬', 'M'],
	['𝖭', 'N'],
	['𝖮', 'O'],
	['𝖯', 'P'],
	['𝖰', 'Q'],
	['𝖱', 'R'],
	['𝖲', 'S'],
	['𝖳', 'T'],
	['𝖴', 'U'],
	['𝖵', 'V'],
	['𝖶', 'W'],
	['𝖷', 'X'],
	['𝖸', 'Y'],
	['𝖹', 'Z'],
	['𝖺', 'a'],
	['𝖻', 'b'],
	['𝖼', 'c'],
	['𝖽', 'd'],
	['𝖾', 'e'],
	['𝖿', 'f'],
	['𝗀', 'g'],
	['𝗁', 'h'],
	['𝗂', 'i'],
	['𝗃', 'j'],
	['𝗄', 'k'],
	['𝗅', 'l'],
	['𝗆', 'm'],
	['𝗇', 'n'],
	['𝗈', 'o'],
	['𝗉', 'p'],
	['𝗊', 'q'],
	['𝗋', 'r'],
	['𝗌', 's'],
	['𝗍', 't'],
	['𝗎', 'u'],
	['𝗏', 'v'],
	['𝗐', 'w'],
	['𝗑', 'x'],
	['𝗒', 'y'],
	['𝗓', 'z'],
	['𝗔', 'A'],
	['𝗕', 'B'],
	['𝗖', 'C'],
	['𝗗', 'D'],
	['𝗘', 'E'],
	['𝗙', 'F'],
	['𝗚', 'G'],
	['𝗛', 'H'],
	['𝗜', 'I'],
	['𝗝', 'J'],
	['𝗞', 'K'],
	['𝗟', 'L'],
	['𝗠', 'M'],
	['𝗡', 'N'],
	['𝗢', 'O'],
	['𝗣', 'P'],
	['𝗤', 'Q'],
	['𝗥', 'R'],
	['𝗦', 'S'],
	['𝗧', 'T'],
	['𝗨', 'U'],
	['𝗩', 'V'],
	['𝗪', 'W'],
	['𝗫', 'X'],
	['𝗬', 'Y'],
	['𝗭', 'Z'],
	['𝗮', 'a'],
	['𝗯', 'b'],
	['𝗰', 'c'],
	['𝗱', 'd'],
	['𝗲', 'e'],
	['𝗳', 'f'],
	['𝗴', 'g'],
	['𝗵', 'h'],
	['𝗶', 'i'],
	['𝗷', 'j'],
	['𝗸', 'k'],
	['𝗹', 'l'],
	['𝗺', 'm'],
	['𝗻', 'n'],
	['𝗼', 'o'],
	['𝗽', 'p'],
	['𝗾', 'q'],
	['𝗿', 'r'],
	['𝘀', 's'],
	['𝘁', 't'],
	['𝘂', 'u'],
	['𝘃', 'v'],
	['𝘄', 'w'],
	['𝘅', 'x'],
	['𝘆', 'y'],
	['𝘇', 'z'],
	['𝘈', 'A'],
	['𝘉', 'B'],
	['𝘊', 'C'],
	['𝘋', 'D'],
	['𝘌', 'E'],
	['𝘍', 'F'],
	['𝘎', 'G'],
	['𝘏', 'H'],
	['𝘐', 'I'],
	['𝘑', 'J'],
	['𝘒', 'K'],
	['𝘓', 'L'],
	['𝘔', 'M'],
	['𝘕', 'N'],
	['𝘖', 'O'],
	['𝘗', 'P'],
	['𝘘', 'Q'],
	['𝘙', 'R'],
	['𝘚', 'S'],
	['𝘛', 'T'],
	['𝘜', 'U'],
	['𝘝', 'V'],
	['𝘞', 'W'],
	['𝘟', 'X'],
	['𝘠', 'Y'],
	['𝘡', 'Z'],
	['𝘢', 'a'],
	['𝘣', 'b'],
	['𝘤', 'c'],
	['𝘥', 'd'],
	['𝘦', 'e'],
	['𝘧', 'f'],
	['𝘨', 'g'],
	['𝘩', 'h'],
	['𝘪', 'i'],
	['𝘫', 'j'],
	['𝘬', 'k'],
	['𝘭', 'l'],
	['𝘮', 'm'],
	['𝘯', 'n'],
	['𝘰', 'o'],
	['𝘱', 'p'],
	['𝘲', 'q'],
	['𝘳', 'r'],
	['𝘴', 's'],
	['𝘵', 't'],
	['𝘶', 'u'],
	['𝘷', 'v'],
	['𝘸', 'w'],
	['𝘹', 'x'],
	['𝘺', 'y'],
	['𝘻', 'z'],
	['𝘼', 'A'],
	['𝘽', 'B'],
	['𝘾', 'C'],
	['𝘿', 'D'],
	['𝙀', 'E'],
	['𝙁', 'F'],
	['𝙂', 'G'],
	['𝙃', 'H'],
	['𝙄', 'I'],
	['𝙅', 'J'],
	['𝙆', 'K'],
	['𝙇', 'L'],
	['𝙈', 'M'],
	['𝙉', 'N'],
	['𝙊', 'O'],
	['𝙋', 'P'],
	['𝙌', 'Q'],
	['𝙍', 'R'],
	['𝙎', 'S'],
	['𝙏', 'T'],
	['𝙐', 'U'],
	['𝙑', 'V'],
	['𝙒', 'W'],
	['𝙓', 'X'],
	['𝙔', 'Y'],
	['𝙕', 'Z'],
	['𝙖', 'a'],
	['𝙗', 'b'],
	['𝙘', 'c'],
	['𝙙', 'd'],
	['𝙚', 'e'],
	['𝙛', 'f'],
	['𝙜', 'g'],
	['𝙝', 'h'],
	['𝙞', 'i'],
	['𝙟', 'j'],
	['𝙠', 'k'],
	['𝙡', 'l'],
	['𝙢', 'm'],
	['𝙣', 'n'],
	['𝙤', 'o'],
	['𝙥', 'p'],
	['𝙦', 'q'],
	['𝙧', 'r'],
	['𝙨', 's'],
	['𝙩', 't'],
	['𝙪', 'u'],
	['𝙫', 'v'],
	['𝙬', 'w'],
	['𝙭', 'x'],
	['𝙮', 'y'],
	['𝙯', 'z'],
	['𝙰', 'A'],
	['𝙱', 'B'],
	['𝙲', 'C'],
	['𝙳', 'D'],
	['𝙴', 'E'],
	['𝙵', 'F'],
	['𝙶', 'G'],
	['𝙷', 'H'],
	['𝙸', 'I'],
	['𝙹', 'J'],
	['𝙺', 'K'],
	['𝙻', 'L'],
	['𝙼', 'M'],
	['𝙽', 'N'],
	['𝙾', 'O'],
	['𝙿', 'P'],
	['𝚀', 'Q'],
	['𝚁', 'R'],
	['𝚂', 'S'],
	['𝚃', 'T'],
	['𝚄', 'U'],
	['𝚅', 'V'],
	['𝚆', 'W'],
	['𝚇', 'X'],
	['𝚈', 'Y'],
	['𝚉', 'Z'],
	['𝚊', 'a'],
	['𝚋', 'b'],
	['𝚌', 'c'],
	['𝚍', 'd'],
	['𝚎', 'e'],
	['𝚏', 'f'],
	['𝚐', 'g'],
	['𝚑', 'h'],
	['𝚒', 'i'],
	['𝚓', 'j'],
	['𝚔', 'k'],
	['𝚕', 'l'],
	['𝚖', 'm'],
	['𝚗', 'n'],
	['𝚘', 'o'],
	['𝚙', 'p'],
	['𝚚', 'q'],
	['𝚛', 'r'],
	['𝚜', 's'],
	['𝚝', 't'],
	['𝚞', 'u'],
	['𝚟', 'v'],
	['𝚠', 'w'],
	['𝚡', 'x'],
	['𝚢', 'y'],
	['𝚣', 'z'],

	// Dotless letters
	['𝚤', 'l'],
	['𝚥', 'j'],

	// Greek
	['𝛢', 'A'],
	['𝛣', 'B'],
	['𝛤', 'G'],
	['𝛥', 'D'],
	['𝛦', 'E'],
	['𝛧', 'Z'],
	['𝛨', 'I'],
	['𝛩', 'TH'],
	['𝛪', 'I'],
	['𝛫', 'K'],
	['𝛬', 'L'],
	['𝛭', 'M'],
	['𝛮', 'N'],
	['𝛯', 'KS'],
	['𝛰', 'O'],
	['𝛱', 'P'],
	['𝛲', 'R'],
	['𝛳', 'TH'],
	['𝛴', 'S'],
	['𝛵', 'T'],
	['𝛶', 'Y'],
	['𝛷', 'F'],
	['𝛸', 'x'],
	['𝛹', 'PS'],
	['𝛺', 'O'],
	['𝛻', 'D'],
	['𝛼', 'a'],
	['𝛽', 'b'],
	['𝛾', 'g'],
	['𝛿', 'd'],
	['𝜀', 'e'],
	['𝜁', 'z'],
	['𝜂', 'i'],
	['𝜃', 'th'],
	['𝜄', 'i'],
	['𝜅', 'k'],
	['𝜆', 'l'],
	['𝜇', 'm'],
	['𝜈', 'n'],
	['𝜉', 'ks'],
	['𝜊', 'o'],
	['𝜋', 'p'],
	['𝜌', 'r'],
	['𝜍', 's'],
	['𝜎', 's'],
	['𝜏', 't'],
	['𝜐', 'y'],
	['𝜑', 'f'],
	['𝜒', 'x'],
	['𝜓', 'ps'],
	['𝜔', 'o'],
	['𝜕', 'd'],
	['𝜖', 'E'],
	['𝜗', 'TH'],
	['𝜘', 'K'],
	['𝜙', 'f'],
	['𝜚', 'r'],
	['𝜛', 'p'],
	['𝜜', 'A'],
	['𝜝', 'V'],
	['𝜞', 'G'],
	['𝜟', 'D'],
	['𝜠', 'E'],
	['𝜡', 'Z'],
	['𝜢', 'I'],
	['𝜣', 'TH'],
	['𝜤', 'I'],
	['𝜥', 'K'],
	['𝜦', 'L'],
	['𝜧', 'M'],
	['𝜨', 'N'],
	['𝜩', 'KS'],
	['𝜪', 'O'],
	['𝜫', 'P'],
	['𝜬', 'S'],
	['𝜭', 'TH'],
	['𝜮', 'S'],
	['𝜯', 'T'],
	['𝜰', 'Y'],
	['𝜱', 'F'],
	['𝜲', 'X'],
	['𝜳', 'PS'],
	['𝜴', 'O'],
	['𝜵', 'D'],
	['𝜶', 'a'],
	['𝜷', 'v'],
	['𝜸', 'g'],
	['𝜹', 'd'],
	['𝜺', 'e'],
	['𝜻', 'z'],
	['𝜼', 'i'],
	['𝜽', 'th'],
	['𝜾', 'i'],
	['𝜿', 'k'],
	['𝝀', 'l'],
	['𝝁', 'm'],
	['𝝂', 'n'],
	['𝝃', 'ks'],
	['𝝄', 'o'],
	['𝝅', 'p'],
	['𝝆', 'r'],
	['𝝇', 's'],
	['𝝈', 's'],
	['𝝉', 't'],
	['𝝊', 'y'],
	['𝝋', 'f'],
	['𝝌', 'x'],
	['𝝍', 'ps'],
	['𝝎', 'o'],
	['𝝏', 'a'],
	['𝝐', 'e'],
	['𝝑', 'i'],
	['𝝒', 'k'],
	['𝝓', 'f'],
	['𝝔', 'r'],
	['𝝕', 'p'],
	['𝝖', 'A'],
	['𝝗', 'B'],
	['𝝘', 'G'],
	['𝝙', 'D'],
	['𝝚', 'E'],
	['𝝛', 'Z'],
	['𝝜', 'I'],
	['𝝝', 'TH'],
	['𝝞', 'I'],
	['𝝟', 'K'],
	['𝝠', 'L'],
	['𝝡', 'M'],
	['𝝢', 'N'],
	['𝝣', 'KS'],
	['𝝤', 'O'],
	['𝝥', 'P'],
	['𝝦', 'R'],
	['𝝧', 'TH'],
	['𝝨', 'S'],
	['𝝩', 'T'],
	['𝝪', 'Y'],
	['𝝫', 'F'],
	['𝝬', 'X'],
	['𝝭', 'PS'],
	['𝝮', 'O'],
	['𝝯', 'D'],
	['𝝰', 'a'],
	['𝝱', 'v'],
	['𝝲', 'g'],
	['𝝳', 'd'],
	['𝝴', 'e'],
	['𝝵', 'z'],
	['𝝶', 'i'],
	['𝝷', 'th'],
	['𝝸', 'i'],
	['𝝹', 'k'],
	['𝝺', 'l'],
	['𝝻', 'm'],
	['𝝼', 'n'],
	['𝝽', 'ks'],
	['𝝾', 'o'],
	['𝝿', 'p'],
	['𝞀', 'r'],
	['𝞁', 's'],
	['𝞂', 's'],
	['𝞃', 't'],
	['𝞄', 'y'],
	['𝞅', 'f'],
	['𝞆', 'x'],
	['𝞇', 'ps'],
	['𝞈', 'o'],
	['𝞉', 'a'],
	['𝞊', 'e'],
	['𝞋', 'i'],
	['𝞌', 'k'],
	['𝞍', 'f'],
	['𝞎', 'r'],
	['𝞏', 'p'],
	['𝞐', 'A'],
	['𝞑', 'V'],
	['𝞒', 'G'],
	['𝞓', 'D'],
	['𝞔', 'E'],
	['𝞕', 'Z'],
	['𝞖', 'I'],
	['𝞗', 'TH'],
	['𝞘', 'I'],
	['𝞙', 'K'],
	['𝞚', 'L'],
	['𝞛', 'M'],
	['𝞜', 'N'],
	['𝞝', 'KS'],
	['𝞞', 'O'],
	['𝞟', 'P'],
	['𝞠', 'S'],
	['𝞡', 'TH'],
	['𝞢', 'S'],
	['𝞣', 'T'],
	['𝞤', 'Y'],
	['𝞥', 'F'],
	['𝞦', 'X'],
	['𝞧', 'PS'],
	['𝞨', 'O'],
	['𝞩', 'D'],
	['𝞪', 'av'],
	['𝞫', 'g'],
	['𝞬', 'd'],
	['𝞭', 'e'],
	['𝞮', 'z'],
	['𝞯', 'i'],
	['𝞰', 'i'],
	['𝞱', 'th'],
	['𝞲', 'i'],
	['𝞳', 'k'],
	['𝞴', 'l'],
	['𝞵', 'm'],
	['𝞶', 'n'],
	['𝞷', 'ks'],
	['𝞸', 'o'],
	['𝞹', 'p'],
	['𝞺', 'r'],
	['𝞻', 's'],
	['𝞼', 's'],
	['𝞽', 't'],
	['𝞾', 'y'],
	['𝞿', 'f'],
	['𝟀', 'x'],
	['𝟁', 'ps'],
	['𝟂', 'o'],
	['𝟃', 'a'],
	['𝟄', 'e'],
	['𝟅', 'i'],
	['𝟆', 'k'],
	['𝟇', 'f'],
	['𝟈', 'r'],
	['𝟉', 'p'],
	['𝟊', 'F'],
	['𝟋', 'f'],
	['⒜', '(a)'],
	['⒝', '(b)'],
	['⒞', '(c)'],
	['⒟', '(d)'],
	['⒠', '(e)'],
	['⒡', '(f)'],
	['⒢', '(g)'],
	['⒣', '(h)'],
	['⒤', '(i)'],
	['⒥', '(j)'],
	['⒦', '(k)'],
	['⒧', '(l)'],
	['⒨', '(m)'],
	['⒩', '(n)'],
	['⒪', '(o)'],
	['⒫', '(p)'],
	['⒬', '(q)'],
	['⒭', '(r)'],
	['⒮', '(s)'],
	['⒯', '(t)'],
	['⒰', '(u)'],
	['⒱', '(v)'],
	['⒲', '(w)'],
	['⒳', '(x)'],
	['⒴', '(y)'],
	['⒵', '(z)'],
	['Ⓐ', '(A)'],
	['Ⓑ', '(B)'],
	['Ⓒ', '(C)'],
	['Ⓓ', '(D)'],
	['Ⓔ', '(E)'],
	['Ⓕ', '(F)'],
	['Ⓖ', '(G)'],
	['Ⓗ', '(H)'],
	['Ⓘ', '(I)'],
	['Ⓙ', '(J)'],
	['Ⓚ', '(K)'],
	['Ⓛ', '(L)'],
	['Ⓝ', '(N)'],
	['Ⓞ', '(O)'],
	['Ⓟ', '(P)'],
	['Ⓠ', '(Q)'],
	['Ⓡ', '(R)'],
	['Ⓢ', '(S)'],
	['Ⓣ', '(T)'],
	['Ⓤ', '(U)'],
	['Ⓥ', '(V)'],
	['Ⓦ', '(W)'],
	['Ⓧ', '(X)'],
	['Ⓨ', '(Y)'],
	['Ⓩ', '(Z)'],
	['ⓐ', '(a)'],
	['ⓑ', '(b)'],
	['ⓒ', '(b)'],
	['ⓓ', '(c)'],
	['ⓔ', '(e)'],
	['ⓕ', '(f)'],
	['ⓖ', '(g)'],
	['ⓗ', '(h)'],
	['ⓘ', '(i)'],
	['ⓙ', '(j)'],
	['ⓚ', '(k)'],
	['ⓛ', '(l)'],
	['ⓜ', '(m)'],
	['ⓝ', '(n)'],
	['ⓞ', '(o)'],
	['ⓟ', '(p)'],
	['ⓠ', '(q)'],
	['ⓡ', '(r)'],
	['ⓢ', '(s)'],
	['ⓣ', '(t)'],
	['ⓤ', '(u)'],
	['ⓥ', '(v)'],
	['ⓦ', '(w)'],
	['ⓧ', '(x)'],
	['ⓨ', '(y)'],
	['ⓩ', '(z)'],

	// Maltese
	['Ċ', 'C'],
	['ċ', 'c'],
	['Ġ', 'G'],
	['ġ', 'g'],
	['Ħ', 'H'],
	['ħ', 'h'],
	['Ż', 'Z'],
	['ż', 'z'],

	// Numbers
	['𝟎', '0'],
	['𝟏', '1'],
	['𝟐', '2'],
	['𝟑', '3'],
	['𝟒', '4'],
	['𝟓', '5'],
	['𝟔', '6'],
	['𝟕', '7'],
	['𝟖', '8'],
	['𝟗', '9'],
	['𝟘', '0'],
	['𝟙', '1'],
	['𝟚', '2'],
	['𝟛', '3'],
	['𝟜', '4'],
	['𝟝', '5'],
	['𝟞', '6'],
	['𝟟', '7'],
	['𝟠', '8'],
	['𝟡', '9'],
	['𝟢', '0'],
	['𝟣', '1'],
	['𝟤', '2'],
	['𝟥', '3'],
	['𝟦', '4'],
	['𝟧', '5'],
	['𝟨', '6'],
	['𝟩', '7'],
	['𝟪', '8'],
	['𝟫', '9'],
	['𝟬', '0'],
	['𝟭', '1'],
	['𝟮', '2'],
	['𝟯', '3'],
	['𝟰', '4'],
	['𝟱', '5'],
	['𝟲', '6'],
	['𝟳', '7'],
	['𝟴', '8'],
	['𝟵', '9'],
	['𝟶', '0'],
	['𝟷', '1'],
	['𝟸', '2'],
	['𝟹', '3'],
	['𝟺', '4'],
	['𝟻', '5'],
	['𝟼', '6'],
	['𝟽', '7'],
	['𝟾', '8'],
	['𝟿', '9'],
	['①', '1'],
	['②', '2'],
	['③', '3'],
	['④', '4'],
	['⑤', '5'],
	['⑥', '6'],
	['⑦', '7'],
	['⑧', '8'],
	['⑨', '9'],
	['⑩', '10'],
	['⑪', '11'],
	['⑫', '12'],
	['⑬', '13'],
	['⑭', '14'],
	['⑮', '15'],
	['⑯', '16'],
	['⑰', '17'],
	['⑱', '18'],
	['⑲', '19'],
	['⑳', '20'],
	['⑴', '1'],
	['⑵', '2'],
	['⑶', '3'],
	['⑷', '4'],
	['⑸', '5'],
	['⑹', '6'],
	['⑺', '7'],
	['⑻', '8'],
	['⑼', '9'],
	['⑽', '10'],
	['⑾', '11'],
	['⑿', '12'],
	['⒀', '13'],
	['⒁', '14'],
	['⒂', '15'],
	['⒃', '16'],
	['⒄', '17'],
	['⒅', '18'],
	['⒆', '19'],
	['⒇', '20'],
	['⒈', '1.'],
	['⒉', '2.'],
	['⒊', '3.'],
	['⒋', '4.'],
	['⒌', '5.'],
	['⒍', '6.'],
	['⒎', '7.'],
	['⒏', '8.'],
	['⒐', '9.'],
	['⒑', '10.'],
	['⒒', '11.'],
	['⒓', '12.'],
	['⒔', '13.'],
	['⒕', '14.'],
	['⒖', '15.'],
	['⒗', '16.'],
	['⒘', '17.'],
	['⒙', '18.'],
	['⒚', '19.'],
	['⒛', '20.'],
	['⓪', '0'],
	['⓫', '11'],
	['⓬', '12'],
	['⓭', '13'],
	['⓮', '14'],
	['⓯', '15'],
	['⓰', '16'],
	['⓱', '17'],
	['⓲', '18'],
	['⓳', '19'],
	['⓴', '20'],
	['⓵', '1'],
	['⓶', '2'],
	['⓷', '3'],
	['⓸', '4'],
	['⓹', '5'],
	['⓺', '6'],
	['⓻', '7'],
	['⓼', '8'],
	['⓽', '9'],
	['⓾', '10'],
	['⓿', '0'],

	// Punctuation
	['🙰', '&'],
	['🙱', '&'],
	['🙲', '&'],
	['🙳', '&'],
	['🙴', '&'],
	['🙵', '&'],
	['🙶', '"'],
	['🙷', '"'],
	['🙸', '"'],
	['‽', '?!'],
	['🙹', '?!'],
	['🙺', '?!'],
	['🙻', '?!'],
	['🙼', '/'],
	['🙽', '\\'],

	// Alchemy
	['🜇', 'AR'],
	['🜈', 'V'],
	['🜉', 'V'],
	['🜆', 'VR'],
	['🜅', 'VF'],
	['🜩', '2'],
	['🜪', '5'],
	['🝡', 'f'],
	['🝢', 'W'],
	['🝣', 'U'],
	['🝧', 'V'],
	['🝨', 'T'],
	['🝪', 'V'],
	['🝫', 'MB'],
	['🝬', 'VB'],
	['🝲', '3B'],
	['🝳', '3B'],

	// Emojis
	['💯', '100'],
	['🔙', 'BACK'],
	['🔚', 'END'],
	['🔛', 'ON!'],
	['🔜', 'SOON'],
	['🔝', 'TOP'],
	['🔞', '18'],
	['🔤', 'abc'],
	['🔠', 'ABCD'],
	['🔡', 'abcd'],
	['🔢', '1234'],
	['🔣', 'T&@%'],
	['#️⃣', '#'],
	['*️⃣', '*'],
	['0️⃣', '0'],
	['1️⃣', '1'],
	['2️⃣', '2'],
	['3️⃣', '3'],
	['4️⃣', '4'],
	['5️⃣', '5'],
	['6️⃣', '6'],
	['7️⃣', '7'],
	['8️⃣', '8'],
	['9️⃣', '9'],
	['🔟', '10'],
	['🅰️', 'A'],
	['🅱️', 'B'],
	['🆎', 'AB'],
	['🆑', 'CL'],
	['🅾️', 'O'],
	['🅿', 'P'],
	['🆘', 'SOS'],
	['🅲', 'C'],
	['🅳', 'D'],
	['🅴', 'E'],
	['🅵', 'F'],
	['🅶', 'G'],
	['🅷', 'H'],
	['🅸', 'I'],
	['🅹', 'J'],
	['🅺', 'K'],
	['🅻', 'L'],
	['🅼', 'M'],
	['🅽', 'N'],
	['🆀', 'Q'],
	['🆁', 'R'],
	['🆂', 'S'],
	['🆃', 'T'],
	['🆄', 'U'],
	['🆅', 'V'],
	['🆆', 'W'],
	['🆇', 'X'],
	['🆈', 'Y'],
	['🆉', 'Z']
];

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (replacements);


/***/ }),

/***/ "../node_modules/escape-string-regexp/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/escape-string-regexp/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ escapeStringRegexp)
/* harmony export */ });
function escapeStringRegexp(string) {
	if (typeof string !== 'string') {
		throw new TypeError('Expected a string');
	}

	// Escape characters with special meaning either inside or outside character sets.
	// Use a simple backslash escape when it’s always valid, and a `\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.
	return string
		.replace(/[|\\{}()[\]^$+*?.]/g, '\\$&')
		.replace(/-/g, '\\x2d');
}


/***/ }),

/***/ "../node_modules/jsx-dom/index.js":
/*!****************************************!*\
  !*** ../node_modules/jsx-dom/index.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "h": () => (/* binding */ createElement)
/* harmony export */ });
/* unused harmony exports Component, Fragment, PureComponent, SVGNamespace, StrictMode, className, createElement, createFactory, createRef, default, isRef, jsx, jsxs, memo, preventDefault, stopPropagation, styled, useCallback, useClassList, useMemo, useRef, useText */
/* eslint-disable */
const keys = Object.keys
function identity(value) {
  return value
}
function isBoolean(val) {
  return typeof val === "boolean"
}
function isElement(val) {
  return val && typeof val.nodeType === "number"
}
function isString(val) {
  return typeof val === "string"
}
function isNumber(val) {
  return typeof val === "number"
}
function isObject(val) {
  return typeof val === "object" ? val !== null : isFunction(val)
}
function isFunction(val) {
  return typeof val === "function"
}
function isComponentClass(Component) {
  const { prototype } = Component
  return !!(prototype && prototype.isReactComponent)
}
function isArrayLike(obj) {
  return isObject(obj) && typeof obj.length === "number" && typeof obj.nodeType !== "number"
}
function forEach(value, fn) {
  if (!value) return

  for (const key of keys(value)) {
    fn(value[key], key)
  }
}

function createRef() {
  return Object.seal({
    current: null,
  })
}
function isRef(maybeRef) {
  return isObject(maybeRef) && "current" in maybeRef
}

const isUnitlessNumber = {
  animationIterationCount: 0,
  borderImageOutset: 0,
  borderImageSlice: 0,
  borderImageWidth: 0,
  boxFlex: 0,
  boxFlexGroup: 0,
  boxOrdinalGroup: 0,
  columnCount: 0,
  columns: 0,
  flex: 0,
  flexGrow: 0,
  flexPositive: 0,
  flexShrink: 0,
  flexNegative: 0,
  flexOrder: 0,
  gridArea: 0,
  gridRow: 0,
  gridRowEnd: 0,
  gridRowSpan: 0,
  gridRowStart: 0,
  gridColumn: 0,
  gridColumnEnd: 0,
  gridColumnSpan: 0,
  gridColumnStart: 0,
  fontWeight: 0,
  lineClamp: 0,
  lineHeight: 0,
  opacity: 0,
  order: 0,
  orphans: 0,
  tabSize: 0,
  widows: 0,
  zIndex: 0,
  zoom: 0,
  fillOpacity: 0,
  floodOpacity: 0,
  stopOpacity: 0,
  strokeDasharray: 0,
  strokeDashoffset: 0,
  strokeMiterlimit: 0,
  strokeOpacity: 0,
  strokeWidth: 0,
}

function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1)
}

const prefixes = ["Webkit", "ms", "Moz", "O"]
keys(isUnitlessNumber).forEach(prop => {
  prefixes.forEach(prefix => {
    isUnitlessNumber[prefixKey(prefix, prop)] = 0
  })
})

const SVGNamespace = "http://www.w3.org/2000/svg"
const XLinkNamespace = "http://www.w3.org/1999/xlink"
const XMLNamespace = "http://www.w3.org/XML/1998/namespace"

function isVisibleChild(value) {
  return !isBoolean(value) && value != null
}

function className(value) {
  if (Array.isArray(value)) {
    return value.map(className).filter(Boolean).join(" ")
  } else if (isObject(value)) {
    return keys(value)
      .filter(k => value[k])
      .join(" ")
  } else if (isVisibleChild(value)) {
    return "" + value
  } else {
    return ""
  }
}
const svg = {
  animate: 0,
  circle: 0,
  clipPath: 0,
  defs: 0,
  desc: 0,
  ellipse: 0,
  feBlend: 0,
  feColorMatrix: 0,
  feComponentTransfer: 0,
  feComposite: 0,
  feConvolveMatrix: 0,
  feDiffuseLighting: 0,
  feDisplacementMap: 0,
  feDistantLight: 0,
  feFlood: 0,
  feFuncA: 0,
  feFuncB: 0,
  feFuncG: 0,
  feFuncR: 0,
  feGaussianBlur: 0,
  feImage: 0,
  feMerge: 0,
  feMergeNode: 0,
  feMorphology: 0,
  feOffset: 0,
  fePointLight: 0,
  feSpecularLighting: 0,
  feSpotLight: 0,
  feTile: 0,
  feTurbulence: 0,
  filter: 0,
  foreignObject: 0,
  g: 0,
  image: 0,
  line: 0,
  linearGradient: 0,
  marker: 0,
  mask: 0,
  metadata: 0,
  path: 0,
  pattern: 0,
  polygon: 0,
  polyline: 0,
  radialGradient: 0,
  rect: 0,
  stop: 0,
  svg: 0,
  switch: 0,
  symbol: 0,
  text: 0,
  textPath: 0,
  tspan: 0,
  use: 0,
  view: 0,
}
const nonPresentationSVGAttributes =
  /^(a(ll|t|u)|base[FP]|c(al|lipPathU|on)|di|ed|ex|filter[RU]|g(lyphR|r)|ke|l(en|im)|ma(rker[HUW]|s)|n|pat|pr|point[^e]|re[^n]|s[puy]|st[^or]|ta|textL|vi|xC|y|z)/
function createFactory(tag) {
  return createElement.bind(null, tag)
}
function Fragment(attr) {
  const fragment = document.createDocumentFragment()
  appendChild(attr.children, fragment)
  return fragment
}
class Component {
  constructor(props) {
    this.props = props
  }

  render() {
    return null
  }
}
Object.defineProperties(Component.prototype, {
  isReactComponent: {
    value: true,
  },
})

function initComponentClass(Class, attr, children) {
  attr = { ...attr, children }
  const instance = new Class(attr)
  return instance.render()
}

function jsx(tag, { children, ...attr }) {
  if (!attr.namespaceURI && svg[tag] === 0) {
    attr = { ...attr, namespaceURI: SVGNamespace }
  }

  let node

  if (isString(tag)) {
    node = attr.namespaceURI
      ? document.createElementNS(attr.namespaceURI, tag)
      : document.createElement(tag)
    attributes(attr, node)
    appendChild(children, node)

    if (node instanceof window.HTMLSelectElement && attr.value != null) {
      if (attr.multiple === true && Array.isArray(attr.value)) {
        const values = attr.value.map(value => String(value))
        node
          .querySelectorAll("option")
          .forEach(option => (option.selected = values.includes(option.value)))
      } else {
        node.value = attr.value
      }
    }

    if (isRef(attr.ref)) {
      attr.ref.current = node
    } else if (isFunction(attr.ref)) {
      attr.ref(node)
    }
  } else if (isFunction(tag)) {
    if (isObject(tag.defaultProps)) {
      attr = { ...tag.defaultProps, ...attr }
    }

    node = isComponentClass(tag)
      ? initComponentClass(tag, attr, children)
      : tag({ ...attr, children })
  }

  return node
}
function createElement(tag, attr, ...children) {
  if (isString(attr) || Array.isArray(attr)) {
    children.unshift(attr)
    attr = {}
  }

  attr = attr || {}

  if (attr.children != null && !children.length) {
    ;({ children, ...attr } = attr)
  }

  return jsx(tag, { ...attr, children }, attr.key)
}

function appendChild(child, node) {
  if (isArrayLike(child)) {
    appendChildren(child, node)
  } else if (isString(child) || isNumber(child)) {
    appendChildToNode(document.createTextNode(child), node)
  } else if (child === null) {
    appendChildToNode(document.createComment(""), node)
  } else if (isElement(child)) {
    appendChildToNode(child, node)
  }
}

function appendChildren(children, node) {
  for (const child of [...children]) {
    appendChild(child, node)
  }

  return node
}

function appendChildToNode(child, node) {
  if (node instanceof window.HTMLTemplateElement) {
    node.content.appendChild(child)
  } else {
    node.appendChild(child)
  }
}

function normalizeAttribute(s, separator) {
  return s.replace(/[A-Z\d]/g, match => separator + match.toLowerCase())
}

function style(node, value) {
  if (value == null || value === false);
  else if (Array.isArray(value)) {
    value.forEach(v => style(node, v))
  } else if (isString(value)) {
    node.setAttribute("style", value)
  } else if (isObject(value)) {
    forEach(value, (val, key) => {
      if (isNumber(val) && isUnitlessNumber[key] !== 0) {
        node.style[key] = val + "px"
      } else {
        node.style[key] = val
      }
    })
  }
}

function attribute(key, value, node) {
  switch (key) {
    case "xlinkActuate":
    case "xlinkArcrole":
    case "xlinkHref":
    case "xlinkRole":
    case "xlinkShow":
    case "xlinkTitle":
    case "xlinkType":
      attrNS(node, XLinkNamespace, normalizeAttribute(key, ":"), value)
      return

    case "xmlnsXlink":
      attr(node, normalizeAttribute(key, ":"), value)
      return

    case "xmlBase":
    case "xmlLang":
    case "xmlSpace":
      attrNS(node, XMLNamespace, normalizeAttribute(key, ":"), value)
      return
  }

  switch (key) {
    case "htmlFor":
      attr(node, "for", value)
      return

    case "dataset":
      forEach(value, (dataValue, dataKey) => {
        if (dataValue != null) {
          node.dataset[dataKey] = dataValue
        }
      })
      return

    case "innerHTML":
    case "innerText":
    case "textContent":
      if (isVisibleChild(value)) {
        node[key] = value
      }

      return

    case "dangerouslySetInnerHTML":
      if (isObject(value)) {
        node.innerHTML = value["__html"]
      }

      return

    case "value":
      if (value == null || node instanceof window.HTMLSelectElement) {
        return
      } else if (node instanceof window.HTMLTextAreaElement) {
        node.value = value
        return
      }

      break

    case "spellCheck":
      node.spellcheck = value
      return

    case "class":
    case "className":
      if (isFunction(value)) {
        value(node)
      } else {
        attr(node, "class", className(value))
      }

      return

    case "ref":
    case "namespaceURI":
      return

    case "style":
      style(node, value)
      return
  }

  if (isFunction(value)) {
    if (key[0] === "o" && key[1] === "n") {
      const attribute = key.toLowerCase()

      if (node[attribute] == null) {
        node[attribute] = value
      } else {
        node.addEventListener(key, value)
      }
    }
  } else if (isObject(value)) {
    node[key] = value
  } else if (value === true) {
    attr(node, key, "")
  } else if (value !== false && value != null) {
    if (node instanceof SVGElement && !nonPresentationSVGAttributes.test(key)) {
      attr(node, normalizeAttribute(key, "-"), value)
    } else {
      attr(node, key, value)
    }
  }
}

function attr(node, key, value) {
  node.setAttribute(key, value)
}

function attrNS(node, namespace, key, value) {
  node.setAttributeNS(namespace, key, value)
}

function attributes(attr, node) {
  for (const key of keys(attr)) {
    attribute(key, attr[key], node)
  }

  return node
}

function useText(initialValue) {
  const text = new Text()
  Object.defineProperty(text, "toString", {
    value() {
      return this.textContent
    },
  })

  function setText(value) {
    text.textContent = value
  }

  if (initialValue != null) {
    setText(initialValue)
  }

  return [text, setText]
}
function useClassList(initialValue) {
  const div = document.createElement("div")

  if (initialValue != null) {
    div.className = className(initialValue)
  }

  let list = div.classList

  function ClassList(value) {
    value.setAttribute("class", list.value)
    list = value.classList
  }

  Object.defineProperties(
    ClassList,
    Object.getOwnPropertyDescriptors({
      get size() {
        return list.length
      },

      get value() {
        return list.value
      },

      add(...tokens) {
        list.add(...tokens)
      },

      remove(...tokens) {
        list.remove(...tokens)
      },

      toggle(token, force) {
        list.toggle(token, force)
      },

      contains(token) {
        return list.contains(token)
      },
    })
  )
  return ClassList
}

function useMemo(factory) {
  return factory()
}

const cache = new Map()

const createStyledComponent =
  name =>
  (list, ...interpolations) =>
  ({ style, ...props }) => {
    const lastIndex = list.length - 1
    const css =
      list.slice(0, lastIndex).reduce((p, s, i) => p + s + interpolations[i](props), "") +
      list[lastIndex]
    return createElement(name, {
      style: [css, style],
      ...props,
    })
  }

const baseStyled = customComponent => createStyledComponent(customComponent)

const styled = new Proxy(baseStyled, {
  get(_, name) {
    return setIfAbsent(cache, name, () => createStyledComponent(name))
  },
})

function setIfAbsent(map, key, getValue) {
  if (map.has(key)) {
    return map.get(key)
  } else {
    const value = getValue(key)
    map.set(key, value)
    return value
  }
}

var index = {
  Component,
  PureComponent: Component,
  createElement,
  Fragment,
}
function preventDefault(event) {
  event.preventDefault()
  return event
}
function stopPropagation(event) {
  event.stopPropagation()
  return event
}




/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".primer_spec_plugin.min.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		// data-webpack is not used as build has no uniqueName
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!******************!*\
  !*** ./main.tsx ***!
  \******************/
/* harmony import */ var anchor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! anchor-js */ "../node_modules/anchor-js/anchor.js");
/* harmony import */ var anchor_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(anchor_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! preact */ "../node_modules/preact/dist/preact.module.js");
/* harmony import */ var _components_PrimerSpec__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/PrimerSpec */ "./components/PrimerSpec.tsx");
/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Config */ "./Config.ts");
/* harmony import */ var _subthemes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./subthemes */ "./subthemes/index.ts");





/**
 * The entry point to the Primer Spec JS.
 */
function main() {
    const anchors = new (anchor_js__WEBPACK_IMPORTED_MODULE_0___default())();
    anchors.add('h1');
    anchors.add();
    const main_content_node = document.getElementById(_Config__WEBPACK_IMPORTED_MODULE_2__["default"].PRIMER_SPEC_CONTENT_PLUGIN_NODE_ID);
    const app_container_node = document.getElementById(_Config__WEBPACK_IMPORTED_MODULE_2__["default"].PRIMER_SPEC_APP_NODE_ID);
    if (!main_content_node ||
        main_content_node.tagName !== 'DIV' ||
        !app_container_node ||
        app_container_node.tagName !== 'DIV') {
        throw new Error('Primer Spec: This page included the Primer Spec plugin script, but was not compatible with the plugin!');
    }
    const main_content_html = main_content_node.innerHTML;
    main_content_node.remove();
    injectPrimerSpecStyleSheets();
    // Initialize the theme variables
    (0,_subthemes__WEBPACK_IMPORTED_MODULE_3__.updateTheme)({
        name: _Config__WEBPACK_IMPORTED_MODULE_2__["default"].INIT_SUBTHEME_NAME,
        mode: _Config__WEBPACK_IMPORTED_MODULE_2__["default"].INIT_SUBTHEME_MODE,
    }, false);
    // Listen for changes to the OS system theme.
    window
        .matchMedia('(prefers-color-scheme: dark)')
        .addListener(() => (0,_subthemes__WEBPACK_IMPORTED_MODULE_3__.updateTheme)());
    (0,preact__WEBPACK_IMPORTED_MODULE_1__.render)((0,preact__WEBPACK_IMPORTED_MODULE_1__.h)(_components_PrimerSpec__WEBPACK_IMPORTED_MODULE_4__["default"], { contentHTML: main_content_html }), app_container_node);
    // To make the theme more discoverable for potential contributors:
    console.info('\nThis page is formatted using %cPrimer Spec.%c\n\nWould you like to contribute to the theme? Check out:\nhttps://github.com/eecs485staff/primer-spec\n', 'font-weight: bolder;', '');
}
function injectPrimerSpecStyleSheets() {
    injectStyleSheet('https://use.fontawesome.com/releases/v5.7.2/css/all.css', 'sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr', 'anonymous');
}
function injectStyleSheet(href, integrity, crossOrigin) {
    const link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = href;
    if (integrity) {
        link.integrity = integrity;
    }
    if (crossOrigin) {
        link.crossOrigin = crossOrigin;
    }
    document.head.appendChild(link);
}
main();

})();

/******/ })()
;
//# sourceMappingURL=primer_spec_plugin.min.js.map